   1               		.file	"uart.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   9               		.text
  10               	.Ltext0:
 117               	.global	uart_init
 119               	uart_init:
 120               		.stabd	46,0,0
   1:uart.c        **** 
   2:uart.c        **** #include "uart.h"
   3:uart.c        **** 
   4:uart.c        **** // inicjalizacja UART
   5:uart.c        **** void uart_init() {
 122               	.LM0:
 123               	.LFBB1:
 124               	/* prologue: function */
 125               	/* frame size = 0 */
 126               	/* stack size = 0 */
 127               	.L__stack_usage = 0
   6:uart.c        ****   // ustaw baudrate
   7:uart.c        ****   UBRR0 = UBRR_VALUE;
 129               	.LM1:
 130 0000 87E6      		ldi r24,lo8(103)
 131 0002 90E0      		ldi r25,0
 132 0004 9093 C500 		sts 196+1,r25
 133 0008 8093 C400 		sts 196,r24
   8:uart.c        ****   // wyczyść rejestr UCSR0A
   9:uart.c        ****   UCSR0A = 0;
 135               	.LM2:
 136 000c 1092 C000 		sts 192,__zero_reg__
  10:uart.c        ****   // włącz odbiornik i nadajnik
  11:uart.c        ****   UCSR0B = _BV(RXEN0) | _BV(TXEN0);
 138               	.LM3:
 139 0010 88E1      		ldi r24,lo8(24)
 140 0012 8093 C100 		sts 193,r24
  12:uart.c        ****   // ustaw format 8n1
  13:uart.c        ****   UCSR0C = _BV(UCSZ00) | _BV(UCSZ01);
 142               	.LM4:
 143 0016 86E0      		ldi r24,lo8(6)
 144 0018 8093 C200 		sts 194,r24
 145 001c 0895      		ret
 147               	.Lscope1:
 149               		.stabd	78,0,0
 153               	.global	uart_transmit
 155               	uart_transmit:
 156               		.stabd	46,0,0
  14:uart.c        **** }
  15:uart.c        **** 
  16:uart.c        **** // transmisja jednego znaku
  17:uart.c        **** int uart_transmit(char data, FILE *stream) {
 158               	.LM5:
 159               	.LFBB2:
 160               	/* prologue: function */
 161               	/* frame size = 0 */
 162               	/* stack size = 0 */
 163               	.L__stack_usage = 0
 164               	.L3:
  18:uart.c        ****   // czekaj aż transmiter gotowy
  19:uart.c        ****   while (!(UCSR0A & _BV(UDRE0)))
 166               	.LM6:
 167 001e 9091 C000 		lds r25,192
 168 0022 95FF      		sbrs r25,5
 169 0024 00C0      		rjmp .L3
  20:uart.c        ****     ;
  21:uart.c        ****   UDR0 = data;
 171               	.LM7:
 172 0026 8093 C600 		sts 198,r24
  22:uart.c        ****   return 0;
  23:uart.c        **** }
 174               	.LM8:
 175 002a 80E0      		ldi r24,0
 176 002c 90E0      		ldi r25,0
 177 002e 0895      		ret
 179               	.Lscope2:
 181               		.stabd	78,0,0
 184               	.global	uart_receive
 186               	uart_receive:
 187               		.stabd	46,0,0
  24:uart.c        **** 
  25:uart.c        **** // odczyt jednego znaku
  26:uart.c        **** int uart_receive(FILE *stream) {
 189               	.LM9:
 190               	.LFBB3:
 191               	/* prologue: function */
 192               	/* frame size = 0 */
 193               	/* stack size = 0 */
 194               	.L__stack_usage = 0
 195               	.L8:
  27:uart.c        ****   // czekaj aż znak dostępny
  28:uart.c        ****   while (!(UCSR0A & _BV(RXC0)))
 197               	.LM10:
 198 0030 8091 C000 		lds r24,192
 199 0034 87FF      		sbrs r24,7
 200 0036 00C0      		rjmp .L8
  29:uart.c        ****     ;
  30:uart.c        ****   return UDR0;
 202               	.LM11:
 203 0038 8091 C600 		lds r24,198
  31:uart.c        **** }
 205               	.LM12:
 206 003c 90E0      		ldi r25,0
 207 003e 0895      		ret
 209               	.Lscope3:
 211               		.stabd	78,0,0
 213               	.Letext0:
 214               		.ident	"GCC: (GNU) 5.4.0"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 uart.c
     /tmp/cchRm14Q.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/cchRm14Q.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/cchRm14Q.s:4      *ABS*:000000000000003f __SREG__
     /tmp/cchRm14Q.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/cchRm14Q.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/cchRm14Q.s:119    .text:0000000000000000 uart_init
     /tmp/cchRm14Q.s:155    .text:000000000000001e uart_transmit
     /tmp/cchRm14Q.s:186    .text:0000000000000030 uart_receive

NO UNDEFINED SYMBOLS
