
led_array.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  000001ae  00000222  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000001ae  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .stab         000005dc  00000000  00000000  00000224  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000c93  00000000  00000000  00000800  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .comment      00000011  00000000  00000000  00001493  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000014a4  2**2
                  CONTENTS, READONLY
  6 .debug_info   000005f4  00000000  00000000  000014e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000005a2  00000000  00000000  00001ad8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000001a  00000000  00000000  0000207a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000208  00000000  00000000  00002094  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 40 00 	call	0x80	; 0x80 <main>
  78:	0c 94 d5 00 	jmp	0x1aa	; 0x1aa <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <main>:
// #define LED_DDR



int main() {
    UCSR0B &= ~_BV(RXEN0) & ~_BV(TXEN0);
  80:	80 91 c1 00 	lds	r24, 0x00C1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
  84:	87 7e       	andi	r24, 0xE7	; 231
  86:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    LED_DDR = 0xff;
  8a:	8f ef       	ldi	r24, 0xFF	; 255
  8c:	8a b9       	out	0x0a, r24	; 10
    LED_PORT = 0;
  8e:	1b b8       	out	0x0b, r1	; 11
                LED_PORT &= ~_BV(i-1);
            }
            if(i > 1){
                LED_PORT &= ~_BV(i-2);
            }
            LED_PORT |= _BV(i);
  90:	21 e0       	ldi	r18, 0x01	; 1
  92:	30 e0       	ldi	r19, 0x00	; 0
// #define LED PD1
// #define LED_DDR



int main() {
  94:	81 e0       	ldi	r24, 0x01	; 1
  96:	90 e0       	ldi	r25, 0x00	; 0
  98:	40 e0       	ldi	r20, 0x00	; 0
  9a:	50 e0       	ldi	r21, 0x00	; 0
  9c:	16 c0       	rjmp	.+44     	; 0xca <main+0x4a>
    // LED_PORT |= _BV(PD2);
    // LED_PORT |= _BV(PD7);
    while (1) {
        for(int8_t i = 0; i <= 5; i++){
            if(i > 0){
                LED_PORT &= ~_BV(i-1);
  9e:	7b b1       	in	r23, 0x0b	; 11
  a0:	60 95       	com	r22
  a2:	67 23       	and	r22, r23
  a4:	6b b9       	out	0x0b, r22	; 11
            }
            if(i > 1){
  a6:	81 30       	cpi	r24, 0x01	; 1
  a8:	69 f0       	breq	.+26     	; 0xc4 <main+0x44>
                LED_PORT &= ~_BV(i-2);
  aa:	7b b1       	in	r23, 0x0b	; 11
  ac:	fa 01       	movw	r30, r20
  ae:	31 97       	sbiw	r30, 0x01	; 1
  b0:	d9 01       	movw	r26, r18
  b2:	02 c0       	rjmp	.+4      	; 0xb8 <main+0x38>
  b4:	aa 0f       	add	r26, r26
  b6:	bb 1f       	adc	r27, r27
  b8:	ea 95       	dec	r30
  ba:	e2 f7       	brpl	.-8      	; 0xb4 <main+0x34>
  bc:	6a 2f       	mov	r22, r26
  be:	60 95       	com	r22
  c0:	67 23       	and	r22, r23
  c2:	6b b9       	out	0x0b, r22	; 11
  c4:	4f 5f       	subi	r20, 0xFF	; 255
  c6:	5f 4f       	sbci	r21, 0xFF	; 255
  c8:	01 96       	adiw	r24, 0x01	; 1
            }
            LED_PORT |= _BV(i);
  ca:	eb b1       	in	r30, 0x0b	; 11
  cc:	b9 01       	movw	r22, r18
  ce:	04 2e       	mov	r0, r20
  d0:	01 c0       	rjmp	.+2      	; 0xd4 <main+0x54>
  d2:	66 0f       	add	r22, r22
  d4:	0a 94       	dec	r0
  d6:	ea f7       	brpl	.-6      	; 0xd2 <main+0x52>
  d8:	e6 2b       	or	r30, r22
  da:	eb b9       	out	0x0b, r30	; 11
            LED_PORT |= _BV(i+1);
  dc:	ab b1       	in	r26, 0x0b	; 11
  de:	f9 01       	movw	r30, r18
  e0:	08 2e       	mov	r0, r24
  e2:	01 c0       	rjmp	.+2      	; 0xe6 <main+0x66>
  e4:	ee 0f       	add	r30, r30
  e6:	0a 94       	dec	r0
  e8:	ea f7       	brpl	.-6      	; 0xe4 <main+0x64>
  ea:	ea 2b       	or	r30, r26
  ec:	eb b9       	out	0x0b, r30	; 11
            LED_PORT |= _BV(i+2);
  ee:	ab b1       	in	r26, 0x0b	; 11
  f0:	fa 01       	movw	r30, r20
  f2:	32 96       	adiw	r30, 0x02	; 2
  f4:	e9 01       	movw	r28, r18
  f6:	02 c0       	rjmp	.+4      	; 0xfc <main+0x7c>
  f8:	cc 0f       	add	r28, r28
  fa:	dd 1f       	adc	r29, r29
  fc:	ea 95       	dec	r30
  fe:	e2 f7       	brpl	.-8      	; 0xf8 <main+0x78>
 100:	fe 01       	movw	r30, r28
 102:	ea 2b       	or	r30, r26
 104:	eb b9       	out	0x0b, r30	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 106:	df ef       	ldi	r29, 0xFF	; 255
 108:	e1 ee       	ldi	r30, 0xE1	; 225
 10a:	f4 e0       	ldi	r31, 0x04	; 4
 10c:	d1 50       	subi	r29, 0x01	; 1
 10e:	e0 40       	sbci	r30, 0x00	; 0
 110:	f0 40       	sbci	r31, 0x00	; 0
 112:	e1 f7       	brne	.-8      	; 0x10c <main+0x8c>
 114:	00 c0       	rjmp	.+0      	; 0x116 <main+0x96>
 116:	00 00       	nop
    // LED_PORT |= _BV(LED);
    // LED_DDR |= _BV(PD2);
    // LED_PORT |= _BV(PD2);
    // LED_PORT |= _BV(PD7);
    while (1) {
        for(int8_t i = 0; i <= 5; i++){
 118:	86 30       	cpi	r24, 0x06	; 6
 11a:	91 05       	cpc	r25, r1
 11c:	09 f0       	breq	.+2      	; 0x120 <main+0xa0>
 11e:	bf cf       	rjmp	.-130    	; 0x9e <main+0x1e>
 120:	67 e0       	ldi	r22, 0x07	; 7
 122:	70 e0       	ldi	r23, 0x00	; 0
 124:	16 c0       	rjmp	.+44     	; 0x152 <main+0xd2>
            LED_PORT |= _BV(i+2);
            _delay_ms(100);
        }
        for(int8_t i = 7;i >= 2; i--){
            if(i < 7){
                LED_PORT &= ~_BV(i+1);
 126:	5b b1       	in	r21, 0x0b	; 11
 128:	40 95       	com	r20
 12a:	45 23       	and	r20, r21
 12c:	4b b9       	out	0x0b, r20	; 11
            }
            if(i < 6){
 12e:	86 30       	cpi	r24, 0x06	; 6
 130:	69 f0       	breq	.+26     	; 0x14c <main+0xcc>
                LED_PORT &= ~_BV(i+2);
 132:	5b b1       	in	r21, 0x0b	; 11
 134:	fb 01       	movw	r30, r22
 136:	31 96       	adiw	r30, 0x01	; 1
 138:	d9 01       	movw	r26, r18
 13a:	02 c0       	rjmp	.+4      	; 0x140 <main+0xc0>
 13c:	aa 0f       	add	r26, r26
 13e:	bb 1f       	adc	r27, r27
 140:	ea 95       	dec	r30
 142:	e2 f7       	brpl	.-8      	; 0x13c <main+0xbc>
 144:	4a 2f       	mov	r20, r26
 146:	40 95       	com	r20
 148:	45 23       	and	r20, r21
 14a:	4b b9       	out	0x0b, r20	; 11
 14c:	61 50       	subi	r22, 0x01	; 1
 14e:	71 09       	sbc	r23, r1
 150:	01 97       	sbiw	r24, 0x01	; 1
            }

            LED_PORT |= _BV(i);
 152:	eb b1       	in	r30, 0x0b	; 11
 154:	a9 01       	movw	r20, r18
 156:	06 2e       	mov	r0, r22
 158:	01 c0       	rjmp	.+2      	; 0x15c <main+0xdc>
 15a:	44 0f       	add	r20, r20
 15c:	0a 94       	dec	r0
 15e:	ea f7       	brpl	.-6      	; 0x15a <main+0xda>
 160:	e4 2b       	or	r30, r20
 162:	eb b9       	out	0x0b, r30	; 11
            LED_PORT |= _BV(i-1);
 164:	ab b1       	in	r26, 0x0b	; 11
 166:	f9 01       	movw	r30, r18
 168:	08 2e       	mov	r0, r24
 16a:	01 c0       	rjmp	.+2      	; 0x16e <main+0xee>
 16c:	ee 0f       	add	r30, r30
 16e:	0a 94       	dec	r0
 170:	ea f7       	brpl	.-6      	; 0x16c <main+0xec>
 172:	ea 2b       	or	r30, r26
 174:	eb b9       	out	0x0b, r30	; 11
            LED_PORT |= _BV(i-2);
 176:	ab b1       	in	r26, 0x0b	; 11
 178:	fb 01       	movw	r30, r22
 17a:	32 97       	sbiw	r30, 0x02	; 2
 17c:	e9 01       	movw	r28, r18
 17e:	02 c0       	rjmp	.+4      	; 0x184 <main+0x104>
 180:	cc 0f       	add	r28, r28
 182:	dd 1f       	adc	r29, r29
 184:	ea 95       	dec	r30
 186:	e2 f7       	brpl	.-8      	; 0x180 <main+0x100>
 188:	fe 01       	movw	r30, r28
 18a:	ea 2b       	or	r30, r26
 18c:	eb b9       	out	0x0b, r30	; 11
 18e:	df ef       	ldi	r29, 0xFF	; 255
 190:	e1 ee       	ldi	r30, 0xE1	; 225
 192:	f4 e0       	ldi	r31, 0x04	; 4
 194:	d1 50       	subi	r29, 0x01	; 1
 196:	e0 40       	sbci	r30, 0x00	; 0
 198:	f0 40       	sbci	r31, 0x00	; 0
 19a:	e1 f7       	brne	.-8      	; 0x194 <main+0x114>
 19c:	00 c0       	rjmp	.+0      	; 0x19e <main+0x11e>
 19e:	00 00       	nop
            LED_PORT |= _BV(i);
            LED_PORT |= _BV(i+1);
            LED_PORT |= _BV(i+2);
            _delay_ms(100);
        }
        for(int8_t i = 7;i >= 2; i--){
 1a0:	81 30       	cpi	r24, 0x01	; 1
 1a2:	91 05       	cpc	r25, r1
 1a4:	09 f0       	breq	.+2      	; 0x1a8 <main+0x128>
 1a6:	bf cf       	rjmp	.-130    	; 0x126 <main+0xa6>
 1a8:	75 cf       	rjmp	.-278    	; 0x94 <main+0x14>

000001aa <_exit>:
 1aa:	f8 94       	cli

000001ac <__stop_program>:
 1ac:	ff cf       	rjmp	.-2      	; 0x1ac <__stop_program>
