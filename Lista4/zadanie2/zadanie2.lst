
zadanie2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000008  00800100  000008ce  00000962  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000008ce  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000014  00800108  00800108  0000096a  2**0
                  ALLOC
  3 .stab         00000a2c  00000000  00000000  0000096c  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000f06  00000000  00000000  00001398  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000011  00000000  00000000  0000229e  2**0
                  CONTENTS, READONLY
  6 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000022b0  2**2
                  CONTENTS, READONLY
  7 .debug_info   000005f4  00000000  00000000  000022f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000005a2  00000000  00000000  000028e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000001a  00000000  00000000  00002e86  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000208  00000000  00000000  00002ea0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ee ec       	ldi	r30, 0xCE	; 206
  7c:	f8 e0       	ldi	r31, 0x08	; 8
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a8 30       	cpi	r26, 0x08	; 8
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a8 e0       	ldi	r26, 0x08	; 8
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	ac 31       	cpi	r26, 0x1C	; 28
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <main>
  9e:	0c 94 65 04 	jmp	0x8ca	; 0x8ca <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <uart_transmit>:

// transmisja jednego znaku
int uart_transmit(char data, FILE *stream)
{
  // czekaj aż transmiter gotowy
  while(!(UCSR0A & _BV(UDRE0)));
  a6:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
  aa:	95 ff       	sbrs	r25, 5
  ac:	fc cf       	rjmp	.-8      	; 0xa6 <uart_transmit>
  UDR0 = data;
  ae:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
  return 0;
}
  b2:	80 e0       	ldi	r24, 0x00	; 0
  b4:	90 e0       	ldi	r25, 0x00	; 0
  b6:	08 95       	ret

000000b8 <uart_receive>:

// odczyt jednego znaku
int uart_receive(FILE *stream)
{
  // czekaj aż znak dostępny
  while (!(UCSR0A & _BV(RXC0)));
  b8:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
  bc:	87 ff       	sbrs	r24, 7
  be:	fc cf       	rjmp	.-8      	; 0xb8 <uart_receive>
  return UDR0;
  c0:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
}
  c4:	90 e0       	ldi	r25, 0x00	; 0
  c6:	08 95       	ret

000000c8 <light>:
#define LED_PORT PORTB 

#define MAX_VALUE 10000

void light(uint16_t value){
  if(value < 100){
  c8:	84 36       	cpi	r24, 0x64	; 100
  ca:	91 05       	cpc	r25, r1
  cc:	10 f1       	brcs	.+68     	; 0x112 <light+0x4a>
    OCR1A = MAX_VALUE;
  }
  else if(value < 200){
  ce:	88 3c       	cpi	r24, 0xC8	; 200
  d0:	91 05       	cpc	r25, r1
  d2:	c0 f0       	brcs	.+48     	; 0x104 <light+0x3c>
    OCR1A = MAX_VALUE - 625;
  }
  else if(value < 300){
  d4:	8c 32       	cpi	r24, 0x2C	; 44
  d6:	21 e0       	ldi	r18, 0x01	; 1
  d8:	92 07       	cpc	r25, r18
  da:	48 f1       	brcs	.+82     	; 0x12e <light+0x66>
    OCR1A = MAX_VALUE - 1406;
  }
  else if(value < 400){
  dc:	80 39       	cpi	r24, 0x90	; 144
  de:	21 e0       	ldi	r18, 0x01	; 1
  e0:	92 07       	cpc	r25, r18
  e2:	f0 f0       	brcs	.+60     	; 0x120 <light+0x58>
    OCR1A = MAX_VALUE - 2500;
  }
  else if(value < 500){
  e4:	84 3f       	cpi	r24, 0xF4	; 244
  e6:	21 e0       	ldi	r18, 0x01	; 1
  e8:	92 07       	cpc	r25, r18
  ea:	40 f1       	brcs	.+80     	; 0x13c <light+0x74>
    OCR1A = MAX_VALUE - 3906;
  }
  else if(value < 600){
  ec:	88 35       	cpi	r24, 0x58	; 88
  ee:	22 e0       	ldi	r18, 0x02	; 2
  f0:	92 07       	cpc	r25, r18
  f2:	90 f1       	brcs	.+100    	; 0x158 <light+0x90>
    OCR1A = MAX_VALUE - 5625;
  }
  else if(value < 700){
  f4:	8c 3b       	cpi	r24, 0xBC	; 188
  f6:	92 40       	sbci	r25, 0x02	; 2
  f8:	40 f1       	brcs	.+80     	; 0x14a <light+0x82>
    OCR1A = MAX_VALUE - 7656;
  }
  else{
    OCR1A = 0;
  fa:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
  fe:	10 92 88 00 	sts	0x0088, r1	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
 102:	08 95       	ret
void light(uint16_t value){
  if(value < 100){
    OCR1A = MAX_VALUE;
  }
  else if(value < 200){
    OCR1A = MAX_VALUE - 625;
 104:	8f e9       	ldi	r24, 0x9F	; 159
 106:	94 e2       	ldi	r25, 0x24	; 36
 108:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
 10c:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
 110:	08 95       	ret

#define MAX_VALUE 10000

void light(uint16_t value){
  if(value < 100){
    OCR1A = MAX_VALUE;
 112:	80 e1       	ldi	r24, 0x10	; 16
 114:	97 e2       	ldi	r25, 0x27	; 39
 116:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
 11a:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
 11e:	08 95       	ret
  }
  else if(value < 300){
    OCR1A = MAX_VALUE - 1406;
  }
  else if(value < 400){
    OCR1A = MAX_VALUE - 2500;
 120:	8c e4       	ldi	r24, 0x4C	; 76
 122:	9d e1       	ldi	r25, 0x1D	; 29
 124:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
 128:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
 12c:	08 95       	ret
  }
  else if(value < 200){
    OCR1A = MAX_VALUE - 625;
  }
  else if(value < 300){
    OCR1A = MAX_VALUE - 1406;
 12e:	82 e9       	ldi	r24, 0x92	; 146
 130:	91 e2       	ldi	r25, 0x21	; 33
 132:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
 136:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
 13a:	08 95       	ret
  }
  else if(value < 400){
    OCR1A = MAX_VALUE - 2500;
  }
  else if(value < 500){
    OCR1A = MAX_VALUE - 3906;
 13c:	8e ec       	ldi	r24, 0xCE	; 206
 13e:	97 e1       	ldi	r25, 0x17	; 23
 140:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
 144:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
 148:	08 95       	ret
  }
  else if(value < 600){
    OCR1A = MAX_VALUE - 5625;
  }
  else if(value < 700){
    OCR1A = MAX_VALUE - 7656;
 14a:	88 e2       	ldi	r24, 0x28	; 40
 14c:	99 e0       	ldi	r25, 0x09	; 9
 14e:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
 152:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
 156:	08 95       	ret
  }
  else if(value < 500){
    OCR1A = MAX_VALUE - 3906;
  }
  else if(value < 600){
    OCR1A = MAX_VALUE - 5625;
 158:	87 e1       	ldi	r24, 0x17	; 23
 15a:	91 e1       	ldi	r25, 0x11	; 17
 15c:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
 160:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
 164:	08 95       	ret

00000166 <uart_init>:

// inicjalizacja UART
void uart_init()
{
  // ustaw baudrate
  UBRR0 = UBRR_VALUE;
 166:	87 e6       	ldi	r24, 0x67	; 103
 168:	90 e0       	ldi	r25, 0x00	; 0
 16a:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
 16e:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
  // wyczyść rejestr UCSR0A
  UCSR0A = 0;
 172:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
  // włącz odbiornik i nadajnik
  UCSR0B = _BV(RXEN0) | _BV(TXEN0);
 176:	88 e1       	ldi	r24, 0x18	; 24
 178:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
  // ustaw format 8n1
  UCSR0C = _BV(UCSZ00) | _BV(UCSZ01);
 17c:	86 e0       	ldi	r24, 0x06	; 6
 17e:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
 182:	08 95       	ret

00000184 <read_ADC>:
    ADCSRA = _BV(ADPS0) | _BV(ADPS1) | _BV(ADPS2);
    ADCSRA |= _BV(ADEN);
}

uint16_t read_ADC(){
  ADCSRA |= _BV(ADSC); // wykonaj konwersję
 184:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
 188:	80 64       	ori	r24, 0x40	; 64
 18a:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
  while (!(ADCSRA & _BV(ADIF))); // czekaj na wynik
 18e:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
 192:	84 ff       	sbrs	r24, 4
 194:	fc cf       	rjmp	.-8      	; 0x18e <read_ADC+0xa>
  ADCSRA |= _BV(ADIF); // wyczyść bit ADIF (pisząc 1!)
 196:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
 19a:	80 61       	ori	r24, 0x10	; 16
 19c:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
  uint16_t v = ADC; // weź zmierzoną wartość (0..1023)
 1a0:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
 1a4:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
  // printf("%u\r\n",v>>3);
  return v >> 3;
}
 1a8:	96 95       	lsr	r25
 1aa:	87 95       	ror	r24
 1ac:	96 95       	lsr	r25
 1ae:	87 95       	ror	r24
 1b0:	96 95       	lsr	r25
 1b2:	87 95       	ror	r24
 1b4:	08 95       	ret

000001b6 <timer1_init>:

void timer1_init()
{
  ICR1 = 15624;
 1b6:	88 e0       	ldi	r24, 0x08	; 8
 1b8:	9d e3       	ldi	r25, 0x3D	; 61
 1ba:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x7f8087>
 1be:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7f8086>
  TCCR1A = _BV(COM1A1) | _BV(WGM11);
 1c2:	82 e8       	ldi	r24, 0x82	; 130
 1c4:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
  TCCR1B = _BV(WGM12) | _BV(WGM13) | _BV(CS00);// | _BV(CS10) | _BV(CS12);
 1c8:	89 e1       	ldi	r24, 0x19	; 25
 1ca:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
  DDRB |= _BV(PB1);
 1ce:	21 9a       	sbi	0x04, 1	; 4
 1d0:	08 95       	ret

000001d2 <main>:
}

FILE uart_file;

static inline void adc_init(){
    ADMUX = _BV(REFS0);
 1d2:	80 e4       	ldi	r24, 0x40	; 64
 1d4:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    ADMUX &= ~(0b1111);
 1d8:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
 1dc:	80 7f       	andi	r24, 0xF0	; 240
 1de:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    DIDR0 = _BV(ADC0D);
 1e2:	81 e0       	ldi	r24, 0x01	; 1
 1e4:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <__TEXT_REGION_LENGTH__+0x7f807e>
    ADCSRA = _BV(ADPS0) | _BV(ADPS1) | _BV(ADPS2);
 1e8:	87 e0       	ldi	r24, 0x07	; 7
 1ea:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    ADCSRA |= _BV(ADEN);
 1ee:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
 1f2:	80 68       	ori	r24, 0x80	; 128
 1f4:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
}


int main(){
  adc_init();
  UCSR0B |= _BV(RXEN0) | _BV(TXEN0);
 1f8:	80 91 c1 00 	lds	r24, 0x00C1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
 1fc:	88 61       	ori	r24, 0x18	; 24
 1fe:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>

// inicjalizacja UART
void uart_init()
{
  // ustaw baudrate
  UBRR0 = UBRR_VALUE;
 202:	87 e6       	ldi	r24, 0x67	; 103
 204:	90 e0       	ldi	r25, 0x00	; 0
 206:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
 20a:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
  // wyczyść rejestr UCSR0A
  UCSR0A = 0;
 20e:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
  // włącz odbiornik i nadajnik
  UCSR0B = _BV(RXEN0) | _BV(TXEN0);
 212:	88 e1       	ldi	r24, 0x18	; 24
 214:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
  // ustaw format 8n1
  UCSR0C = _BV(UCSZ00) | _BV(UCSZ01);
 218:	86 e0       	ldi	r24, 0x06	; 6
 21a:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
  return v >> 3;
}

void timer1_init()
{
  ICR1 = 15624;
 21e:	88 e0       	ldi	r24, 0x08	; 8
 220:	9d e3       	ldi	r25, 0x3D	; 61
 222:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x7f8087>
 226:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7f8086>
  TCCR1A = _BV(COM1A1) | _BV(WGM11);
 22a:	82 e8       	ldi	r24, 0x82	; 130
 22c:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
  TCCR1B = _BV(WGM12) | _BV(WGM13) | _BV(CS00);// | _BV(CS10) | _BV(CS12);
 230:	89 e1       	ldi	r24, 0x19	; 25
 232:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
  DDRB |= _BV(PB1);
 236:	21 9a       	sbi	0x04, 1	; 4
int main(){
  adc_init();
  UCSR0B |= _BV(RXEN0) | _BV(TXEN0);
  uart_init();
  timer1_init();
  fdev_setup_stream(&uart_file, uart_transmit, uart_receive, _FDEV_SETUP_RW);
 238:	88 e0       	ldi	r24, 0x08	; 8
 23a:	91 e0       	ldi	r25, 0x01	; 1
 23c:	23 e5       	ldi	r18, 0x53	; 83
 23e:	30 e0       	ldi	r19, 0x00	; 0
 240:	30 93 11 01 	sts	0x0111, r19	; 0x800111 <__data_end+0x9>
 244:	20 93 10 01 	sts	0x0110, r18	; 0x800110 <__data_end+0x8>
 248:	2c e5       	ldi	r18, 0x5C	; 92
 24a:	30 e0       	ldi	r19, 0x00	; 0
 24c:	30 93 13 01 	sts	0x0113, r19	; 0x800113 <__data_end+0xb>
 250:	20 93 12 01 	sts	0x0112, r18	; 0x800112 <__data_end+0xa>
 254:	23 e0       	ldi	r18, 0x03	; 3
 256:	20 93 0b 01 	sts	0x010B, r18	; 0x80010b <__data_end+0x3>
 25a:	10 92 15 01 	sts	0x0115, r1	; 0x800115 <__data_end+0xd>
 25e:	10 92 14 01 	sts	0x0114, r1	; 0x800114 <__data_end+0xc>
  stdin = stdout = stderr = &uart_file;
 262:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <__iob+0x5>
 266:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <__iob+0x4>
 26a:	90 93 19 01 	sts	0x0119, r25	; 0x800119 <__iob+0x3>
 26e:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <__iob+0x2>
 272:	90 93 17 01 	sts	0x0117, r25	; 0x800117 <__iob+0x1>
 276:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <__iob>
  while(1){
    uint16_t value = read_ADC();
    //printf("%u\r\n",value*value);
    value = value <= 100 ? value : 100;
    // OCR1A = 0;
    OCR1A = MAX_VALUE - value * value;
 27a:	00 e1       	ldi	r16, 0x10	; 16
 27c:	17 e2       	ldi	r17, 0x27	; 39
    printf("%u\t%u\r\n",value,OCR1A);
 27e:	c0 e0       	ldi	r28, 0x00	; 0
 280:	d1 e0       	ldi	r29, 0x01	; 1
    ADCSRA = _BV(ADPS0) | _BV(ADPS1) | _BV(ADPS2);
    ADCSRA |= _BV(ADEN);
}

uint16_t read_ADC(){
  ADCSRA |= _BV(ADSC); // wykonaj konwersję
 282:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
 286:	80 64       	ori	r24, 0x40	; 64
 288:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
  while (!(ADCSRA & _BV(ADIF))); // czekaj na wynik
 28c:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
 290:	84 ff       	sbrs	r24, 4
 292:	fc cf       	rjmp	.-8      	; 0x28c <main+0xba>
  ADCSRA |= _BV(ADIF); // wyczyść bit ADIF (pisząc 1!)
 294:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
 298:	80 61       	ori	r24, 0x10	; 16
 29a:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
  uint16_t v = ADC; // weź zmierzoną wartość (0..1023)
 29e:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
 2a2:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
  stdin = stdout = stderr = &uart_file;
  // DDRB |= _BV(PB1);
  while(1){
    uint16_t value = read_ADC();
    //printf("%u\r\n",value*value);
    value = value <= 100 ? value : 100;
 2a6:	96 95       	lsr	r25
 2a8:	87 95       	ror	r24
 2aa:	96 95       	lsr	r25
 2ac:	87 95       	ror	r24
 2ae:	96 95       	lsr	r25
 2b0:	87 95       	ror	r24
 2b2:	85 36       	cpi	r24, 0x65	; 101
 2b4:	91 05       	cpc	r25, r1
 2b6:	10 f0       	brcs	.+4      	; 0x2bc <main+0xea>
 2b8:	84 e6       	ldi	r24, 0x64	; 100
 2ba:	90 e0       	ldi	r25, 0x00	; 0
    // OCR1A = 0;
    OCR1A = MAX_VALUE - value * value;
 2bc:	88 9f       	mul	r24, r24
 2be:	90 01       	movw	r18, r0
 2c0:	89 9f       	mul	r24, r25
 2c2:	30 0d       	add	r19, r0
 2c4:	30 0d       	add	r19, r0
 2c6:	11 24       	eor	r1, r1
 2c8:	a8 01       	movw	r20, r16
 2ca:	42 1b       	sub	r20, r18
 2cc:	53 0b       	sbc	r21, r19
 2ce:	50 93 89 00 	sts	0x0089, r21	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
 2d2:	40 93 88 00 	sts	0x0088, r20	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
    printf("%u\t%u\r\n",value,OCR1A);
 2d6:	20 91 88 00 	lds	r18, 0x0088	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
 2da:	30 91 89 00 	lds	r19, 0x0089	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
 2de:	3f 93       	push	r19
 2e0:	2f 93       	push	r18
 2e2:	9f 93       	push	r25
 2e4:	8f 93       	push	r24
 2e6:	df 93       	push	r29
 2e8:	cf 93       	push	r28
 2ea:	0e 94 87 01 	call	0x30e	; 0x30e <printf>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2ee:	9f ef       	ldi	r25, 0xFF	; 255
 2f0:	21 ee       	ldi	r18, 0xE1	; 225
 2f2:	44 e0       	ldi	r20, 0x04	; 4
 2f4:	91 50       	subi	r25, 0x01	; 1
 2f6:	20 40       	sbci	r18, 0x00	; 0
 2f8:	40 40       	sbci	r20, 0x00	; 0
 2fa:	e1 f7       	brne	.-8      	; 0x2f4 <main+0x122>
 2fc:	00 c0       	rjmp	.+0      	; 0x2fe <main+0x12c>
 2fe:	00 00       	nop
 300:	0f 90       	pop	r0
 302:	0f 90       	pop	r0
 304:	0f 90       	pop	r0
 306:	0f 90       	pop	r0
 308:	0f 90       	pop	r0
 30a:	0f 90       	pop	r0
 30c:	ba cf       	rjmp	.-140    	; 0x282 <main+0xb0>

0000030e <printf>:
 30e:	a0 e0       	ldi	r26, 0x00	; 0
 310:	b0 e0       	ldi	r27, 0x00	; 0
 312:	ed e8       	ldi	r30, 0x8D	; 141
 314:	f1 e0       	ldi	r31, 0x01	; 1
 316:	0c 94 3e 04 	jmp	0x87c	; 0x87c <__prologue_saves__+0x20>
 31a:	ae 01       	movw	r20, r28
 31c:	4b 5f       	subi	r20, 0xFB	; 251
 31e:	5f 4f       	sbci	r21, 0xFF	; 255
 320:	fa 01       	movw	r30, r20
 322:	61 91       	ld	r22, Z+
 324:	71 91       	ld	r23, Z+
 326:	af 01       	movw	r20, r30
 328:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <__iob+0x2>
 32c:	90 91 19 01 	lds	r25, 0x0119	; 0x800119 <__iob+0x3>
 330:	0e 94 9d 01 	call	0x33a	; 0x33a <vfprintf>
 334:	e2 e0       	ldi	r30, 0x02	; 2
 336:	0c 94 5a 04 	jmp	0x8b4	; 0x8b4 <__epilogue_restores__+0x20>

0000033a <vfprintf>:
 33a:	ab e0       	ldi	r26, 0x0B	; 11
 33c:	b0 e0       	ldi	r27, 0x00	; 0
 33e:	e3 ea       	ldi	r30, 0xA3	; 163
 340:	f1 e0       	ldi	r31, 0x01	; 1
 342:	0c 94 2e 04 	jmp	0x85c	; 0x85c <__prologue_saves__>
 346:	6c 01       	movw	r12, r24
 348:	7b 01       	movw	r14, r22
 34a:	8a 01       	movw	r16, r20
 34c:	fc 01       	movw	r30, r24
 34e:	17 82       	std	Z+7, r1	; 0x07
 350:	16 82       	std	Z+6, r1	; 0x06
 352:	83 81       	ldd	r24, Z+3	; 0x03
 354:	81 ff       	sbrs	r24, 1
 356:	cc c1       	rjmp	.+920    	; 0x6f0 <__EEPROM_REGION_LENGTH__+0x2f0>
 358:	ce 01       	movw	r24, r28
 35a:	01 96       	adiw	r24, 0x01	; 1
 35c:	3c 01       	movw	r6, r24
 35e:	f6 01       	movw	r30, r12
 360:	93 81       	ldd	r25, Z+3	; 0x03
 362:	f7 01       	movw	r30, r14
 364:	93 fd       	sbrc	r25, 3
 366:	85 91       	lpm	r24, Z+
 368:	93 ff       	sbrs	r25, 3
 36a:	81 91       	ld	r24, Z+
 36c:	7f 01       	movw	r14, r30
 36e:	88 23       	and	r24, r24
 370:	09 f4       	brne	.+2      	; 0x374 <vfprintf+0x3a>
 372:	ba c1       	rjmp	.+884    	; 0x6e8 <__EEPROM_REGION_LENGTH__+0x2e8>
 374:	85 32       	cpi	r24, 0x25	; 37
 376:	39 f4       	brne	.+14     	; 0x386 <vfprintf+0x4c>
 378:	93 fd       	sbrc	r25, 3
 37a:	85 91       	lpm	r24, Z+
 37c:	93 ff       	sbrs	r25, 3
 37e:	81 91       	ld	r24, Z+
 380:	7f 01       	movw	r14, r30
 382:	85 32       	cpi	r24, 0x25	; 37
 384:	29 f4       	brne	.+10     	; 0x390 <vfprintf+0x56>
 386:	b6 01       	movw	r22, r12
 388:	90 e0       	ldi	r25, 0x00	; 0
 38a:	0e 94 94 03 	call	0x728	; 0x728 <fputc>
 38e:	e7 cf       	rjmp	.-50     	; 0x35e <vfprintf+0x24>
 390:	91 2c       	mov	r9, r1
 392:	21 2c       	mov	r2, r1
 394:	31 2c       	mov	r3, r1
 396:	ff e1       	ldi	r31, 0x1F	; 31
 398:	f3 15       	cp	r31, r3
 39a:	d8 f0       	brcs	.+54     	; 0x3d2 <vfprintf+0x98>
 39c:	8b 32       	cpi	r24, 0x2B	; 43
 39e:	79 f0       	breq	.+30     	; 0x3be <vfprintf+0x84>
 3a0:	38 f4       	brcc	.+14     	; 0x3b0 <vfprintf+0x76>
 3a2:	80 32       	cpi	r24, 0x20	; 32
 3a4:	79 f0       	breq	.+30     	; 0x3c4 <vfprintf+0x8a>
 3a6:	83 32       	cpi	r24, 0x23	; 35
 3a8:	a1 f4       	brne	.+40     	; 0x3d2 <vfprintf+0x98>
 3aa:	23 2d       	mov	r18, r3
 3ac:	20 61       	ori	r18, 0x10	; 16
 3ae:	1d c0       	rjmp	.+58     	; 0x3ea <vfprintf+0xb0>
 3b0:	8d 32       	cpi	r24, 0x2D	; 45
 3b2:	61 f0       	breq	.+24     	; 0x3cc <vfprintf+0x92>
 3b4:	80 33       	cpi	r24, 0x30	; 48
 3b6:	69 f4       	brne	.+26     	; 0x3d2 <vfprintf+0x98>
 3b8:	23 2d       	mov	r18, r3
 3ba:	21 60       	ori	r18, 0x01	; 1
 3bc:	16 c0       	rjmp	.+44     	; 0x3ea <vfprintf+0xb0>
 3be:	83 2d       	mov	r24, r3
 3c0:	82 60       	ori	r24, 0x02	; 2
 3c2:	38 2e       	mov	r3, r24
 3c4:	e3 2d       	mov	r30, r3
 3c6:	e4 60       	ori	r30, 0x04	; 4
 3c8:	3e 2e       	mov	r3, r30
 3ca:	2a c0       	rjmp	.+84     	; 0x420 <__EEPROM_REGION_LENGTH__+0x20>
 3cc:	f3 2d       	mov	r31, r3
 3ce:	f8 60       	ori	r31, 0x08	; 8
 3d0:	1d c0       	rjmp	.+58     	; 0x40c <__EEPROM_REGION_LENGTH__+0xc>
 3d2:	37 fc       	sbrc	r3, 7
 3d4:	2d c0       	rjmp	.+90     	; 0x430 <__EEPROM_REGION_LENGTH__+0x30>
 3d6:	20 ed       	ldi	r18, 0xD0	; 208
 3d8:	28 0f       	add	r18, r24
 3da:	2a 30       	cpi	r18, 0x0A	; 10
 3dc:	40 f0       	brcs	.+16     	; 0x3ee <vfprintf+0xb4>
 3de:	8e 32       	cpi	r24, 0x2E	; 46
 3e0:	b9 f4       	brne	.+46     	; 0x410 <__EEPROM_REGION_LENGTH__+0x10>
 3e2:	36 fc       	sbrc	r3, 6
 3e4:	81 c1       	rjmp	.+770    	; 0x6e8 <__EEPROM_REGION_LENGTH__+0x2e8>
 3e6:	23 2d       	mov	r18, r3
 3e8:	20 64       	ori	r18, 0x40	; 64
 3ea:	32 2e       	mov	r3, r18
 3ec:	19 c0       	rjmp	.+50     	; 0x420 <__EEPROM_REGION_LENGTH__+0x20>
 3ee:	36 fe       	sbrs	r3, 6
 3f0:	06 c0       	rjmp	.+12     	; 0x3fe <vfprintf+0xc4>
 3f2:	8a e0       	ldi	r24, 0x0A	; 10
 3f4:	98 9e       	mul	r9, r24
 3f6:	20 0d       	add	r18, r0
 3f8:	11 24       	eor	r1, r1
 3fa:	92 2e       	mov	r9, r18
 3fc:	11 c0       	rjmp	.+34     	; 0x420 <__EEPROM_REGION_LENGTH__+0x20>
 3fe:	ea e0       	ldi	r30, 0x0A	; 10
 400:	2e 9e       	mul	r2, r30
 402:	20 0d       	add	r18, r0
 404:	11 24       	eor	r1, r1
 406:	22 2e       	mov	r2, r18
 408:	f3 2d       	mov	r31, r3
 40a:	f0 62       	ori	r31, 0x20	; 32
 40c:	3f 2e       	mov	r3, r31
 40e:	08 c0       	rjmp	.+16     	; 0x420 <__EEPROM_REGION_LENGTH__+0x20>
 410:	8c 36       	cpi	r24, 0x6C	; 108
 412:	21 f4       	brne	.+8      	; 0x41c <__EEPROM_REGION_LENGTH__+0x1c>
 414:	83 2d       	mov	r24, r3
 416:	80 68       	ori	r24, 0x80	; 128
 418:	38 2e       	mov	r3, r24
 41a:	02 c0       	rjmp	.+4      	; 0x420 <__EEPROM_REGION_LENGTH__+0x20>
 41c:	88 36       	cpi	r24, 0x68	; 104
 41e:	41 f4       	brne	.+16     	; 0x430 <__EEPROM_REGION_LENGTH__+0x30>
 420:	f7 01       	movw	r30, r14
 422:	93 fd       	sbrc	r25, 3
 424:	85 91       	lpm	r24, Z+
 426:	93 ff       	sbrs	r25, 3
 428:	81 91       	ld	r24, Z+
 42a:	7f 01       	movw	r14, r30
 42c:	81 11       	cpse	r24, r1
 42e:	b3 cf       	rjmp	.-154    	; 0x396 <vfprintf+0x5c>
 430:	98 2f       	mov	r25, r24
 432:	9f 7d       	andi	r25, 0xDF	; 223
 434:	95 54       	subi	r25, 0x45	; 69
 436:	93 30       	cpi	r25, 0x03	; 3
 438:	28 f4       	brcc	.+10     	; 0x444 <__EEPROM_REGION_LENGTH__+0x44>
 43a:	0c 5f       	subi	r16, 0xFC	; 252
 43c:	1f 4f       	sbci	r17, 0xFF	; 255
 43e:	9f e3       	ldi	r25, 0x3F	; 63
 440:	99 83       	std	Y+1, r25	; 0x01
 442:	0d c0       	rjmp	.+26     	; 0x45e <__EEPROM_REGION_LENGTH__+0x5e>
 444:	83 36       	cpi	r24, 0x63	; 99
 446:	31 f0       	breq	.+12     	; 0x454 <__EEPROM_REGION_LENGTH__+0x54>
 448:	83 37       	cpi	r24, 0x73	; 115
 44a:	71 f0       	breq	.+28     	; 0x468 <__EEPROM_REGION_LENGTH__+0x68>
 44c:	83 35       	cpi	r24, 0x53	; 83
 44e:	09 f0       	breq	.+2      	; 0x452 <__EEPROM_REGION_LENGTH__+0x52>
 450:	59 c0       	rjmp	.+178    	; 0x504 <__EEPROM_REGION_LENGTH__+0x104>
 452:	21 c0       	rjmp	.+66     	; 0x496 <__EEPROM_REGION_LENGTH__+0x96>
 454:	f8 01       	movw	r30, r16
 456:	80 81       	ld	r24, Z
 458:	89 83       	std	Y+1, r24	; 0x01
 45a:	0e 5f       	subi	r16, 0xFE	; 254
 45c:	1f 4f       	sbci	r17, 0xFF	; 255
 45e:	88 24       	eor	r8, r8
 460:	83 94       	inc	r8
 462:	91 2c       	mov	r9, r1
 464:	53 01       	movw	r10, r6
 466:	13 c0       	rjmp	.+38     	; 0x48e <__EEPROM_REGION_LENGTH__+0x8e>
 468:	28 01       	movw	r4, r16
 46a:	f2 e0       	ldi	r31, 0x02	; 2
 46c:	4f 0e       	add	r4, r31
 46e:	51 1c       	adc	r5, r1
 470:	f8 01       	movw	r30, r16
 472:	a0 80       	ld	r10, Z
 474:	b1 80       	ldd	r11, Z+1	; 0x01
 476:	36 fe       	sbrs	r3, 6
 478:	03 c0       	rjmp	.+6      	; 0x480 <__EEPROM_REGION_LENGTH__+0x80>
 47a:	69 2d       	mov	r22, r9
 47c:	70 e0       	ldi	r23, 0x00	; 0
 47e:	02 c0       	rjmp	.+4      	; 0x484 <__EEPROM_REGION_LENGTH__+0x84>
 480:	6f ef       	ldi	r22, 0xFF	; 255
 482:	7f ef       	ldi	r23, 0xFF	; 255
 484:	c5 01       	movw	r24, r10
 486:	0e 94 89 03 	call	0x712	; 0x712 <strnlen>
 48a:	4c 01       	movw	r8, r24
 48c:	82 01       	movw	r16, r4
 48e:	f3 2d       	mov	r31, r3
 490:	ff 77       	andi	r31, 0x7F	; 127
 492:	3f 2e       	mov	r3, r31
 494:	16 c0       	rjmp	.+44     	; 0x4c2 <__EEPROM_REGION_LENGTH__+0xc2>
 496:	28 01       	movw	r4, r16
 498:	22 e0       	ldi	r18, 0x02	; 2
 49a:	42 0e       	add	r4, r18
 49c:	51 1c       	adc	r5, r1
 49e:	f8 01       	movw	r30, r16
 4a0:	a0 80       	ld	r10, Z
 4a2:	b1 80       	ldd	r11, Z+1	; 0x01
 4a4:	36 fe       	sbrs	r3, 6
 4a6:	03 c0       	rjmp	.+6      	; 0x4ae <__EEPROM_REGION_LENGTH__+0xae>
 4a8:	69 2d       	mov	r22, r9
 4aa:	70 e0       	ldi	r23, 0x00	; 0
 4ac:	02 c0       	rjmp	.+4      	; 0x4b2 <__EEPROM_REGION_LENGTH__+0xb2>
 4ae:	6f ef       	ldi	r22, 0xFF	; 255
 4b0:	7f ef       	ldi	r23, 0xFF	; 255
 4b2:	c5 01       	movw	r24, r10
 4b4:	0e 94 7e 03 	call	0x6fc	; 0x6fc <strnlen_P>
 4b8:	4c 01       	movw	r8, r24
 4ba:	f3 2d       	mov	r31, r3
 4bc:	f0 68       	ori	r31, 0x80	; 128
 4be:	3f 2e       	mov	r3, r31
 4c0:	82 01       	movw	r16, r4
 4c2:	33 fc       	sbrc	r3, 3
 4c4:	1b c0       	rjmp	.+54     	; 0x4fc <__EEPROM_REGION_LENGTH__+0xfc>
 4c6:	82 2d       	mov	r24, r2
 4c8:	90 e0       	ldi	r25, 0x00	; 0
 4ca:	88 16       	cp	r8, r24
 4cc:	99 06       	cpc	r9, r25
 4ce:	b0 f4       	brcc	.+44     	; 0x4fc <__EEPROM_REGION_LENGTH__+0xfc>
 4d0:	b6 01       	movw	r22, r12
 4d2:	80 e2       	ldi	r24, 0x20	; 32
 4d4:	90 e0       	ldi	r25, 0x00	; 0
 4d6:	0e 94 94 03 	call	0x728	; 0x728 <fputc>
 4da:	2a 94       	dec	r2
 4dc:	f4 cf       	rjmp	.-24     	; 0x4c6 <__EEPROM_REGION_LENGTH__+0xc6>
 4de:	f5 01       	movw	r30, r10
 4e0:	37 fc       	sbrc	r3, 7
 4e2:	85 91       	lpm	r24, Z+
 4e4:	37 fe       	sbrs	r3, 7
 4e6:	81 91       	ld	r24, Z+
 4e8:	5f 01       	movw	r10, r30
 4ea:	b6 01       	movw	r22, r12
 4ec:	90 e0       	ldi	r25, 0x00	; 0
 4ee:	0e 94 94 03 	call	0x728	; 0x728 <fputc>
 4f2:	21 10       	cpse	r2, r1
 4f4:	2a 94       	dec	r2
 4f6:	21 e0       	ldi	r18, 0x01	; 1
 4f8:	82 1a       	sub	r8, r18
 4fa:	91 08       	sbc	r9, r1
 4fc:	81 14       	cp	r8, r1
 4fe:	91 04       	cpc	r9, r1
 500:	71 f7       	brne	.-36     	; 0x4de <__EEPROM_REGION_LENGTH__+0xde>
 502:	e8 c0       	rjmp	.+464    	; 0x6d4 <__EEPROM_REGION_LENGTH__+0x2d4>
 504:	84 36       	cpi	r24, 0x64	; 100
 506:	11 f0       	breq	.+4      	; 0x50c <__EEPROM_REGION_LENGTH__+0x10c>
 508:	89 36       	cpi	r24, 0x69	; 105
 50a:	41 f5       	brne	.+80     	; 0x55c <__EEPROM_REGION_LENGTH__+0x15c>
 50c:	f8 01       	movw	r30, r16
 50e:	37 fe       	sbrs	r3, 7
 510:	07 c0       	rjmp	.+14     	; 0x520 <__EEPROM_REGION_LENGTH__+0x120>
 512:	60 81       	ld	r22, Z
 514:	71 81       	ldd	r23, Z+1	; 0x01
 516:	82 81       	ldd	r24, Z+2	; 0x02
 518:	93 81       	ldd	r25, Z+3	; 0x03
 51a:	0c 5f       	subi	r16, 0xFC	; 252
 51c:	1f 4f       	sbci	r17, 0xFF	; 255
 51e:	08 c0       	rjmp	.+16     	; 0x530 <__EEPROM_REGION_LENGTH__+0x130>
 520:	60 81       	ld	r22, Z
 522:	71 81       	ldd	r23, Z+1	; 0x01
 524:	07 2e       	mov	r0, r23
 526:	00 0c       	add	r0, r0
 528:	88 0b       	sbc	r24, r24
 52a:	99 0b       	sbc	r25, r25
 52c:	0e 5f       	subi	r16, 0xFE	; 254
 52e:	1f 4f       	sbci	r17, 0xFF	; 255
 530:	f3 2d       	mov	r31, r3
 532:	ff 76       	andi	r31, 0x6F	; 111
 534:	3f 2e       	mov	r3, r31
 536:	97 ff       	sbrs	r25, 7
 538:	09 c0       	rjmp	.+18     	; 0x54c <__EEPROM_REGION_LENGTH__+0x14c>
 53a:	90 95       	com	r25
 53c:	80 95       	com	r24
 53e:	70 95       	com	r23
 540:	61 95       	neg	r22
 542:	7f 4f       	sbci	r23, 0xFF	; 255
 544:	8f 4f       	sbci	r24, 0xFF	; 255
 546:	9f 4f       	sbci	r25, 0xFF	; 255
 548:	f0 68       	ori	r31, 0x80	; 128
 54a:	3f 2e       	mov	r3, r31
 54c:	2a e0       	ldi	r18, 0x0A	; 10
 54e:	30 e0       	ldi	r19, 0x00	; 0
 550:	a3 01       	movw	r20, r6
 552:	0e 94 d0 03 	call	0x7a0	; 0x7a0 <__ultoa_invert>
 556:	88 2e       	mov	r8, r24
 558:	86 18       	sub	r8, r6
 55a:	45 c0       	rjmp	.+138    	; 0x5e6 <__EEPROM_REGION_LENGTH__+0x1e6>
 55c:	85 37       	cpi	r24, 0x75	; 117
 55e:	31 f4       	brne	.+12     	; 0x56c <__EEPROM_REGION_LENGTH__+0x16c>
 560:	23 2d       	mov	r18, r3
 562:	2f 7e       	andi	r18, 0xEF	; 239
 564:	b2 2e       	mov	r11, r18
 566:	2a e0       	ldi	r18, 0x0A	; 10
 568:	30 e0       	ldi	r19, 0x00	; 0
 56a:	25 c0       	rjmp	.+74     	; 0x5b6 <__EEPROM_REGION_LENGTH__+0x1b6>
 56c:	93 2d       	mov	r25, r3
 56e:	99 7f       	andi	r25, 0xF9	; 249
 570:	b9 2e       	mov	r11, r25
 572:	8f 36       	cpi	r24, 0x6F	; 111
 574:	c1 f0       	breq	.+48     	; 0x5a6 <__EEPROM_REGION_LENGTH__+0x1a6>
 576:	18 f4       	brcc	.+6      	; 0x57e <__EEPROM_REGION_LENGTH__+0x17e>
 578:	88 35       	cpi	r24, 0x58	; 88
 57a:	79 f0       	breq	.+30     	; 0x59a <__EEPROM_REGION_LENGTH__+0x19a>
 57c:	b5 c0       	rjmp	.+362    	; 0x6e8 <__EEPROM_REGION_LENGTH__+0x2e8>
 57e:	80 37       	cpi	r24, 0x70	; 112
 580:	19 f0       	breq	.+6      	; 0x588 <__EEPROM_REGION_LENGTH__+0x188>
 582:	88 37       	cpi	r24, 0x78	; 120
 584:	21 f0       	breq	.+8      	; 0x58e <__EEPROM_REGION_LENGTH__+0x18e>
 586:	b0 c0       	rjmp	.+352    	; 0x6e8 <__EEPROM_REGION_LENGTH__+0x2e8>
 588:	e9 2f       	mov	r30, r25
 58a:	e0 61       	ori	r30, 0x10	; 16
 58c:	be 2e       	mov	r11, r30
 58e:	b4 fe       	sbrs	r11, 4
 590:	0d c0       	rjmp	.+26     	; 0x5ac <__EEPROM_REGION_LENGTH__+0x1ac>
 592:	fb 2d       	mov	r31, r11
 594:	f4 60       	ori	r31, 0x04	; 4
 596:	bf 2e       	mov	r11, r31
 598:	09 c0       	rjmp	.+18     	; 0x5ac <__EEPROM_REGION_LENGTH__+0x1ac>
 59a:	34 fe       	sbrs	r3, 4
 59c:	0a c0       	rjmp	.+20     	; 0x5b2 <__EEPROM_REGION_LENGTH__+0x1b2>
 59e:	29 2f       	mov	r18, r25
 5a0:	26 60       	ori	r18, 0x06	; 6
 5a2:	b2 2e       	mov	r11, r18
 5a4:	06 c0       	rjmp	.+12     	; 0x5b2 <__EEPROM_REGION_LENGTH__+0x1b2>
 5a6:	28 e0       	ldi	r18, 0x08	; 8
 5a8:	30 e0       	ldi	r19, 0x00	; 0
 5aa:	05 c0       	rjmp	.+10     	; 0x5b6 <__EEPROM_REGION_LENGTH__+0x1b6>
 5ac:	20 e1       	ldi	r18, 0x10	; 16
 5ae:	30 e0       	ldi	r19, 0x00	; 0
 5b0:	02 c0       	rjmp	.+4      	; 0x5b6 <__EEPROM_REGION_LENGTH__+0x1b6>
 5b2:	20 e1       	ldi	r18, 0x10	; 16
 5b4:	32 e0       	ldi	r19, 0x02	; 2
 5b6:	f8 01       	movw	r30, r16
 5b8:	b7 fe       	sbrs	r11, 7
 5ba:	07 c0       	rjmp	.+14     	; 0x5ca <__EEPROM_REGION_LENGTH__+0x1ca>
 5bc:	60 81       	ld	r22, Z
 5be:	71 81       	ldd	r23, Z+1	; 0x01
 5c0:	82 81       	ldd	r24, Z+2	; 0x02
 5c2:	93 81       	ldd	r25, Z+3	; 0x03
 5c4:	0c 5f       	subi	r16, 0xFC	; 252
 5c6:	1f 4f       	sbci	r17, 0xFF	; 255
 5c8:	06 c0       	rjmp	.+12     	; 0x5d6 <__EEPROM_REGION_LENGTH__+0x1d6>
 5ca:	60 81       	ld	r22, Z
 5cc:	71 81       	ldd	r23, Z+1	; 0x01
 5ce:	80 e0       	ldi	r24, 0x00	; 0
 5d0:	90 e0       	ldi	r25, 0x00	; 0
 5d2:	0e 5f       	subi	r16, 0xFE	; 254
 5d4:	1f 4f       	sbci	r17, 0xFF	; 255
 5d6:	a3 01       	movw	r20, r6
 5d8:	0e 94 d0 03 	call	0x7a0	; 0x7a0 <__ultoa_invert>
 5dc:	88 2e       	mov	r8, r24
 5de:	86 18       	sub	r8, r6
 5e0:	fb 2d       	mov	r31, r11
 5e2:	ff 77       	andi	r31, 0x7F	; 127
 5e4:	3f 2e       	mov	r3, r31
 5e6:	36 fe       	sbrs	r3, 6
 5e8:	0d c0       	rjmp	.+26     	; 0x604 <__EEPROM_REGION_LENGTH__+0x204>
 5ea:	23 2d       	mov	r18, r3
 5ec:	2e 7f       	andi	r18, 0xFE	; 254
 5ee:	a2 2e       	mov	r10, r18
 5f0:	89 14       	cp	r8, r9
 5f2:	58 f4       	brcc	.+22     	; 0x60a <__EEPROM_REGION_LENGTH__+0x20a>
 5f4:	34 fe       	sbrs	r3, 4
 5f6:	0b c0       	rjmp	.+22     	; 0x60e <__EEPROM_REGION_LENGTH__+0x20e>
 5f8:	32 fc       	sbrc	r3, 2
 5fa:	09 c0       	rjmp	.+18     	; 0x60e <__EEPROM_REGION_LENGTH__+0x20e>
 5fc:	83 2d       	mov	r24, r3
 5fe:	8e 7e       	andi	r24, 0xEE	; 238
 600:	a8 2e       	mov	r10, r24
 602:	05 c0       	rjmp	.+10     	; 0x60e <__EEPROM_REGION_LENGTH__+0x20e>
 604:	b8 2c       	mov	r11, r8
 606:	a3 2c       	mov	r10, r3
 608:	03 c0       	rjmp	.+6      	; 0x610 <__EEPROM_REGION_LENGTH__+0x210>
 60a:	b8 2c       	mov	r11, r8
 60c:	01 c0       	rjmp	.+2      	; 0x610 <__EEPROM_REGION_LENGTH__+0x210>
 60e:	b9 2c       	mov	r11, r9
 610:	a4 fe       	sbrs	r10, 4
 612:	0f c0       	rjmp	.+30     	; 0x632 <__EEPROM_REGION_LENGTH__+0x232>
 614:	fe 01       	movw	r30, r28
 616:	e8 0d       	add	r30, r8
 618:	f1 1d       	adc	r31, r1
 61a:	80 81       	ld	r24, Z
 61c:	80 33       	cpi	r24, 0x30	; 48
 61e:	21 f4       	brne	.+8      	; 0x628 <__EEPROM_REGION_LENGTH__+0x228>
 620:	9a 2d       	mov	r25, r10
 622:	99 7e       	andi	r25, 0xE9	; 233
 624:	a9 2e       	mov	r10, r25
 626:	09 c0       	rjmp	.+18     	; 0x63a <__EEPROM_REGION_LENGTH__+0x23a>
 628:	a2 fe       	sbrs	r10, 2
 62a:	06 c0       	rjmp	.+12     	; 0x638 <__EEPROM_REGION_LENGTH__+0x238>
 62c:	b3 94       	inc	r11
 62e:	b3 94       	inc	r11
 630:	04 c0       	rjmp	.+8      	; 0x63a <__EEPROM_REGION_LENGTH__+0x23a>
 632:	8a 2d       	mov	r24, r10
 634:	86 78       	andi	r24, 0x86	; 134
 636:	09 f0       	breq	.+2      	; 0x63a <__EEPROM_REGION_LENGTH__+0x23a>
 638:	b3 94       	inc	r11
 63a:	a3 fc       	sbrc	r10, 3
 63c:	11 c0       	rjmp	.+34     	; 0x660 <__EEPROM_REGION_LENGTH__+0x260>
 63e:	a0 fe       	sbrs	r10, 0
 640:	06 c0       	rjmp	.+12     	; 0x64e <__EEPROM_REGION_LENGTH__+0x24e>
 642:	b2 14       	cp	r11, r2
 644:	88 f4       	brcc	.+34     	; 0x668 <__EEPROM_REGION_LENGTH__+0x268>
 646:	28 0c       	add	r2, r8
 648:	92 2c       	mov	r9, r2
 64a:	9b 18       	sub	r9, r11
 64c:	0e c0       	rjmp	.+28     	; 0x66a <__EEPROM_REGION_LENGTH__+0x26a>
 64e:	b2 14       	cp	r11, r2
 650:	60 f4       	brcc	.+24     	; 0x66a <__EEPROM_REGION_LENGTH__+0x26a>
 652:	b6 01       	movw	r22, r12
 654:	80 e2       	ldi	r24, 0x20	; 32
 656:	90 e0       	ldi	r25, 0x00	; 0
 658:	0e 94 94 03 	call	0x728	; 0x728 <fputc>
 65c:	b3 94       	inc	r11
 65e:	f7 cf       	rjmp	.-18     	; 0x64e <__EEPROM_REGION_LENGTH__+0x24e>
 660:	b2 14       	cp	r11, r2
 662:	18 f4       	brcc	.+6      	; 0x66a <__EEPROM_REGION_LENGTH__+0x26a>
 664:	2b 18       	sub	r2, r11
 666:	02 c0       	rjmp	.+4      	; 0x66c <__EEPROM_REGION_LENGTH__+0x26c>
 668:	98 2c       	mov	r9, r8
 66a:	21 2c       	mov	r2, r1
 66c:	a4 fe       	sbrs	r10, 4
 66e:	10 c0       	rjmp	.+32     	; 0x690 <__EEPROM_REGION_LENGTH__+0x290>
 670:	b6 01       	movw	r22, r12
 672:	80 e3       	ldi	r24, 0x30	; 48
 674:	90 e0       	ldi	r25, 0x00	; 0
 676:	0e 94 94 03 	call	0x728	; 0x728 <fputc>
 67a:	a2 fe       	sbrs	r10, 2
 67c:	17 c0       	rjmp	.+46     	; 0x6ac <__EEPROM_REGION_LENGTH__+0x2ac>
 67e:	a1 fc       	sbrc	r10, 1
 680:	03 c0       	rjmp	.+6      	; 0x688 <__EEPROM_REGION_LENGTH__+0x288>
 682:	88 e7       	ldi	r24, 0x78	; 120
 684:	90 e0       	ldi	r25, 0x00	; 0
 686:	02 c0       	rjmp	.+4      	; 0x68c <__EEPROM_REGION_LENGTH__+0x28c>
 688:	88 e5       	ldi	r24, 0x58	; 88
 68a:	90 e0       	ldi	r25, 0x00	; 0
 68c:	b6 01       	movw	r22, r12
 68e:	0c c0       	rjmp	.+24     	; 0x6a8 <__EEPROM_REGION_LENGTH__+0x2a8>
 690:	8a 2d       	mov	r24, r10
 692:	86 78       	andi	r24, 0x86	; 134
 694:	59 f0       	breq	.+22     	; 0x6ac <__EEPROM_REGION_LENGTH__+0x2ac>
 696:	a1 fe       	sbrs	r10, 1
 698:	02 c0       	rjmp	.+4      	; 0x69e <__EEPROM_REGION_LENGTH__+0x29e>
 69a:	8b e2       	ldi	r24, 0x2B	; 43
 69c:	01 c0       	rjmp	.+2      	; 0x6a0 <__EEPROM_REGION_LENGTH__+0x2a0>
 69e:	80 e2       	ldi	r24, 0x20	; 32
 6a0:	a7 fc       	sbrc	r10, 7
 6a2:	8d e2       	ldi	r24, 0x2D	; 45
 6a4:	b6 01       	movw	r22, r12
 6a6:	90 e0       	ldi	r25, 0x00	; 0
 6a8:	0e 94 94 03 	call	0x728	; 0x728 <fputc>
 6ac:	89 14       	cp	r8, r9
 6ae:	38 f4       	brcc	.+14     	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
 6b0:	b6 01       	movw	r22, r12
 6b2:	80 e3       	ldi	r24, 0x30	; 48
 6b4:	90 e0       	ldi	r25, 0x00	; 0
 6b6:	0e 94 94 03 	call	0x728	; 0x728 <fputc>
 6ba:	9a 94       	dec	r9
 6bc:	f7 cf       	rjmp	.-18     	; 0x6ac <__EEPROM_REGION_LENGTH__+0x2ac>
 6be:	8a 94       	dec	r8
 6c0:	f3 01       	movw	r30, r6
 6c2:	e8 0d       	add	r30, r8
 6c4:	f1 1d       	adc	r31, r1
 6c6:	80 81       	ld	r24, Z
 6c8:	b6 01       	movw	r22, r12
 6ca:	90 e0       	ldi	r25, 0x00	; 0
 6cc:	0e 94 94 03 	call	0x728	; 0x728 <fputc>
 6d0:	81 10       	cpse	r8, r1
 6d2:	f5 cf       	rjmp	.-22     	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
 6d4:	22 20       	and	r2, r2
 6d6:	09 f4       	brne	.+2      	; 0x6da <__EEPROM_REGION_LENGTH__+0x2da>
 6d8:	42 ce       	rjmp	.-892    	; 0x35e <vfprintf+0x24>
 6da:	b6 01       	movw	r22, r12
 6dc:	80 e2       	ldi	r24, 0x20	; 32
 6de:	90 e0       	ldi	r25, 0x00	; 0
 6e0:	0e 94 94 03 	call	0x728	; 0x728 <fputc>
 6e4:	2a 94       	dec	r2
 6e6:	f6 cf       	rjmp	.-20     	; 0x6d4 <__EEPROM_REGION_LENGTH__+0x2d4>
 6e8:	f6 01       	movw	r30, r12
 6ea:	86 81       	ldd	r24, Z+6	; 0x06
 6ec:	97 81       	ldd	r25, Z+7	; 0x07
 6ee:	02 c0       	rjmp	.+4      	; 0x6f4 <__EEPROM_REGION_LENGTH__+0x2f4>
 6f0:	8f ef       	ldi	r24, 0xFF	; 255
 6f2:	9f ef       	ldi	r25, 0xFF	; 255
 6f4:	2b 96       	adiw	r28, 0x0b	; 11
 6f6:	e2 e1       	ldi	r30, 0x12	; 18
 6f8:	0c 94 4a 04 	jmp	0x894	; 0x894 <__epilogue_restores__>

000006fc <strnlen_P>:
 6fc:	fc 01       	movw	r30, r24
 6fe:	05 90       	lpm	r0, Z+
 700:	61 50       	subi	r22, 0x01	; 1
 702:	70 40       	sbci	r23, 0x00	; 0
 704:	01 10       	cpse	r0, r1
 706:	d8 f7       	brcc	.-10     	; 0x6fe <strnlen_P+0x2>
 708:	80 95       	com	r24
 70a:	90 95       	com	r25
 70c:	8e 0f       	add	r24, r30
 70e:	9f 1f       	adc	r25, r31
 710:	08 95       	ret

00000712 <strnlen>:
 712:	fc 01       	movw	r30, r24
 714:	61 50       	subi	r22, 0x01	; 1
 716:	70 40       	sbci	r23, 0x00	; 0
 718:	01 90       	ld	r0, Z+
 71a:	01 10       	cpse	r0, r1
 71c:	d8 f7       	brcc	.-10     	; 0x714 <strnlen+0x2>
 71e:	80 95       	com	r24
 720:	90 95       	com	r25
 722:	8e 0f       	add	r24, r30
 724:	9f 1f       	adc	r25, r31
 726:	08 95       	ret

00000728 <fputc>:
 728:	0f 93       	push	r16
 72a:	1f 93       	push	r17
 72c:	cf 93       	push	r28
 72e:	df 93       	push	r29
 730:	fb 01       	movw	r30, r22
 732:	23 81       	ldd	r18, Z+3	; 0x03
 734:	21 fd       	sbrc	r18, 1
 736:	03 c0       	rjmp	.+6      	; 0x73e <fputc+0x16>
 738:	8f ef       	ldi	r24, 0xFF	; 255
 73a:	9f ef       	ldi	r25, 0xFF	; 255
 73c:	2c c0       	rjmp	.+88     	; 0x796 <fputc+0x6e>
 73e:	22 ff       	sbrs	r18, 2
 740:	16 c0       	rjmp	.+44     	; 0x76e <fputc+0x46>
 742:	46 81       	ldd	r20, Z+6	; 0x06
 744:	57 81       	ldd	r21, Z+7	; 0x07
 746:	24 81       	ldd	r18, Z+4	; 0x04
 748:	35 81       	ldd	r19, Z+5	; 0x05
 74a:	42 17       	cp	r20, r18
 74c:	53 07       	cpc	r21, r19
 74e:	44 f4       	brge	.+16     	; 0x760 <fputc+0x38>
 750:	a0 81       	ld	r26, Z
 752:	b1 81       	ldd	r27, Z+1	; 0x01
 754:	9d 01       	movw	r18, r26
 756:	2f 5f       	subi	r18, 0xFF	; 255
 758:	3f 4f       	sbci	r19, 0xFF	; 255
 75a:	31 83       	std	Z+1, r19	; 0x01
 75c:	20 83       	st	Z, r18
 75e:	8c 93       	st	X, r24
 760:	26 81       	ldd	r18, Z+6	; 0x06
 762:	37 81       	ldd	r19, Z+7	; 0x07
 764:	2f 5f       	subi	r18, 0xFF	; 255
 766:	3f 4f       	sbci	r19, 0xFF	; 255
 768:	37 83       	std	Z+7, r19	; 0x07
 76a:	26 83       	std	Z+6, r18	; 0x06
 76c:	14 c0       	rjmp	.+40     	; 0x796 <fputc+0x6e>
 76e:	8b 01       	movw	r16, r22
 770:	ec 01       	movw	r28, r24
 772:	fb 01       	movw	r30, r22
 774:	00 84       	ldd	r0, Z+8	; 0x08
 776:	f1 85       	ldd	r31, Z+9	; 0x09
 778:	e0 2d       	mov	r30, r0
 77a:	09 95       	icall
 77c:	89 2b       	or	r24, r25
 77e:	e1 f6       	brne	.-72     	; 0x738 <fputc+0x10>
 780:	d8 01       	movw	r26, r16
 782:	16 96       	adiw	r26, 0x06	; 6
 784:	8d 91       	ld	r24, X+
 786:	9c 91       	ld	r25, X
 788:	17 97       	sbiw	r26, 0x07	; 7
 78a:	01 96       	adiw	r24, 0x01	; 1
 78c:	17 96       	adiw	r26, 0x07	; 7
 78e:	9c 93       	st	X, r25
 790:	8e 93       	st	-X, r24
 792:	16 97       	sbiw	r26, 0x06	; 6
 794:	ce 01       	movw	r24, r28
 796:	df 91       	pop	r29
 798:	cf 91       	pop	r28
 79a:	1f 91       	pop	r17
 79c:	0f 91       	pop	r16
 79e:	08 95       	ret

000007a0 <__ultoa_invert>:
 7a0:	fa 01       	movw	r30, r20
 7a2:	aa 27       	eor	r26, r26
 7a4:	28 30       	cpi	r18, 0x08	; 8
 7a6:	51 f1       	breq	.+84     	; 0x7fc <__ultoa_invert+0x5c>
 7a8:	20 31       	cpi	r18, 0x10	; 16
 7aa:	81 f1       	breq	.+96     	; 0x80c <__DATA_REGION_LENGTH__+0xc>
 7ac:	e8 94       	clt
 7ae:	6f 93       	push	r22
 7b0:	6e 7f       	andi	r22, 0xFE	; 254
 7b2:	6e 5f       	subi	r22, 0xFE	; 254
 7b4:	7f 4f       	sbci	r23, 0xFF	; 255
 7b6:	8f 4f       	sbci	r24, 0xFF	; 255
 7b8:	9f 4f       	sbci	r25, 0xFF	; 255
 7ba:	af 4f       	sbci	r26, 0xFF	; 255
 7bc:	b1 e0       	ldi	r27, 0x01	; 1
 7be:	3e d0       	rcall	.+124    	; 0x83c <__DATA_REGION_LENGTH__+0x3c>
 7c0:	b4 e0       	ldi	r27, 0x04	; 4
 7c2:	3c d0       	rcall	.+120    	; 0x83c <__DATA_REGION_LENGTH__+0x3c>
 7c4:	67 0f       	add	r22, r23
 7c6:	78 1f       	adc	r23, r24
 7c8:	89 1f       	adc	r24, r25
 7ca:	9a 1f       	adc	r25, r26
 7cc:	a1 1d       	adc	r26, r1
 7ce:	68 0f       	add	r22, r24
 7d0:	79 1f       	adc	r23, r25
 7d2:	8a 1f       	adc	r24, r26
 7d4:	91 1d       	adc	r25, r1
 7d6:	a1 1d       	adc	r26, r1
 7d8:	6a 0f       	add	r22, r26
 7da:	71 1d       	adc	r23, r1
 7dc:	81 1d       	adc	r24, r1
 7de:	91 1d       	adc	r25, r1
 7e0:	a1 1d       	adc	r26, r1
 7e2:	20 d0       	rcall	.+64     	; 0x824 <__DATA_REGION_LENGTH__+0x24>
 7e4:	09 f4       	brne	.+2      	; 0x7e8 <__ultoa_invert+0x48>
 7e6:	68 94       	set
 7e8:	3f 91       	pop	r19
 7ea:	2a e0       	ldi	r18, 0x0A	; 10
 7ec:	26 9f       	mul	r18, r22
 7ee:	11 24       	eor	r1, r1
 7f0:	30 19       	sub	r19, r0
 7f2:	30 5d       	subi	r19, 0xD0	; 208
 7f4:	31 93       	st	Z+, r19
 7f6:	de f6       	brtc	.-74     	; 0x7ae <__ultoa_invert+0xe>
 7f8:	cf 01       	movw	r24, r30
 7fa:	08 95       	ret
 7fc:	46 2f       	mov	r20, r22
 7fe:	47 70       	andi	r20, 0x07	; 7
 800:	40 5d       	subi	r20, 0xD0	; 208
 802:	41 93       	st	Z+, r20
 804:	b3 e0       	ldi	r27, 0x03	; 3
 806:	0f d0       	rcall	.+30     	; 0x826 <__DATA_REGION_LENGTH__+0x26>
 808:	c9 f7       	brne	.-14     	; 0x7fc <__ultoa_invert+0x5c>
 80a:	f6 cf       	rjmp	.-20     	; 0x7f8 <__ultoa_invert+0x58>
 80c:	46 2f       	mov	r20, r22
 80e:	4f 70       	andi	r20, 0x0F	; 15
 810:	40 5d       	subi	r20, 0xD0	; 208
 812:	4a 33       	cpi	r20, 0x3A	; 58
 814:	18 f0       	brcs	.+6      	; 0x81c <__DATA_REGION_LENGTH__+0x1c>
 816:	49 5d       	subi	r20, 0xD9	; 217
 818:	31 fd       	sbrc	r19, 1
 81a:	40 52       	subi	r20, 0x20	; 32
 81c:	41 93       	st	Z+, r20
 81e:	02 d0       	rcall	.+4      	; 0x824 <__DATA_REGION_LENGTH__+0x24>
 820:	a9 f7       	brne	.-22     	; 0x80c <__DATA_REGION_LENGTH__+0xc>
 822:	ea cf       	rjmp	.-44     	; 0x7f8 <__ultoa_invert+0x58>
 824:	b4 e0       	ldi	r27, 0x04	; 4
 826:	a6 95       	lsr	r26
 828:	97 95       	ror	r25
 82a:	87 95       	ror	r24
 82c:	77 95       	ror	r23
 82e:	67 95       	ror	r22
 830:	ba 95       	dec	r27
 832:	c9 f7       	brne	.-14     	; 0x826 <__DATA_REGION_LENGTH__+0x26>
 834:	00 97       	sbiw	r24, 0x00	; 0
 836:	61 05       	cpc	r22, r1
 838:	71 05       	cpc	r23, r1
 83a:	08 95       	ret
 83c:	9b 01       	movw	r18, r22
 83e:	ac 01       	movw	r20, r24
 840:	0a 2e       	mov	r0, r26
 842:	06 94       	lsr	r0
 844:	57 95       	ror	r21
 846:	47 95       	ror	r20
 848:	37 95       	ror	r19
 84a:	27 95       	ror	r18
 84c:	ba 95       	dec	r27
 84e:	c9 f7       	brne	.-14     	; 0x842 <__DATA_REGION_LENGTH__+0x42>
 850:	62 0f       	add	r22, r18
 852:	73 1f       	adc	r23, r19
 854:	84 1f       	adc	r24, r20
 856:	95 1f       	adc	r25, r21
 858:	a0 1d       	adc	r26, r0
 85a:	08 95       	ret

0000085c <__prologue_saves__>:
 85c:	2f 92       	push	r2
 85e:	3f 92       	push	r3
 860:	4f 92       	push	r4
 862:	5f 92       	push	r5
 864:	6f 92       	push	r6
 866:	7f 92       	push	r7
 868:	8f 92       	push	r8
 86a:	9f 92       	push	r9
 86c:	af 92       	push	r10
 86e:	bf 92       	push	r11
 870:	cf 92       	push	r12
 872:	df 92       	push	r13
 874:	ef 92       	push	r14
 876:	ff 92       	push	r15
 878:	0f 93       	push	r16
 87a:	1f 93       	push	r17
 87c:	cf 93       	push	r28
 87e:	df 93       	push	r29
 880:	cd b7       	in	r28, 0x3d	; 61
 882:	de b7       	in	r29, 0x3e	; 62
 884:	ca 1b       	sub	r28, r26
 886:	db 0b       	sbc	r29, r27
 888:	0f b6       	in	r0, 0x3f	; 63
 88a:	f8 94       	cli
 88c:	de bf       	out	0x3e, r29	; 62
 88e:	0f be       	out	0x3f, r0	; 63
 890:	cd bf       	out	0x3d, r28	; 61
 892:	09 94       	ijmp

00000894 <__epilogue_restores__>:
 894:	2a 88       	ldd	r2, Y+18	; 0x12
 896:	39 88       	ldd	r3, Y+17	; 0x11
 898:	48 88       	ldd	r4, Y+16	; 0x10
 89a:	5f 84       	ldd	r5, Y+15	; 0x0f
 89c:	6e 84       	ldd	r6, Y+14	; 0x0e
 89e:	7d 84       	ldd	r7, Y+13	; 0x0d
 8a0:	8c 84       	ldd	r8, Y+12	; 0x0c
 8a2:	9b 84       	ldd	r9, Y+11	; 0x0b
 8a4:	aa 84       	ldd	r10, Y+10	; 0x0a
 8a6:	b9 84       	ldd	r11, Y+9	; 0x09
 8a8:	c8 84       	ldd	r12, Y+8	; 0x08
 8aa:	df 80       	ldd	r13, Y+7	; 0x07
 8ac:	ee 80       	ldd	r14, Y+6	; 0x06
 8ae:	fd 80       	ldd	r15, Y+5	; 0x05
 8b0:	0c 81       	ldd	r16, Y+4	; 0x04
 8b2:	1b 81       	ldd	r17, Y+3	; 0x03
 8b4:	aa 81       	ldd	r26, Y+2	; 0x02
 8b6:	b9 81       	ldd	r27, Y+1	; 0x01
 8b8:	ce 0f       	add	r28, r30
 8ba:	d1 1d       	adc	r29, r1
 8bc:	0f b6       	in	r0, 0x3f	; 63
 8be:	f8 94       	cli
 8c0:	de bf       	out	0x3e, r29	; 62
 8c2:	0f be       	out	0x3f, r0	; 63
 8c4:	cd bf       	out	0x3d, r28	; 61
 8c6:	ed 01       	movw	r28, r26
 8c8:	08 95       	ret

000008ca <_exit>:
 8ca:	f8 94       	cli

000008cc <__stop_program>:
 8cc:	ff cf       	rjmp	.-2      	; 0x8cc <__stop_program>
