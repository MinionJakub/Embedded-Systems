
zadanie2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001a  00800100  000008a4  00000938  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000008a4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000018  0080011a  0080011a  00000952  2**0
                  ALLOC
  3 .stab         00000954  00000000  00000000  00000954  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000f03  00000000  00000000  000012a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000011  00000000  00000000  000021ab  2**0
                  CONTENTS, READONLY
  6 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000021bc  2**2
                  CONTENTS, READONLY
  7 .debug_info   000005f4  00000000  00000000  000021fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000005a2  00000000  00000000  000027f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000001a  00000000  00000000  00002d92  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000208  00000000  00000000  00002dac  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 90 00 	jmp	0x120	; 0x120 <__vector_10>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 cb 00 	jmp	0x196	; 0x196 <__vector_13>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e4 ea       	ldi	r30, 0xA4	; 164
  7c:	f8 e0       	ldi	r31, 0x08	; 8
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	aa 31       	cpi	r26, 0x1A	; 26
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	aa e1       	ldi	r26, 0x1A	; 26
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a2 33       	cpi	r26, 0x32	; 50
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 03 01 	call	0x206	; 0x206 <main>
  9e:	0c 94 50 04 	jmp	0x8a0	; 0x8a0 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <uart_transmit>:

// transmisja jednego znaku
int uart_transmit(char data, FILE *stream)
{
    // czekaj aż transmiter gotowy
    while (!(UCSR0A & _BV(UDRE0)))
  a6:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
  aa:	95 ff       	sbrs	r25, 5
  ac:	fc cf       	rjmp	.-8      	; 0xa6 <uart_transmit>
        ;
    UDR0 = data;
  ae:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
    return 0;
}
  b2:	80 e0       	ldi	r24, 0x00	; 0
  b4:	90 e0       	ldi	r25, 0x00	; 0
  b6:	08 95       	ret

000000b8 <uart_receive>:

// odczyt jednego znaku
int uart_receive(FILE *stream)
{
    // czekaj aż znak dostępny
    while (!(UCSR0A & _BV(RXC0)))
  b8:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
  bc:	87 ff       	sbrs	r24, 7
  be:	fc cf       	rjmp	.-8      	; 0xb8 <uart_receive>
        ;
    return UDR0;
  c0:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
}
  c4:	90 e0       	ldi	r25, 0x00	; 0
  c6:	08 95       	ret

000000c8 <uart_init>:

// inicjalizacja UART
void uart_init()
{
    // ustaw baudrate
    UBRR0 = UBRR_VALUE;
  c8:	87 e6       	ldi	r24, 0x67	; 103
  ca:	90 e0       	ldi	r25, 0x00	; 0
  cc:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
  d0:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
    // wyczyść rejestr UCSR0A
    UCSR0A = 0;
  d4:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
    // włącz odbiornik i nadajnik
    UCSR0B = _BV(RXEN0) | _BV(TXEN0);
  d8:	88 e1       	ldi	r24, 0x18	; 24
  da:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    // ustaw format 8n1
    UCSR0C = _BV(UCSZ00) | _BV(UCSZ01);
  de:	86 e0       	ldi	r24, 0x06	; 6
  e0:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
  e4:	08 95       	ret

000000e6 <adc_init_ADC1>:
//     ADCSRA = _BV(ADPS0) | _BV(ADPS1) | _BV(ADPS2);
//     ADCSRA |= _BV(ADEN);
// }
void adc_init_ADC1()
{
    ADMUX = _BV(REFS0);
  e6:	ec e7       	ldi	r30, 0x7C	; 124
  e8:	f0 e0       	ldi	r31, 0x00	; 0
  ea:	80 e4       	ldi	r24, 0x40	; 64
  ec:	80 83       	st	Z, r24
    ADMUX |= 0b0001;
  ee:	80 81       	ld	r24, Z
  f0:	81 60       	ori	r24, 0x01	; 1
  f2:	80 83       	st	Z, r24
    // DIDR0 = _BV(ADC0D);
    // ADCSRA = _BV(ADPS0) | _BV(ADPS1) | _BV(ADPS2);
    ADCSRA |= _BV(ADEN);
  f4:	ea e7       	ldi	r30, 0x7A	; 122
  f6:	f0 e0       	ldi	r31, 0x00	; 0
  f8:	80 81       	ld	r24, Z
  fa:	80 68       	ori	r24, 0x80	; 128
  fc:	80 83       	st	Z, r24
  fe:	08 95       	ret

00000100 <clock_init>:
}

void clock_init()
{
    TCCR1A = _BV(COM1A0) | _BV(WGM10);
 100:	81 e4       	ldi	r24, 0x41	; 65
 102:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
    TCCR1B = _BV(CS11) | _BV(WGM13);
 106:	82 e1       	ldi	r24, 0x12	; 18
 108:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
    OCR1A = 500;
 10c:	84 ef       	ldi	r24, 0xF4	; 244
 10e:	91 e0       	ldi	r25, 0x01	; 1
 110:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
 114:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
    TIMSK1 = _BV(ICIE1) | _BV(TOIE1);
 118:	81 e2       	ldi	r24, 0x21	; 33
 11a:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f806f>
 11e:	08 95       	ret

00000120 <__vector_10>:
}

static uint16_t opening, closing;
ISR(TIMER1_CAPT_vect) {
 120:	1f 92       	push	r1
 122:	0f 92       	push	r0
 124:	0f b6       	in	r0, 0x3f	; 63
 126:	0f 92       	push	r0
 128:	11 24       	eor	r1, r1
 12a:	2f 93       	push	r18
 12c:	3f 93       	push	r19
 12e:	4f 93       	push	r20
 130:	5f 93       	push	r21
 132:	8f 93       	push	r24
 134:	9f 93       	push	r25
    ADCSRA |= _BV(ADSC);
 136:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
 13a:	80 64       	ori	r24, 0x40	; 64
 13c:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    while (!(ADCSRA & _BV(ADIF)));
 140:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
 144:	84 ff       	sbrs	r24, 4
 146:	fc cf       	rjmp	.-8      	; 0x140 <__vector_10+0x20>
    ADCSRA |= _BV(ADIF);
 148:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
 14c:	80 61       	ori	r24, 0x10	; 16
 14e:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    closing = 5000 - (( (ADC) * 5000) / 1024);
 152:	40 91 78 00 	lds	r20, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
 156:	50 91 79 00 	lds	r21, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
 15a:	88 e8       	ldi	r24, 0x88	; 136
 15c:	93 e1       	ldi	r25, 0x13	; 19
 15e:	48 9f       	mul	r20, r24
 160:	90 01       	movw	r18, r0
 162:	49 9f       	mul	r20, r25
 164:	30 0d       	add	r19, r0
 166:	58 9f       	mul	r21, r24
 168:	30 0d       	add	r19, r0
 16a:	11 24       	eor	r1, r1
 16c:	23 2f       	mov	r18, r19
 16e:	33 27       	eor	r19, r19
 170:	26 95       	lsr	r18
 172:	26 95       	lsr	r18
 174:	82 1b       	sub	r24, r18
 176:	93 0b       	sbc	r25, r19
 178:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <__data_end+0x1>
 17c:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <__data_end>
    // closing = closing * 1000;
    // printf("period %f\r\n", ADC);
}
 180:	9f 91       	pop	r25
 182:	8f 91       	pop	r24
 184:	5f 91       	pop	r21
 186:	4f 91       	pop	r20
 188:	3f 91       	pop	r19
 18a:	2f 91       	pop	r18
 18c:	0f 90       	pop	r0
 18e:	0f be       	out	0x3f, r0	; 63
 190:	0f 90       	pop	r0
 192:	1f 90       	pop	r1
 194:	18 95       	reti

00000196 <__vector_13>:
ISR(TIMER1_OVF_vect) {
 196:	1f 92       	push	r1
 198:	0f 92       	push	r0
 19a:	0f b6       	in	r0, 0x3f	; 63
 19c:	0f 92       	push	r0
 19e:	11 24       	eor	r1, r1
 1a0:	2f 93       	push	r18
 1a2:	3f 93       	push	r19
 1a4:	4f 93       	push	r20
 1a6:	5f 93       	push	r21
 1a8:	8f 93       	push	r24
 1aa:	9f 93       	push	r25
    ADCSRA |= _BV(ADSC);
 1ac:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
 1b0:	80 64       	ori	r24, 0x40	; 64
 1b2:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    while (!(ADCSRA & _BV(ADIF)));
 1b6:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
 1ba:	84 ff       	sbrs	r24, 4
 1bc:	fc cf       	rjmp	.-8      	; 0x1b6 <__vector_13+0x20>
    ADCSRA |= _BV(ADIF);
 1be:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
 1c2:	80 61       	ori	r24, 0x10	; 16
 1c4:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    opening = (ADC * 5000) / 1024;
 1c8:	40 91 78 00 	lds	r20, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
 1cc:	50 91 79 00 	lds	r21, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
 1d0:	28 e8       	ldi	r18, 0x88	; 136
 1d2:	33 e1       	ldi	r19, 0x13	; 19
 1d4:	42 9f       	mul	r20, r18
 1d6:	c0 01       	movw	r24, r0
 1d8:	43 9f       	mul	r20, r19
 1da:	90 0d       	add	r25, r0
 1dc:	52 9f       	mul	r21, r18
 1de:	90 0d       	add	r25, r0
 1e0:	11 24       	eor	r1, r1
 1e2:	89 2f       	mov	r24, r25
 1e4:	86 95       	lsr	r24
 1e6:	86 95       	lsr	r24
 1e8:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <opening>
 1ec:	10 92 1d 01 	sts	0x011D, r1	; 0x80011d <opening+0x1>
    opening = opening;
}
 1f0:	9f 91       	pop	r25
 1f2:	8f 91       	pop	r24
 1f4:	5f 91       	pop	r21
 1f6:	4f 91       	pop	r20
 1f8:	3f 91       	pop	r19
 1fa:	2f 91       	pop	r18
 1fc:	0f 90       	pop	r0
 1fe:	0f be       	out	0x3f, r0	; 63
 200:	0f 90       	pop	r0
 202:	1f 90       	pop	r1
 204:	18 95       	reti

00000206 <main>:

int main()
{   
    DDRB |= _BV(PB1);
 206:	21 9a       	sbi	0x04, 1	; 4
    ADCSRA |= _BV(ADEN);
}

void clock_init()
{
    TCCR1A = _BV(COM1A0) | _BV(WGM10);
 208:	81 e4       	ldi	r24, 0x41	; 65
 20a:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
    TCCR1B = _BV(CS11) | _BV(WGM13);
 20e:	82 e1       	ldi	r24, 0x12	; 18
 210:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
    OCR1A = 500;
 214:	84 ef       	ldi	r24, 0xF4	; 244
 216:	91 e0       	ldi	r25, 0x01	; 1
 218:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
 21c:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
    TIMSK1 = _BV(ICIE1) | _BV(TOIE1);
 220:	81 e2       	ldi	r24, 0x21	; 33
 222:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f806f>

// inicjalizacja UART
void uart_init()
{
    // ustaw baudrate
    UBRR0 = UBRR_VALUE;
 226:	87 e6       	ldi	r24, 0x67	; 103
 228:	90 e0       	ldi	r25, 0x00	; 0
 22a:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
 22e:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
    // wyczyść rejestr UCSR0A
    UCSR0A = 0;
 232:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
    // włącz odbiornik i nadajnik
    UCSR0B = _BV(RXEN0) | _BV(TXEN0);
 236:	88 e1       	ldi	r24, 0x18	; 24
 238:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    // ustaw format 8n1
    UCSR0C = _BV(UCSZ00) | _BV(UCSZ01);
 23c:	86 e0       	ldi	r24, 0x06	; 6
 23e:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
int main()
{   
    DDRB |= _BV(PB1);
    clock_init();
    uart_init();
    fdev_setup_stream(&uart_file, uart_transmit, uart_receive, _FDEV_SETUP_RW);
 242:	8e e1       	ldi	r24, 0x1E	; 30
 244:	91 e0       	ldi	r25, 0x01	; 1
 246:	23 e5       	ldi	r18, 0x53	; 83
 248:	30 e0       	ldi	r19, 0x00	; 0
 24a:	30 93 27 01 	sts	0x0127, r19	; 0x800127 <uart_file+0x9>
 24e:	20 93 26 01 	sts	0x0126, r18	; 0x800126 <uart_file+0x8>
 252:	2c e5       	ldi	r18, 0x5C	; 92
 254:	30 e0       	ldi	r19, 0x00	; 0
 256:	30 93 29 01 	sts	0x0129, r19	; 0x800129 <uart_file+0xb>
 25a:	20 93 28 01 	sts	0x0128, r18	; 0x800128 <uart_file+0xa>
 25e:	23 e0       	ldi	r18, 0x03	; 3
 260:	20 93 21 01 	sts	0x0121, r18	; 0x800121 <uart_file+0x3>
 264:	10 92 2b 01 	sts	0x012B, r1	; 0x80012b <uart_file+0xd>
 268:	10 92 2a 01 	sts	0x012A, r1	; 0x80012a <uart_file+0xc>
    stdin = stdout = stderr = &uart_file;
 26c:	90 93 31 01 	sts	0x0131, r25	; 0x800131 <__iob+0x5>
 270:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <__iob+0x4>
 274:	90 93 2f 01 	sts	0x012F, r25	; 0x80012f <__iob+0x3>
 278:	80 93 2e 01 	sts	0x012E, r24	; 0x80012e <__iob+0x2>
 27c:	90 93 2d 01 	sts	0x012D, r25	; 0x80012d <__iob+0x1>
 280:	80 93 2c 01 	sts	0x012C, r24	; 0x80012c <__iob>
//     ADCSRA = _BV(ADPS0) | _BV(ADPS1) | _BV(ADPS2);
//     ADCSRA |= _BV(ADEN);
// }
void adc_init_ADC1()
{
    ADMUX = _BV(REFS0);
 284:	80 e4       	ldi	r24, 0x40	; 64
 286:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    ADMUX |= 0b0001;
 28a:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
 28e:	81 60       	ori	r24, 0x01	; 1
 290:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    // DIDR0 = _BV(ADC0D);
    // ADCSRA = _BV(ADPS0) | _BV(ADPS1) | _BV(ADPS2);
    ADCSRA |= _BV(ADEN);
 294:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
 298:	80 68       	ori	r24, 0x80	; 128
 29a:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    clock_init();
    uart_init();
    fdev_setup_stream(&uart_file, uart_transmit, uart_receive, _FDEV_SETUP_RW);
    stdin = stdout = stderr = &uart_file;
    adc_init_ADC1();
    sei();
 29e:	78 94       	sei
    while (1)
    {
        printf("opening %"PRIu16", closing %"PRIu16" \r\n", opening, closing);
 2a0:	c0 e0       	ldi	r28, 0x00	; 0
 2a2:	d1 e0       	ldi	r29, 0x01	; 1
 2a4:	80 91 1b 01 	lds	r24, 0x011B	; 0x80011b <__data_end+0x1>
 2a8:	8f 93       	push	r24
 2aa:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <__data_end>
 2ae:	8f 93       	push	r24
 2b0:	80 91 1d 01 	lds	r24, 0x011D	; 0x80011d <opening+0x1>
 2b4:	8f 93       	push	r24
 2b6:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <opening>
 2ba:	8f 93       	push	r24
 2bc:	df 93       	push	r29
 2be:	cf 93       	push	r28
 2c0:	0e 94 72 01 	call	0x2e4	; 0x2e4 <printf>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2c4:	9f ef       	ldi	r25, 0xFF	; 255
 2c6:	23 ed       	ldi	r18, 0xD3	; 211
 2c8:	80 e3       	ldi	r24, 0x30	; 48
 2ca:	91 50       	subi	r25, 0x01	; 1
 2cc:	20 40       	sbci	r18, 0x00	; 0
 2ce:	80 40       	sbci	r24, 0x00	; 0
 2d0:	e1 f7       	brne	.-8      	; 0x2ca <main+0xc4>
 2d2:	00 c0       	rjmp	.+0      	; 0x2d4 <main+0xce>
 2d4:	00 00       	nop
 2d6:	0f 90       	pop	r0
 2d8:	0f 90       	pop	r0
 2da:	0f 90       	pop	r0
 2dc:	0f 90       	pop	r0
 2de:	0f 90       	pop	r0
 2e0:	0f 90       	pop	r0
 2e2:	e0 cf       	rjmp	.-64     	; 0x2a4 <main+0x9e>

000002e4 <printf>:
 2e4:	a0 e0       	ldi	r26, 0x00	; 0
 2e6:	b0 e0       	ldi	r27, 0x00	; 0
 2e8:	e8 e7       	ldi	r30, 0x78	; 120
 2ea:	f1 e0       	ldi	r31, 0x01	; 1
 2ec:	0c 94 29 04 	jmp	0x852	; 0x852 <__prologue_saves__+0x20>
 2f0:	ae 01       	movw	r20, r28
 2f2:	4b 5f       	subi	r20, 0xFB	; 251
 2f4:	5f 4f       	sbci	r21, 0xFF	; 255
 2f6:	fa 01       	movw	r30, r20
 2f8:	61 91       	ld	r22, Z+
 2fa:	71 91       	ld	r23, Z+
 2fc:	af 01       	movw	r20, r30
 2fe:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <__iob+0x2>
 302:	90 91 2f 01 	lds	r25, 0x012F	; 0x80012f <__iob+0x3>
 306:	0e 94 88 01 	call	0x310	; 0x310 <vfprintf>
 30a:	e2 e0       	ldi	r30, 0x02	; 2
 30c:	0c 94 45 04 	jmp	0x88a	; 0x88a <__epilogue_restores__+0x20>

00000310 <vfprintf>:
 310:	ab e0       	ldi	r26, 0x0B	; 11
 312:	b0 e0       	ldi	r27, 0x00	; 0
 314:	ee e8       	ldi	r30, 0x8E	; 142
 316:	f1 e0       	ldi	r31, 0x01	; 1
 318:	0c 94 19 04 	jmp	0x832	; 0x832 <__prologue_saves__>
 31c:	6c 01       	movw	r12, r24
 31e:	7b 01       	movw	r14, r22
 320:	8a 01       	movw	r16, r20
 322:	fc 01       	movw	r30, r24
 324:	17 82       	std	Z+7, r1	; 0x07
 326:	16 82       	std	Z+6, r1	; 0x06
 328:	83 81       	ldd	r24, Z+3	; 0x03
 32a:	81 ff       	sbrs	r24, 1
 32c:	cc c1       	rjmp	.+920    	; 0x6c6 <__EEPROM_REGION_LENGTH__+0x2c6>
 32e:	ce 01       	movw	r24, r28
 330:	01 96       	adiw	r24, 0x01	; 1
 332:	3c 01       	movw	r6, r24
 334:	f6 01       	movw	r30, r12
 336:	93 81       	ldd	r25, Z+3	; 0x03
 338:	f7 01       	movw	r30, r14
 33a:	93 fd       	sbrc	r25, 3
 33c:	85 91       	lpm	r24, Z+
 33e:	93 ff       	sbrs	r25, 3
 340:	81 91       	ld	r24, Z+
 342:	7f 01       	movw	r14, r30
 344:	88 23       	and	r24, r24
 346:	09 f4       	brne	.+2      	; 0x34a <vfprintf+0x3a>
 348:	ba c1       	rjmp	.+884    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
 34a:	85 32       	cpi	r24, 0x25	; 37
 34c:	39 f4       	brne	.+14     	; 0x35c <vfprintf+0x4c>
 34e:	93 fd       	sbrc	r25, 3
 350:	85 91       	lpm	r24, Z+
 352:	93 ff       	sbrs	r25, 3
 354:	81 91       	ld	r24, Z+
 356:	7f 01       	movw	r14, r30
 358:	85 32       	cpi	r24, 0x25	; 37
 35a:	29 f4       	brne	.+10     	; 0x366 <vfprintf+0x56>
 35c:	b6 01       	movw	r22, r12
 35e:	90 e0       	ldi	r25, 0x00	; 0
 360:	0e 94 7f 03 	call	0x6fe	; 0x6fe <fputc>
 364:	e7 cf       	rjmp	.-50     	; 0x334 <vfprintf+0x24>
 366:	91 2c       	mov	r9, r1
 368:	21 2c       	mov	r2, r1
 36a:	31 2c       	mov	r3, r1
 36c:	ff e1       	ldi	r31, 0x1F	; 31
 36e:	f3 15       	cp	r31, r3
 370:	d8 f0       	brcs	.+54     	; 0x3a8 <vfprintf+0x98>
 372:	8b 32       	cpi	r24, 0x2B	; 43
 374:	79 f0       	breq	.+30     	; 0x394 <vfprintf+0x84>
 376:	38 f4       	brcc	.+14     	; 0x386 <vfprintf+0x76>
 378:	80 32       	cpi	r24, 0x20	; 32
 37a:	79 f0       	breq	.+30     	; 0x39a <vfprintf+0x8a>
 37c:	83 32       	cpi	r24, 0x23	; 35
 37e:	a1 f4       	brne	.+40     	; 0x3a8 <vfprintf+0x98>
 380:	23 2d       	mov	r18, r3
 382:	20 61       	ori	r18, 0x10	; 16
 384:	1d c0       	rjmp	.+58     	; 0x3c0 <vfprintf+0xb0>
 386:	8d 32       	cpi	r24, 0x2D	; 45
 388:	61 f0       	breq	.+24     	; 0x3a2 <vfprintf+0x92>
 38a:	80 33       	cpi	r24, 0x30	; 48
 38c:	69 f4       	brne	.+26     	; 0x3a8 <vfprintf+0x98>
 38e:	23 2d       	mov	r18, r3
 390:	21 60       	ori	r18, 0x01	; 1
 392:	16 c0       	rjmp	.+44     	; 0x3c0 <vfprintf+0xb0>
 394:	83 2d       	mov	r24, r3
 396:	82 60       	ori	r24, 0x02	; 2
 398:	38 2e       	mov	r3, r24
 39a:	e3 2d       	mov	r30, r3
 39c:	e4 60       	ori	r30, 0x04	; 4
 39e:	3e 2e       	mov	r3, r30
 3a0:	2a c0       	rjmp	.+84     	; 0x3f6 <vfprintf+0xe6>
 3a2:	f3 2d       	mov	r31, r3
 3a4:	f8 60       	ori	r31, 0x08	; 8
 3a6:	1d c0       	rjmp	.+58     	; 0x3e2 <vfprintf+0xd2>
 3a8:	37 fc       	sbrc	r3, 7
 3aa:	2d c0       	rjmp	.+90     	; 0x406 <__EEPROM_REGION_LENGTH__+0x6>
 3ac:	20 ed       	ldi	r18, 0xD0	; 208
 3ae:	28 0f       	add	r18, r24
 3b0:	2a 30       	cpi	r18, 0x0A	; 10
 3b2:	40 f0       	brcs	.+16     	; 0x3c4 <vfprintf+0xb4>
 3b4:	8e 32       	cpi	r24, 0x2E	; 46
 3b6:	b9 f4       	brne	.+46     	; 0x3e6 <vfprintf+0xd6>
 3b8:	36 fc       	sbrc	r3, 6
 3ba:	81 c1       	rjmp	.+770    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
 3bc:	23 2d       	mov	r18, r3
 3be:	20 64       	ori	r18, 0x40	; 64
 3c0:	32 2e       	mov	r3, r18
 3c2:	19 c0       	rjmp	.+50     	; 0x3f6 <vfprintf+0xe6>
 3c4:	36 fe       	sbrs	r3, 6
 3c6:	06 c0       	rjmp	.+12     	; 0x3d4 <vfprintf+0xc4>
 3c8:	8a e0       	ldi	r24, 0x0A	; 10
 3ca:	98 9e       	mul	r9, r24
 3cc:	20 0d       	add	r18, r0
 3ce:	11 24       	eor	r1, r1
 3d0:	92 2e       	mov	r9, r18
 3d2:	11 c0       	rjmp	.+34     	; 0x3f6 <vfprintf+0xe6>
 3d4:	ea e0       	ldi	r30, 0x0A	; 10
 3d6:	2e 9e       	mul	r2, r30
 3d8:	20 0d       	add	r18, r0
 3da:	11 24       	eor	r1, r1
 3dc:	22 2e       	mov	r2, r18
 3de:	f3 2d       	mov	r31, r3
 3e0:	f0 62       	ori	r31, 0x20	; 32
 3e2:	3f 2e       	mov	r3, r31
 3e4:	08 c0       	rjmp	.+16     	; 0x3f6 <vfprintf+0xe6>
 3e6:	8c 36       	cpi	r24, 0x6C	; 108
 3e8:	21 f4       	brne	.+8      	; 0x3f2 <vfprintf+0xe2>
 3ea:	83 2d       	mov	r24, r3
 3ec:	80 68       	ori	r24, 0x80	; 128
 3ee:	38 2e       	mov	r3, r24
 3f0:	02 c0       	rjmp	.+4      	; 0x3f6 <vfprintf+0xe6>
 3f2:	88 36       	cpi	r24, 0x68	; 104
 3f4:	41 f4       	brne	.+16     	; 0x406 <__EEPROM_REGION_LENGTH__+0x6>
 3f6:	f7 01       	movw	r30, r14
 3f8:	93 fd       	sbrc	r25, 3
 3fa:	85 91       	lpm	r24, Z+
 3fc:	93 ff       	sbrs	r25, 3
 3fe:	81 91       	ld	r24, Z+
 400:	7f 01       	movw	r14, r30
 402:	81 11       	cpse	r24, r1
 404:	b3 cf       	rjmp	.-154    	; 0x36c <vfprintf+0x5c>
 406:	98 2f       	mov	r25, r24
 408:	9f 7d       	andi	r25, 0xDF	; 223
 40a:	95 54       	subi	r25, 0x45	; 69
 40c:	93 30       	cpi	r25, 0x03	; 3
 40e:	28 f4       	brcc	.+10     	; 0x41a <__EEPROM_REGION_LENGTH__+0x1a>
 410:	0c 5f       	subi	r16, 0xFC	; 252
 412:	1f 4f       	sbci	r17, 0xFF	; 255
 414:	9f e3       	ldi	r25, 0x3F	; 63
 416:	99 83       	std	Y+1, r25	; 0x01
 418:	0d c0       	rjmp	.+26     	; 0x434 <__EEPROM_REGION_LENGTH__+0x34>
 41a:	83 36       	cpi	r24, 0x63	; 99
 41c:	31 f0       	breq	.+12     	; 0x42a <__EEPROM_REGION_LENGTH__+0x2a>
 41e:	83 37       	cpi	r24, 0x73	; 115
 420:	71 f0       	breq	.+28     	; 0x43e <__EEPROM_REGION_LENGTH__+0x3e>
 422:	83 35       	cpi	r24, 0x53	; 83
 424:	09 f0       	breq	.+2      	; 0x428 <__EEPROM_REGION_LENGTH__+0x28>
 426:	59 c0       	rjmp	.+178    	; 0x4da <__EEPROM_REGION_LENGTH__+0xda>
 428:	21 c0       	rjmp	.+66     	; 0x46c <__EEPROM_REGION_LENGTH__+0x6c>
 42a:	f8 01       	movw	r30, r16
 42c:	80 81       	ld	r24, Z
 42e:	89 83       	std	Y+1, r24	; 0x01
 430:	0e 5f       	subi	r16, 0xFE	; 254
 432:	1f 4f       	sbci	r17, 0xFF	; 255
 434:	88 24       	eor	r8, r8
 436:	83 94       	inc	r8
 438:	91 2c       	mov	r9, r1
 43a:	53 01       	movw	r10, r6
 43c:	13 c0       	rjmp	.+38     	; 0x464 <__EEPROM_REGION_LENGTH__+0x64>
 43e:	28 01       	movw	r4, r16
 440:	f2 e0       	ldi	r31, 0x02	; 2
 442:	4f 0e       	add	r4, r31
 444:	51 1c       	adc	r5, r1
 446:	f8 01       	movw	r30, r16
 448:	a0 80       	ld	r10, Z
 44a:	b1 80       	ldd	r11, Z+1	; 0x01
 44c:	36 fe       	sbrs	r3, 6
 44e:	03 c0       	rjmp	.+6      	; 0x456 <__EEPROM_REGION_LENGTH__+0x56>
 450:	69 2d       	mov	r22, r9
 452:	70 e0       	ldi	r23, 0x00	; 0
 454:	02 c0       	rjmp	.+4      	; 0x45a <__EEPROM_REGION_LENGTH__+0x5a>
 456:	6f ef       	ldi	r22, 0xFF	; 255
 458:	7f ef       	ldi	r23, 0xFF	; 255
 45a:	c5 01       	movw	r24, r10
 45c:	0e 94 74 03 	call	0x6e8	; 0x6e8 <strnlen>
 460:	4c 01       	movw	r8, r24
 462:	82 01       	movw	r16, r4
 464:	f3 2d       	mov	r31, r3
 466:	ff 77       	andi	r31, 0x7F	; 127
 468:	3f 2e       	mov	r3, r31
 46a:	16 c0       	rjmp	.+44     	; 0x498 <__EEPROM_REGION_LENGTH__+0x98>
 46c:	28 01       	movw	r4, r16
 46e:	22 e0       	ldi	r18, 0x02	; 2
 470:	42 0e       	add	r4, r18
 472:	51 1c       	adc	r5, r1
 474:	f8 01       	movw	r30, r16
 476:	a0 80       	ld	r10, Z
 478:	b1 80       	ldd	r11, Z+1	; 0x01
 47a:	36 fe       	sbrs	r3, 6
 47c:	03 c0       	rjmp	.+6      	; 0x484 <__EEPROM_REGION_LENGTH__+0x84>
 47e:	69 2d       	mov	r22, r9
 480:	70 e0       	ldi	r23, 0x00	; 0
 482:	02 c0       	rjmp	.+4      	; 0x488 <__EEPROM_REGION_LENGTH__+0x88>
 484:	6f ef       	ldi	r22, 0xFF	; 255
 486:	7f ef       	ldi	r23, 0xFF	; 255
 488:	c5 01       	movw	r24, r10
 48a:	0e 94 69 03 	call	0x6d2	; 0x6d2 <strnlen_P>
 48e:	4c 01       	movw	r8, r24
 490:	f3 2d       	mov	r31, r3
 492:	f0 68       	ori	r31, 0x80	; 128
 494:	3f 2e       	mov	r3, r31
 496:	82 01       	movw	r16, r4
 498:	33 fc       	sbrc	r3, 3
 49a:	1b c0       	rjmp	.+54     	; 0x4d2 <__EEPROM_REGION_LENGTH__+0xd2>
 49c:	82 2d       	mov	r24, r2
 49e:	90 e0       	ldi	r25, 0x00	; 0
 4a0:	88 16       	cp	r8, r24
 4a2:	99 06       	cpc	r9, r25
 4a4:	b0 f4       	brcc	.+44     	; 0x4d2 <__EEPROM_REGION_LENGTH__+0xd2>
 4a6:	b6 01       	movw	r22, r12
 4a8:	80 e2       	ldi	r24, 0x20	; 32
 4aa:	90 e0       	ldi	r25, 0x00	; 0
 4ac:	0e 94 7f 03 	call	0x6fe	; 0x6fe <fputc>
 4b0:	2a 94       	dec	r2
 4b2:	f4 cf       	rjmp	.-24     	; 0x49c <__EEPROM_REGION_LENGTH__+0x9c>
 4b4:	f5 01       	movw	r30, r10
 4b6:	37 fc       	sbrc	r3, 7
 4b8:	85 91       	lpm	r24, Z+
 4ba:	37 fe       	sbrs	r3, 7
 4bc:	81 91       	ld	r24, Z+
 4be:	5f 01       	movw	r10, r30
 4c0:	b6 01       	movw	r22, r12
 4c2:	90 e0       	ldi	r25, 0x00	; 0
 4c4:	0e 94 7f 03 	call	0x6fe	; 0x6fe <fputc>
 4c8:	21 10       	cpse	r2, r1
 4ca:	2a 94       	dec	r2
 4cc:	21 e0       	ldi	r18, 0x01	; 1
 4ce:	82 1a       	sub	r8, r18
 4d0:	91 08       	sbc	r9, r1
 4d2:	81 14       	cp	r8, r1
 4d4:	91 04       	cpc	r9, r1
 4d6:	71 f7       	brne	.-36     	; 0x4b4 <__EEPROM_REGION_LENGTH__+0xb4>
 4d8:	e8 c0       	rjmp	.+464    	; 0x6aa <__EEPROM_REGION_LENGTH__+0x2aa>
 4da:	84 36       	cpi	r24, 0x64	; 100
 4dc:	11 f0       	breq	.+4      	; 0x4e2 <__EEPROM_REGION_LENGTH__+0xe2>
 4de:	89 36       	cpi	r24, 0x69	; 105
 4e0:	41 f5       	brne	.+80     	; 0x532 <__EEPROM_REGION_LENGTH__+0x132>
 4e2:	f8 01       	movw	r30, r16
 4e4:	37 fe       	sbrs	r3, 7
 4e6:	07 c0       	rjmp	.+14     	; 0x4f6 <__EEPROM_REGION_LENGTH__+0xf6>
 4e8:	60 81       	ld	r22, Z
 4ea:	71 81       	ldd	r23, Z+1	; 0x01
 4ec:	82 81       	ldd	r24, Z+2	; 0x02
 4ee:	93 81       	ldd	r25, Z+3	; 0x03
 4f0:	0c 5f       	subi	r16, 0xFC	; 252
 4f2:	1f 4f       	sbci	r17, 0xFF	; 255
 4f4:	08 c0       	rjmp	.+16     	; 0x506 <__EEPROM_REGION_LENGTH__+0x106>
 4f6:	60 81       	ld	r22, Z
 4f8:	71 81       	ldd	r23, Z+1	; 0x01
 4fa:	07 2e       	mov	r0, r23
 4fc:	00 0c       	add	r0, r0
 4fe:	88 0b       	sbc	r24, r24
 500:	99 0b       	sbc	r25, r25
 502:	0e 5f       	subi	r16, 0xFE	; 254
 504:	1f 4f       	sbci	r17, 0xFF	; 255
 506:	f3 2d       	mov	r31, r3
 508:	ff 76       	andi	r31, 0x6F	; 111
 50a:	3f 2e       	mov	r3, r31
 50c:	97 ff       	sbrs	r25, 7
 50e:	09 c0       	rjmp	.+18     	; 0x522 <__EEPROM_REGION_LENGTH__+0x122>
 510:	90 95       	com	r25
 512:	80 95       	com	r24
 514:	70 95       	com	r23
 516:	61 95       	neg	r22
 518:	7f 4f       	sbci	r23, 0xFF	; 255
 51a:	8f 4f       	sbci	r24, 0xFF	; 255
 51c:	9f 4f       	sbci	r25, 0xFF	; 255
 51e:	f0 68       	ori	r31, 0x80	; 128
 520:	3f 2e       	mov	r3, r31
 522:	2a e0       	ldi	r18, 0x0A	; 10
 524:	30 e0       	ldi	r19, 0x00	; 0
 526:	a3 01       	movw	r20, r6
 528:	0e 94 bb 03 	call	0x776	; 0x776 <__ultoa_invert>
 52c:	88 2e       	mov	r8, r24
 52e:	86 18       	sub	r8, r6
 530:	45 c0       	rjmp	.+138    	; 0x5bc <__EEPROM_REGION_LENGTH__+0x1bc>
 532:	85 37       	cpi	r24, 0x75	; 117
 534:	31 f4       	brne	.+12     	; 0x542 <__EEPROM_REGION_LENGTH__+0x142>
 536:	23 2d       	mov	r18, r3
 538:	2f 7e       	andi	r18, 0xEF	; 239
 53a:	b2 2e       	mov	r11, r18
 53c:	2a e0       	ldi	r18, 0x0A	; 10
 53e:	30 e0       	ldi	r19, 0x00	; 0
 540:	25 c0       	rjmp	.+74     	; 0x58c <__EEPROM_REGION_LENGTH__+0x18c>
 542:	93 2d       	mov	r25, r3
 544:	99 7f       	andi	r25, 0xF9	; 249
 546:	b9 2e       	mov	r11, r25
 548:	8f 36       	cpi	r24, 0x6F	; 111
 54a:	c1 f0       	breq	.+48     	; 0x57c <__EEPROM_REGION_LENGTH__+0x17c>
 54c:	18 f4       	brcc	.+6      	; 0x554 <__EEPROM_REGION_LENGTH__+0x154>
 54e:	88 35       	cpi	r24, 0x58	; 88
 550:	79 f0       	breq	.+30     	; 0x570 <__EEPROM_REGION_LENGTH__+0x170>
 552:	b5 c0       	rjmp	.+362    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
 554:	80 37       	cpi	r24, 0x70	; 112
 556:	19 f0       	breq	.+6      	; 0x55e <__EEPROM_REGION_LENGTH__+0x15e>
 558:	88 37       	cpi	r24, 0x78	; 120
 55a:	21 f0       	breq	.+8      	; 0x564 <__EEPROM_REGION_LENGTH__+0x164>
 55c:	b0 c0       	rjmp	.+352    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
 55e:	e9 2f       	mov	r30, r25
 560:	e0 61       	ori	r30, 0x10	; 16
 562:	be 2e       	mov	r11, r30
 564:	b4 fe       	sbrs	r11, 4
 566:	0d c0       	rjmp	.+26     	; 0x582 <__EEPROM_REGION_LENGTH__+0x182>
 568:	fb 2d       	mov	r31, r11
 56a:	f4 60       	ori	r31, 0x04	; 4
 56c:	bf 2e       	mov	r11, r31
 56e:	09 c0       	rjmp	.+18     	; 0x582 <__EEPROM_REGION_LENGTH__+0x182>
 570:	34 fe       	sbrs	r3, 4
 572:	0a c0       	rjmp	.+20     	; 0x588 <__EEPROM_REGION_LENGTH__+0x188>
 574:	29 2f       	mov	r18, r25
 576:	26 60       	ori	r18, 0x06	; 6
 578:	b2 2e       	mov	r11, r18
 57a:	06 c0       	rjmp	.+12     	; 0x588 <__EEPROM_REGION_LENGTH__+0x188>
 57c:	28 e0       	ldi	r18, 0x08	; 8
 57e:	30 e0       	ldi	r19, 0x00	; 0
 580:	05 c0       	rjmp	.+10     	; 0x58c <__EEPROM_REGION_LENGTH__+0x18c>
 582:	20 e1       	ldi	r18, 0x10	; 16
 584:	30 e0       	ldi	r19, 0x00	; 0
 586:	02 c0       	rjmp	.+4      	; 0x58c <__EEPROM_REGION_LENGTH__+0x18c>
 588:	20 e1       	ldi	r18, 0x10	; 16
 58a:	32 e0       	ldi	r19, 0x02	; 2
 58c:	f8 01       	movw	r30, r16
 58e:	b7 fe       	sbrs	r11, 7
 590:	07 c0       	rjmp	.+14     	; 0x5a0 <__EEPROM_REGION_LENGTH__+0x1a0>
 592:	60 81       	ld	r22, Z
 594:	71 81       	ldd	r23, Z+1	; 0x01
 596:	82 81       	ldd	r24, Z+2	; 0x02
 598:	93 81       	ldd	r25, Z+3	; 0x03
 59a:	0c 5f       	subi	r16, 0xFC	; 252
 59c:	1f 4f       	sbci	r17, 0xFF	; 255
 59e:	06 c0       	rjmp	.+12     	; 0x5ac <__EEPROM_REGION_LENGTH__+0x1ac>
 5a0:	60 81       	ld	r22, Z
 5a2:	71 81       	ldd	r23, Z+1	; 0x01
 5a4:	80 e0       	ldi	r24, 0x00	; 0
 5a6:	90 e0       	ldi	r25, 0x00	; 0
 5a8:	0e 5f       	subi	r16, 0xFE	; 254
 5aa:	1f 4f       	sbci	r17, 0xFF	; 255
 5ac:	a3 01       	movw	r20, r6
 5ae:	0e 94 bb 03 	call	0x776	; 0x776 <__ultoa_invert>
 5b2:	88 2e       	mov	r8, r24
 5b4:	86 18       	sub	r8, r6
 5b6:	fb 2d       	mov	r31, r11
 5b8:	ff 77       	andi	r31, 0x7F	; 127
 5ba:	3f 2e       	mov	r3, r31
 5bc:	36 fe       	sbrs	r3, 6
 5be:	0d c0       	rjmp	.+26     	; 0x5da <__EEPROM_REGION_LENGTH__+0x1da>
 5c0:	23 2d       	mov	r18, r3
 5c2:	2e 7f       	andi	r18, 0xFE	; 254
 5c4:	a2 2e       	mov	r10, r18
 5c6:	89 14       	cp	r8, r9
 5c8:	58 f4       	brcc	.+22     	; 0x5e0 <__EEPROM_REGION_LENGTH__+0x1e0>
 5ca:	34 fe       	sbrs	r3, 4
 5cc:	0b c0       	rjmp	.+22     	; 0x5e4 <__EEPROM_REGION_LENGTH__+0x1e4>
 5ce:	32 fc       	sbrc	r3, 2
 5d0:	09 c0       	rjmp	.+18     	; 0x5e4 <__EEPROM_REGION_LENGTH__+0x1e4>
 5d2:	83 2d       	mov	r24, r3
 5d4:	8e 7e       	andi	r24, 0xEE	; 238
 5d6:	a8 2e       	mov	r10, r24
 5d8:	05 c0       	rjmp	.+10     	; 0x5e4 <__EEPROM_REGION_LENGTH__+0x1e4>
 5da:	b8 2c       	mov	r11, r8
 5dc:	a3 2c       	mov	r10, r3
 5de:	03 c0       	rjmp	.+6      	; 0x5e6 <__EEPROM_REGION_LENGTH__+0x1e6>
 5e0:	b8 2c       	mov	r11, r8
 5e2:	01 c0       	rjmp	.+2      	; 0x5e6 <__EEPROM_REGION_LENGTH__+0x1e6>
 5e4:	b9 2c       	mov	r11, r9
 5e6:	a4 fe       	sbrs	r10, 4
 5e8:	0f c0       	rjmp	.+30     	; 0x608 <__EEPROM_REGION_LENGTH__+0x208>
 5ea:	fe 01       	movw	r30, r28
 5ec:	e8 0d       	add	r30, r8
 5ee:	f1 1d       	adc	r31, r1
 5f0:	80 81       	ld	r24, Z
 5f2:	80 33       	cpi	r24, 0x30	; 48
 5f4:	21 f4       	brne	.+8      	; 0x5fe <__EEPROM_REGION_LENGTH__+0x1fe>
 5f6:	9a 2d       	mov	r25, r10
 5f8:	99 7e       	andi	r25, 0xE9	; 233
 5fa:	a9 2e       	mov	r10, r25
 5fc:	09 c0       	rjmp	.+18     	; 0x610 <__EEPROM_REGION_LENGTH__+0x210>
 5fe:	a2 fe       	sbrs	r10, 2
 600:	06 c0       	rjmp	.+12     	; 0x60e <__EEPROM_REGION_LENGTH__+0x20e>
 602:	b3 94       	inc	r11
 604:	b3 94       	inc	r11
 606:	04 c0       	rjmp	.+8      	; 0x610 <__EEPROM_REGION_LENGTH__+0x210>
 608:	8a 2d       	mov	r24, r10
 60a:	86 78       	andi	r24, 0x86	; 134
 60c:	09 f0       	breq	.+2      	; 0x610 <__EEPROM_REGION_LENGTH__+0x210>
 60e:	b3 94       	inc	r11
 610:	a3 fc       	sbrc	r10, 3
 612:	11 c0       	rjmp	.+34     	; 0x636 <__EEPROM_REGION_LENGTH__+0x236>
 614:	a0 fe       	sbrs	r10, 0
 616:	06 c0       	rjmp	.+12     	; 0x624 <__EEPROM_REGION_LENGTH__+0x224>
 618:	b2 14       	cp	r11, r2
 61a:	88 f4       	brcc	.+34     	; 0x63e <__EEPROM_REGION_LENGTH__+0x23e>
 61c:	28 0c       	add	r2, r8
 61e:	92 2c       	mov	r9, r2
 620:	9b 18       	sub	r9, r11
 622:	0e c0       	rjmp	.+28     	; 0x640 <__EEPROM_REGION_LENGTH__+0x240>
 624:	b2 14       	cp	r11, r2
 626:	60 f4       	brcc	.+24     	; 0x640 <__EEPROM_REGION_LENGTH__+0x240>
 628:	b6 01       	movw	r22, r12
 62a:	80 e2       	ldi	r24, 0x20	; 32
 62c:	90 e0       	ldi	r25, 0x00	; 0
 62e:	0e 94 7f 03 	call	0x6fe	; 0x6fe <fputc>
 632:	b3 94       	inc	r11
 634:	f7 cf       	rjmp	.-18     	; 0x624 <__EEPROM_REGION_LENGTH__+0x224>
 636:	b2 14       	cp	r11, r2
 638:	18 f4       	brcc	.+6      	; 0x640 <__EEPROM_REGION_LENGTH__+0x240>
 63a:	2b 18       	sub	r2, r11
 63c:	02 c0       	rjmp	.+4      	; 0x642 <__EEPROM_REGION_LENGTH__+0x242>
 63e:	98 2c       	mov	r9, r8
 640:	21 2c       	mov	r2, r1
 642:	a4 fe       	sbrs	r10, 4
 644:	10 c0       	rjmp	.+32     	; 0x666 <__EEPROM_REGION_LENGTH__+0x266>
 646:	b6 01       	movw	r22, r12
 648:	80 e3       	ldi	r24, 0x30	; 48
 64a:	90 e0       	ldi	r25, 0x00	; 0
 64c:	0e 94 7f 03 	call	0x6fe	; 0x6fe <fputc>
 650:	a2 fe       	sbrs	r10, 2
 652:	17 c0       	rjmp	.+46     	; 0x682 <__EEPROM_REGION_LENGTH__+0x282>
 654:	a1 fc       	sbrc	r10, 1
 656:	03 c0       	rjmp	.+6      	; 0x65e <__EEPROM_REGION_LENGTH__+0x25e>
 658:	88 e7       	ldi	r24, 0x78	; 120
 65a:	90 e0       	ldi	r25, 0x00	; 0
 65c:	02 c0       	rjmp	.+4      	; 0x662 <__EEPROM_REGION_LENGTH__+0x262>
 65e:	88 e5       	ldi	r24, 0x58	; 88
 660:	90 e0       	ldi	r25, 0x00	; 0
 662:	b6 01       	movw	r22, r12
 664:	0c c0       	rjmp	.+24     	; 0x67e <__EEPROM_REGION_LENGTH__+0x27e>
 666:	8a 2d       	mov	r24, r10
 668:	86 78       	andi	r24, 0x86	; 134
 66a:	59 f0       	breq	.+22     	; 0x682 <__EEPROM_REGION_LENGTH__+0x282>
 66c:	a1 fe       	sbrs	r10, 1
 66e:	02 c0       	rjmp	.+4      	; 0x674 <__EEPROM_REGION_LENGTH__+0x274>
 670:	8b e2       	ldi	r24, 0x2B	; 43
 672:	01 c0       	rjmp	.+2      	; 0x676 <__EEPROM_REGION_LENGTH__+0x276>
 674:	80 e2       	ldi	r24, 0x20	; 32
 676:	a7 fc       	sbrc	r10, 7
 678:	8d e2       	ldi	r24, 0x2D	; 45
 67a:	b6 01       	movw	r22, r12
 67c:	90 e0       	ldi	r25, 0x00	; 0
 67e:	0e 94 7f 03 	call	0x6fe	; 0x6fe <fputc>
 682:	89 14       	cp	r8, r9
 684:	38 f4       	brcc	.+14     	; 0x694 <__EEPROM_REGION_LENGTH__+0x294>
 686:	b6 01       	movw	r22, r12
 688:	80 e3       	ldi	r24, 0x30	; 48
 68a:	90 e0       	ldi	r25, 0x00	; 0
 68c:	0e 94 7f 03 	call	0x6fe	; 0x6fe <fputc>
 690:	9a 94       	dec	r9
 692:	f7 cf       	rjmp	.-18     	; 0x682 <__EEPROM_REGION_LENGTH__+0x282>
 694:	8a 94       	dec	r8
 696:	f3 01       	movw	r30, r6
 698:	e8 0d       	add	r30, r8
 69a:	f1 1d       	adc	r31, r1
 69c:	80 81       	ld	r24, Z
 69e:	b6 01       	movw	r22, r12
 6a0:	90 e0       	ldi	r25, 0x00	; 0
 6a2:	0e 94 7f 03 	call	0x6fe	; 0x6fe <fputc>
 6a6:	81 10       	cpse	r8, r1
 6a8:	f5 cf       	rjmp	.-22     	; 0x694 <__EEPROM_REGION_LENGTH__+0x294>
 6aa:	22 20       	and	r2, r2
 6ac:	09 f4       	brne	.+2      	; 0x6b0 <__EEPROM_REGION_LENGTH__+0x2b0>
 6ae:	42 ce       	rjmp	.-892    	; 0x334 <vfprintf+0x24>
 6b0:	b6 01       	movw	r22, r12
 6b2:	80 e2       	ldi	r24, 0x20	; 32
 6b4:	90 e0       	ldi	r25, 0x00	; 0
 6b6:	0e 94 7f 03 	call	0x6fe	; 0x6fe <fputc>
 6ba:	2a 94       	dec	r2
 6bc:	f6 cf       	rjmp	.-20     	; 0x6aa <__EEPROM_REGION_LENGTH__+0x2aa>
 6be:	f6 01       	movw	r30, r12
 6c0:	86 81       	ldd	r24, Z+6	; 0x06
 6c2:	97 81       	ldd	r25, Z+7	; 0x07
 6c4:	02 c0       	rjmp	.+4      	; 0x6ca <__EEPROM_REGION_LENGTH__+0x2ca>
 6c6:	8f ef       	ldi	r24, 0xFF	; 255
 6c8:	9f ef       	ldi	r25, 0xFF	; 255
 6ca:	2b 96       	adiw	r28, 0x0b	; 11
 6cc:	e2 e1       	ldi	r30, 0x12	; 18
 6ce:	0c 94 35 04 	jmp	0x86a	; 0x86a <__epilogue_restores__>

000006d2 <strnlen_P>:
 6d2:	fc 01       	movw	r30, r24
 6d4:	05 90       	lpm	r0, Z+
 6d6:	61 50       	subi	r22, 0x01	; 1
 6d8:	70 40       	sbci	r23, 0x00	; 0
 6da:	01 10       	cpse	r0, r1
 6dc:	d8 f7       	brcc	.-10     	; 0x6d4 <strnlen_P+0x2>
 6de:	80 95       	com	r24
 6e0:	90 95       	com	r25
 6e2:	8e 0f       	add	r24, r30
 6e4:	9f 1f       	adc	r25, r31
 6e6:	08 95       	ret

000006e8 <strnlen>:
 6e8:	fc 01       	movw	r30, r24
 6ea:	61 50       	subi	r22, 0x01	; 1
 6ec:	70 40       	sbci	r23, 0x00	; 0
 6ee:	01 90       	ld	r0, Z+
 6f0:	01 10       	cpse	r0, r1
 6f2:	d8 f7       	brcc	.-10     	; 0x6ea <strnlen+0x2>
 6f4:	80 95       	com	r24
 6f6:	90 95       	com	r25
 6f8:	8e 0f       	add	r24, r30
 6fa:	9f 1f       	adc	r25, r31
 6fc:	08 95       	ret

000006fe <fputc>:
 6fe:	0f 93       	push	r16
 700:	1f 93       	push	r17
 702:	cf 93       	push	r28
 704:	df 93       	push	r29
 706:	fb 01       	movw	r30, r22
 708:	23 81       	ldd	r18, Z+3	; 0x03
 70a:	21 fd       	sbrc	r18, 1
 70c:	03 c0       	rjmp	.+6      	; 0x714 <fputc+0x16>
 70e:	8f ef       	ldi	r24, 0xFF	; 255
 710:	9f ef       	ldi	r25, 0xFF	; 255
 712:	2c c0       	rjmp	.+88     	; 0x76c <fputc+0x6e>
 714:	22 ff       	sbrs	r18, 2
 716:	16 c0       	rjmp	.+44     	; 0x744 <fputc+0x46>
 718:	46 81       	ldd	r20, Z+6	; 0x06
 71a:	57 81       	ldd	r21, Z+7	; 0x07
 71c:	24 81       	ldd	r18, Z+4	; 0x04
 71e:	35 81       	ldd	r19, Z+5	; 0x05
 720:	42 17       	cp	r20, r18
 722:	53 07       	cpc	r21, r19
 724:	44 f4       	brge	.+16     	; 0x736 <fputc+0x38>
 726:	a0 81       	ld	r26, Z
 728:	b1 81       	ldd	r27, Z+1	; 0x01
 72a:	9d 01       	movw	r18, r26
 72c:	2f 5f       	subi	r18, 0xFF	; 255
 72e:	3f 4f       	sbci	r19, 0xFF	; 255
 730:	31 83       	std	Z+1, r19	; 0x01
 732:	20 83       	st	Z, r18
 734:	8c 93       	st	X, r24
 736:	26 81       	ldd	r18, Z+6	; 0x06
 738:	37 81       	ldd	r19, Z+7	; 0x07
 73a:	2f 5f       	subi	r18, 0xFF	; 255
 73c:	3f 4f       	sbci	r19, 0xFF	; 255
 73e:	37 83       	std	Z+7, r19	; 0x07
 740:	26 83       	std	Z+6, r18	; 0x06
 742:	14 c0       	rjmp	.+40     	; 0x76c <fputc+0x6e>
 744:	8b 01       	movw	r16, r22
 746:	ec 01       	movw	r28, r24
 748:	fb 01       	movw	r30, r22
 74a:	00 84       	ldd	r0, Z+8	; 0x08
 74c:	f1 85       	ldd	r31, Z+9	; 0x09
 74e:	e0 2d       	mov	r30, r0
 750:	09 95       	icall
 752:	89 2b       	or	r24, r25
 754:	e1 f6       	brne	.-72     	; 0x70e <fputc+0x10>
 756:	d8 01       	movw	r26, r16
 758:	16 96       	adiw	r26, 0x06	; 6
 75a:	8d 91       	ld	r24, X+
 75c:	9c 91       	ld	r25, X
 75e:	17 97       	sbiw	r26, 0x07	; 7
 760:	01 96       	adiw	r24, 0x01	; 1
 762:	17 96       	adiw	r26, 0x07	; 7
 764:	9c 93       	st	X, r25
 766:	8e 93       	st	-X, r24
 768:	16 97       	sbiw	r26, 0x06	; 6
 76a:	ce 01       	movw	r24, r28
 76c:	df 91       	pop	r29
 76e:	cf 91       	pop	r28
 770:	1f 91       	pop	r17
 772:	0f 91       	pop	r16
 774:	08 95       	ret

00000776 <__ultoa_invert>:
 776:	fa 01       	movw	r30, r20
 778:	aa 27       	eor	r26, r26
 77a:	28 30       	cpi	r18, 0x08	; 8
 77c:	51 f1       	breq	.+84     	; 0x7d2 <__ultoa_invert+0x5c>
 77e:	20 31       	cpi	r18, 0x10	; 16
 780:	81 f1       	breq	.+96     	; 0x7e2 <__ultoa_invert+0x6c>
 782:	e8 94       	clt
 784:	6f 93       	push	r22
 786:	6e 7f       	andi	r22, 0xFE	; 254
 788:	6e 5f       	subi	r22, 0xFE	; 254
 78a:	7f 4f       	sbci	r23, 0xFF	; 255
 78c:	8f 4f       	sbci	r24, 0xFF	; 255
 78e:	9f 4f       	sbci	r25, 0xFF	; 255
 790:	af 4f       	sbci	r26, 0xFF	; 255
 792:	b1 e0       	ldi	r27, 0x01	; 1
 794:	3e d0       	rcall	.+124    	; 0x812 <__DATA_REGION_LENGTH__+0x12>
 796:	b4 e0       	ldi	r27, 0x04	; 4
 798:	3c d0       	rcall	.+120    	; 0x812 <__DATA_REGION_LENGTH__+0x12>
 79a:	67 0f       	add	r22, r23
 79c:	78 1f       	adc	r23, r24
 79e:	89 1f       	adc	r24, r25
 7a0:	9a 1f       	adc	r25, r26
 7a2:	a1 1d       	adc	r26, r1
 7a4:	68 0f       	add	r22, r24
 7a6:	79 1f       	adc	r23, r25
 7a8:	8a 1f       	adc	r24, r26
 7aa:	91 1d       	adc	r25, r1
 7ac:	a1 1d       	adc	r26, r1
 7ae:	6a 0f       	add	r22, r26
 7b0:	71 1d       	adc	r23, r1
 7b2:	81 1d       	adc	r24, r1
 7b4:	91 1d       	adc	r25, r1
 7b6:	a1 1d       	adc	r26, r1
 7b8:	20 d0       	rcall	.+64     	; 0x7fa <__ultoa_invert+0x84>
 7ba:	09 f4       	brne	.+2      	; 0x7be <__ultoa_invert+0x48>
 7bc:	68 94       	set
 7be:	3f 91       	pop	r19
 7c0:	2a e0       	ldi	r18, 0x0A	; 10
 7c2:	26 9f       	mul	r18, r22
 7c4:	11 24       	eor	r1, r1
 7c6:	30 19       	sub	r19, r0
 7c8:	30 5d       	subi	r19, 0xD0	; 208
 7ca:	31 93       	st	Z+, r19
 7cc:	de f6       	brtc	.-74     	; 0x784 <__ultoa_invert+0xe>
 7ce:	cf 01       	movw	r24, r30
 7d0:	08 95       	ret
 7d2:	46 2f       	mov	r20, r22
 7d4:	47 70       	andi	r20, 0x07	; 7
 7d6:	40 5d       	subi	r20, 0xD0	; 208
 7d8:	41 93       	st	Z+, r20
 7da:	b3 e0       	ldi	r27, 0x03	; 3
 7dc:	0f d0       	rcall	.+30     	; 0x7fc <__ultoa_invert+0x86>
 7de:	c9 f7       	brne	.-14     	; 0x7d2 <__ultoa_invert+0x5c>
 7e0:	f6 cf       	rjmp	.-20     	; 0x7ce <__ultoa_invert+0x58>
 7e2:	46 2f       	mov	r20, r22
 7e4:	4f 70       	andi	r20, 0x0F	; 15
 7e6:	40 5d       	subi	r20, 0xD0	; 208
 7e8:	4a 33       	cpi	r20, 0x3A	; 58
 7ea:	18 f0       	brcs	.+6      	; 0x7f2 <__ultoa_invert+0x7c>
 7ec:	49 5d       	subi	r20, 0xD9	; 217
 7ee:	31 fd       	sbrc	r19, 1
 7f0:	40 52       	subi	r20, 0x20	; 32
 7f2:	41 93       	st	Z+, r20
 7f4:	02 d0       	rcall	.+4      	; 0x7fa <__ultoa_invert+0x84>
 7f6:	a9 f7       	brne	.-22     	; 0x7e2 <__ultoa_invert+0x6c>
 7f8:	ea cf       	rjmp	.-44     	; 0x7ce <__ultoa_invert+0x58>
 7fa:	b4 e0       	ldi	r27, 0x04	; 4
 7fc:	a6 95       	lsr	r26
 7fe:	97 95       	ror	r25
 800:	87 95       	ror	r24
 802:	77 95       	ror	r23
 804:	67 95       	ror	r22
 806:	ba 95       	dec	r27
 808:	c9 f7       	brne	.-14     	; 0x7fc <__ultoa_invert+0x86>
 80a:	00 97       	sbiw	r24, 0x00	; 0
 80c:	61 05       	cpc	r22, r1
 80e:	71 05       	cpc	r23, r1
 810:	08 95       	ret
 812:	9b 01       	movw	r18, r22
 814:	ac 01       	movw	r20, r24
 816:	0a 2e       	mov	r0, r26
 818:	06 94       	lsr	r0
 81a:	57 95       	ror	r21
 81c:	47 95       	ror	r20
 81e:	37 95       	ror	r19
 820:	27 95       	ror	r18
 822:	ba 95       	dec	r27
 824:	c9 f7       	brne	.-14     	; 0x818 <__DATA_REGION_LENGTH__+0x18>
 826:	62 0f       	add	r22, r18
 828:	73 1f       	adc	r23, r19
 82a:	84 1f       	adc	r24, r20
 82c:	95 1f       	adc	r25, r21
 82e:	a0 1d       	adc	r26, r0
 830:	08 95       	ret

00000832 <__prologue_saves__>:
 832:	2f 92       	push	r2
 834:	3f 92       	push	r3
 836:	4f 92       	push	r4
 838:	5f 92       	push	r5
 83a:	6f 92       	push	r6
 83c:	7f 92       	push	r7
 83e:	8f 92       	push	r8
 840:	9f 92       	push	r9
 842:	af 92       	push	r10
 844:	bf 92       	push	r11
 846:	cf 92       	push	r12
 848:	df 92       	push	r13
 84a:	ef 92       	push	r14
 84c:	ff 92       	push	r15
 84e:	0f 93       	push	r16
 850:	1f 93       	push	r17
 852:	cf 93       	push	r28
 854:	df 93       	push	r29
 856:	cd b7       	in	r28, 0x3d	; 61
 858:	de b7       	in	r29, 0x3e	; 62
 85a:	ca 1b       	sub	r28, r26
 85c:	db 0b       	sbc	r29, r27
 85e:	0f b6       	in	r0, 0x3f	; 63
 860:	f8 94       	cli
 862:	de bf       	out	0x3e, r29	; 62
 864:	0f be       	out	0x3f, r0	; 63
 866:	cd bf       	out	0x3d, r28	; 61
 868:	09 94       	ijmp

0000086a <__epilogue_restores__>:
 86a:	2a 88       	ldd	r2, Y+18	; 0x12
 86c:	39 88       	ldd	r3, Y+17	; 0x11
 86e:	48 88       	ldd	r4, Y+16	; 0x10
 870:	5f 84       	ldd	r5, Y+15	; 0x0f
 872:	6e 84       	ldd	r6, Y+14	; 0x0e
 874:	7d 84       	ldd	r7, Y+13	; 0x0d
 876:	8c 84       	ldd	r8, Y+12	; 0x0c
 878:	9b 84       	ldd	r9, Y+11	; 0x0b
 87a:	aa 84       	ldd	r10, Y+10	; 0x0a
 87c:	b9 84       	ldd	r11, Y+9	; 0x09
 87e:	c8 84       	ldd	r12, Y+8	; 0x08
 880:	df 80       	ldd	r13, Y+7	; 0x07
 882:	ee 80       	ldd	r14, Y+6	; 0x06
 884:	fd 80       	ldd	r15, Y+5	; 0x05
 886:	0c 81       	ldd	r16, Y+4	; 0x04
 888:	1b 81       	ldd	r17, Y+3	; 0x03
 88a:	aa 81       	ldd	r26, Y+2	; 0x02
 88c:	b9 81       	ldd	r27, Y+1	; 0x01
 88e:	ce 0f       	add	r28, r30
 890:	d1 1d       	adc	r29, r1
 892:	0f b6       	in	r0, 0x3f	; 63
 894:	f8 94       	cli
 896:	de bf       	out	0x3e, r29	; 62
 898:	0f be       	out	0x3f, r0	; 63
 89a:	cd bf       	out	0x3d, r28	; 61
 89c:	ed 01       	movw	r28, r26
 89e:	08 95       	ret

000008a0 <_exit>:
 8a0:	f8 94       	cli

000008a2 <__stop_program>:
 8a2:	ff cf       	rjmp	.-2      	; 0x8a2 <__stop_program>
