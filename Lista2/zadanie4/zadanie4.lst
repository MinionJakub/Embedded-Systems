
zadanie4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000a  00800100  00000160  000001d4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000160  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .stab         00000708  00000000  00000000  000001e0  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000d10  00000000  00000000  000008e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .comment      00000011  00000000  00000000  000015f8  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000160c  2**2
                  CONTENTS, READONLY
  6 .debug_info   000005f4  00000000  00000000  0000164c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000005a2  00000000  00000000  00001c40  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000001a  00000000  00000000  000021e2  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000208  00000000  00000000  000021fc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   8:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  10:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  14:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  18:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  1c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  20:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  24:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  28:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  2c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  30:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  34:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  38:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  3c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  40:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  44:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  48:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  4c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  50:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  54:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  58:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  5c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  60:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  64:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e0 e6       	ldi	r30, 0x60	; 96
  7c:	f1 e0       	ldi	r31, 0x01	; 1
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	aa 30       	cpi	r26, 0x0A	; 10
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>
  8a:	0e 94 6c 00 	call	0xd8	; 0xd8 <main>
  8e:	0c 94 ae 00 	jmp	0x15c	; 0x15c <_exit>

00000092 <__bad_interrupt>:
  92:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000096 <mig>:
128 , //8
144   //9
};

void mig(int8_t dioda1, int8_t dioda2){
    T_PORT &= ~(_BV(PC0) | _BV(PC1));
  96:	98 b1       	in	r25, 0x08	; 8
  98:	9c 7f       	andi	r25, 0xFC	; 252
  9a:	98 b9       	out	0x08, r25	; 8
    T_PORT |= _BV(PC0);
  9c:	40 9a       	sbi	0x08, 0	; 8
    LED_PORT = digits[dioda1];
  9e:	e8 2f       	mov	r30, r24
  a0:	88 0f       	add	r24, r24
  a2:	ff 0b       	sbc	r31, r31
  a4:	e0 50       	subi	r30, 0x00	; 0
  a6:	ff 4f       	sbci	r31, 0xFF	; 255
  a8:	80 81       	ld	r24, Z
  aa:	8b b9       	out	0x0b, r24	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  ac:	8f e3       	ldi	r24, 0x3F	; 63
  ae:	9c e9       	ldi	r25, 0x9C	; 156
  b0:	01 97       	sbiw	r24, 0x01	; 1
  b2:	f1 f7       	brne	.-4      	; 0xb0 <mig+0x1a>
  b4:	00 c0       	rjmp	.+0      	; 0xb6 <mig+0x20>
  b6:	00 00       	nop
    _delay_ms(10);
    T_PORT &= ~_BV(PC0);
  b8:	40 98       	cbi	0x08, 0	; 8
    LED_PORT = digits[dioda2];
  ba:	e6 2f       	mov	r30, r22
  bc:	66 0f       	add	r22, r22
  be:	ff 0b       	sbc	r31, r31
  c0:	e0 50       	subi	r30, 0x00	; 0
  c2:	ff 4f       	sbci	r31, 0xFF	; 255
  c4:	80 81       	ld	r24, Z
  c6:	8b b9       	out	0x0b, r24	; 11
    T_PORT |= _BV(PC1);
  c8:	41 9a       	sbi	0x08, 1	; 8
  ca:	8f e3       	ldi	r24, 0x3F	; 63
  cc:	9c e9       	ldi	r25, 0x9C	; 156
  ce:	01 97       	sbiw	r24, 0x01	; 1
  d0:	f1 f7       	brne	.-4      	; 0xce <mig+0x38>
  d2:	00 c0       	rjmp	.+0      	; 0xd4 <mig+0x3e>
  d4:	00 00       	nop
  d6:	08 95       	ret

000000d8 <main>:
    _delay_ms(10);
}

int main(){
    // UCSR0B |= _BV(RXEN0) | _BV(TXEN0);
    UCSR0B &= ~_BV(RXEN0) & ~_BV(TXEN0);
  d8:	80 91 c1 00 	lds	r24, 0x00C1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
  dc:	87 7e       	andi	r24, 0xE7	; 231
  de:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    LED_DDR = 0xff;
  e2:	8f ef       	ldi	r24, 0xFF	; 255
  e4:	8a b9       	out	0x0a, r24	; 10
    LED_PORT = 0xff;
  e6:	8b b9       	out	0x0b, r24	; 11
    T_DDR |= _BV(PC0) | _BV(PC1);
  e8:	87 b1       	in	r24, 0x07	; 7
  ea:	83 60       	ori	r24, 0x03	; 3
  ec:	87 b9       	out	0x07, r24	; 7
    T_PORT &= ~(_BV(PC0) | _BV(PC1));
  ee:	88 b1       	in	r24, 0x08	; 8
  f0:	8c 7f       	andi	r24, 0xFC	; 252
  f2:	88 b9       	out	0x08, r24	; 8
    int8_t counter_1 = 0;
    int8_t counter_2 = 0;
  f4:	20 e0       	ldi	r18, 0x00	; 0
    UCSR0B &= ~_BV(RXEN0) & ~_BV(TXEN0);
    LED_DDR = 0xff;
    LED_PORT = 0xff;
    T_DDR |= _BV(PC0) | _BV(PC1);
    T_PORT &= ~(_BV(PC0) | _BV(PC1));
    int8_t counter_1 = 0;
  f6:	30 e0       	ldi	r19, 0x00	; 0
    while(1){
        if(counter_2 == 10){
            counter_1++;
            counter_2 = 0;
        }
        if(counter_1 == 6) counter_1 = 0;
  f8:	36 30       	cpi	r19, 0x06	; 6
  fa:	61 f1       	breq	.+88     	; 0x154 <main+0x7c>
  fc:	a3 2f       	mov	r26, r19
  fe:	03 2e       	mov	r0, r19
 100:	00 0c       	add	r0, r0
 102:	bb 0b       	sbc	r27, r27
 104:	92 e3       	ldi	r25, 0x32	; 50
 106:	e2 2f       	mov	r30, r18
 108:	02 2e       	mov	r0, r18
 10a:	00 0c       	add	r0, r0
 10c:	ff 0b       	sbc	r31, r31
 10e:	e0 50       	subi	r30, 0x00	; 0
 110:	ff 4f       	sbci	r31, 0xFF	; 255
 112:	a0 50       	subi	r26, 0x00	; 0
 114:	bf 4f       	sbci	r27, 0xFF	; 255
128 , //8
144   //9
};

void mig(int8_t dioda1, int8_t dioda2){
    T_PORT &= ~(_BV(PC0) | _BV(PC1));
 116:	88 b1       	in	r24, 0x08	; 8
 118:	8c 7f       	andi	r24, 0xFC	; 252
 11a:	88 b9       	out	0x08, r24	; 8
    T_PORT |= _BV(PC0);
 11c:	40 9a       	sbi	0x08, 0	; 8
    LED_PORT = digits[dioda1];
 11e:	80 81       	ld	r24, Z
 120:	8b b9       	out	0x0b, r24	; 11
 122:	cf e3       	ldi	r28, 0x3F	; 63
 124:	dc e9       	ldi	r29, 0x9C	; 156
 126:	21 97       	sbiw	r28, 0x01	; 1
 128:	f1 f7       	brne	.-4      	; 0x126 <main+0x4e>
 12a:	00 c0       	rjmp	.+0      	; 0x12c <main+0x54>
 12c:	00 00       	nop
    _delay_ms(10);
    T_PORT &= ~_BV(PC0);
 12e:	40 98       	cbi	0x08, 0	; 8
    LED_PORT = digits[dioda2];
 130:	8c 91       	ld	r24, X
 132:	8b b9       	out	0x0b, r24	; 11
    T_PORT |= _BV(PC1);
 134:	41 9a       	sbi	0x08, 1	; 8
 136:	cf e3       	ldi	r28, 0x3F	; 63
 138:	dc e9       	ldi	r29, 0x9C	; 156
 13a:	21 97       	sbiw	r28, 0x01	; 1
 13c:	f1 f7       	brne	.-4      	; 0x13a <main+0x62>
 13e:	00 c0       	rjmp	.+0      	; 0x140 <main+0x68>
 140:	00 00       	nop
 142:	91 50       	subi	r25, 0x01	; 1
        if(counter_2 == 10){
            counter_1++;
            counter_2 = 0;
        }
        if(counter_1 == 6) counter_1 = 0;
        for(int8_t i = 0; i < 50; i++)
 144:	41 f7       	brne	.-48     	; 0x116 <main+0x3e>
            mig(counter_2,counter_1);
        counter_2++;
 146:	2f 5f       	subi	r18, 0xFF	; 255
    T_DDR |= _BV(PC0) | _BV(PC1);
    T_PORT &= ~(_BV(PC0) | _BV(PC1));
    int8_t counter_1 = 0;
    int8_t counter_2 = 0;
    while(1){
        if(counter_2 == 10){
 148:	2a 30       	cpi	r18, 0x0A	; 10
 14a:	b1 f6       	brne	.-84     	; 0xf8 <main+0x20>
            counter_1++;
 14c:	3f 5f       	subi	r19, 0xFF	; 255
            counter_2 = 0;
 14e:	20 e0       	ldi	r18, 0x00	; 0
        }
        if(counter_1 == 6) counter_1 = 0;
 150:	36 30       	cpi	r19, 0x06	; 6
 152:	a1 f6       	brne	.-88     	; 0xfc <main+0x24>
 154:	a0 e0       	ldi	r26, 0x00	; 0
 156:	b0 e0       	ldi	r27, 0x00	; 0
 158:	30 e0       	ldi	r19, 0x00	; 0
 15a:	d4 cf       	rjmp	.-88     	; 0x104 <main+0x2c>

0000015c <_exit>:
 15c:	f8 94       	cli

0000015e <__stop_program>:
 15e:	ff cf       	rjmp	.-2      	; 0x15e <__stop_program>
