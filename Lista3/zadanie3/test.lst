
test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000010  00800100  0000096c  00000a00  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000096c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000014  00800110  00800110  00000a10  2**0
                  ALLOC
  3 .stab         00000ba0  00000000  00000000  00000a10  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000eda  00000000  00000000  000015b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000011  00000000  00000000  0000248a  2**0
                  CONTENTS, READONLY
  6 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000249c  2**2
                  CONTENTS, READONLY
  7 .debug_info   000005f4  00000000  00000000  000024dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000005a2  00000000  00000000  00002ad0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000001a  00000000  00000000  00003072  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000208  00000000  00000000  0000308c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ec e6       	ldi	r30, 0x6C	; 108
  7c:	f9 e0       	ldi	r31, 0x09	; 9
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a0 31       	cpi	r26, 0x10	; 16
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a0 e1       	ldi	r26, 0x10	; 16
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a4 32       	cpi	r26, 0x24	; 36
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 a9 00 	call	0x152	; 0x152 <main>
  9e:	0c 94 b4 04 	jmp	0x968	; 0x968 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <uart_transmit>:

// transmisja jednego znaku
int uart_transmit(char data, FILE *stream)
{
  // czekaj aż transmiter gotowy
  while(!(UCSR0A & _BV(UDRE0)));
  a6:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
  aa:	95 ff       	sbrs	r25, 5
  ac:	fc cf       	rjmp	.-8      	; 0xa6 <uart_transmit>
  UDR0 = data;
  ae:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
  return 0;
}
  b2:	80 e0       	ldi	r24, 0x00	; 0
  b4:	90 e0       	ldi	r25, 0x00	; 0
  b6:	08 95       	ret

000000b8 <uart_receive>:

// odczyt jednego znaku
int uart_receive(FILE *stream)
{
  // czekaj aż znak dostępny
  while (!(UCSR0A & _BV(RXC0)));
  b8:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
  bc:	87 ff       	sbrs	r24, 7
  be:	fc cf       	rjmp	.-8      	; 0xb8 <uart_receive>
  return UDR0;
  c0:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
}
  c4:	90 e0       	ldi	r25, 0x00	; 0
  c6:	08 95       	ret

000000c8 <pomiar>:
#define LED_DDR DDRB    //dioda ddr
#define LED_PORT PORTB  //dioda port 

uint16_t pomiar(){
      uint16_t result = 0;
      LED_PORT &= ~_BV(LED);
  c8:	29 98       	cbi	0x05, 1	; 5
  ca:	24 e0       	ldi	r18, 0x04	; 4
#define LED PB1 //Dioda
#define LED_DDR DDRB    //dioda ddr
#define LED_PORT PORTB  //dioda port 

uint16_t pomiar(){
      uint16_t result = 0;
  cc:	40 e0       	ldi	r20, 0x00	; 0
  ce:	50 e0       	ldi	r21, 0x00	; 0
      LED_PORT &= ~_BV(LED);
      for(int8_t i = 0; i < 4; i++){
        ADCSRA |= _BV(ADSC);
  d0:	90 91 7a 00 	lds	r25, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
  d4:	90 64       	ori	r25, 0x40	; 64
  d6:	90 93 7a 00 	sts	0x007A, r25	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
        while(!(ADCSRA & _BV(ADIF)));
  da:	90 91 7a 00 	lds	r25, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
  de:	94 ff       	sbrs	r25, 4
  e0:	fc cf       	rjmp	.-8      	; 0xda <pomiar+0x12>
        ADCSRA |= _BV(ADIF);
  e2:	90 91 7a 00 	lds	r25, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
  e6:	90 61       	ori	r25, 0x10	; 16
  e8:	90 93 7a 00 	sts	0x007A, r25	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
        result+=ADC;
  ec:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
  f0:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
  f4:	48 0f       	add	r20, r24
  f6:	59 1f       	adc	r21, r25
  f8:	21 50       	subi	r18, 0x01	; 1
#define LED_PORT PORTB  //dioda port 

uint16_t pomiar(){
      uint16_t result = 0;
      LED_PORT &= ~_BV(LED);
      for(int8_t i = 0; i < 4; i++){
  fa:	51 f7       	brne	.-44     	; 0xd0 <pomiar+0x8>
        ADCSRA |= _BV(ADSC);
        while(!(ADCSRA & _BV(ADIF)));
        ADCSRA |= _BV(ADIF);
        result+=ADC;
      }
      return ((result>>2)>>1)<<1;
  fc:	ca 01       	movw	r24, r20
  fe:	96 95       	lsr	r25
 100:	87 95       	ror	r24
 102:	96 95       	lsr	r25
 104:	87 95       	ror	r24
 106:	96 95       	lsr	r25
 108:	87 95       	ror	r24
}
 10a:	88 0f       	add	r24, r24
 10c:	99 1f       	adc	r25, r25
 10e:	08 95       	ret

00000110 <uart_init>:

// inicjalizacja UART
void uart_init()
{
  // ustaw baudrate
  UBRR0 = UBRR_VALUE;
 110:	87 e6       	ldi	r24, 0x67	; 103
 112:	90 e0       	ldi	r25, 0x00	; 0
 114:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
 118:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
  // wyczyść rejestr UCSR0A
  UCSR0A = 0;
 11c:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
  // włącz odbiornik i nadajnik
  UCSR0B = _BV(RXEN0) | _BV(TXEN0);
 120:	88 e1       	ldi	r24, 0x18	; 24
 122:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
  // ustaw format 8n1
  UCSR0C = _BV(UCSZ00) | _BV(UCSZ01);
 126:	86 e0       	ldi	r24, 0x06	; 6
 128:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
 12c:	08 95       	ret

0000012e <adc_init>:

FILE uart_file;

//inicjalizowanie ADC
void adc_init(){
    ADMUX = _BV(REFS0);
 12e:	ec e7       	ldi	r30, 0x7C	; 124
 130:	f0 e0       	ldi	r31, 0x00	; 0
 132:	80 e4       	ldi	r24, 0x40	; 64
 134:	80 83       	st	Z, r24
    ADMUX &= ~(0b1111);
 136:	80 81       	ld	r24, Z
 138:	80 7f       	andi	r24, 0xF0	; 240
 13a:	80 83       	st	Z, r24
    DIDR0 = _BV(ADC0D);
 13c:	81 e0       	ldi	r24, 0x01	; 1
 13e:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <__TEXT_REGION_LENGTH__+0x7f807e>
    ADCSRA = _BV(ADPS0) | _BV(ADPS1) | _BV(ADPS2);
 142:	ea e7       	ldi	r30, 0x7A	; 122
 144:	f0 e0       	ldi	r31, 0x00	; 0
 146:	87 e0       	ldi	r24, 0x07	; 7
 148:	80 83       	st	Z, r24
    ADCSRA |= _BV(ADEN);
 14a:	80 81       	ld	r24, Z
 14c:	80 68       	ori	r24, 0x80	; 128
 14e:	80 83       	st	Z, r24
 150:	08 95       	ret

00000152 <main>:
}

int main(){
    LED_DDR  |= _BV(LED);
 152:	21 9a       	sbi	0x04, 1	; 4

// inicjalizacja UART
void uart_init()
{
  // ustaw baudrate
  UBRR0 = UBRR_VALUE;
 154:	87 e6       	ldi	r24, 0x67	; 103
 156:	90 e0       	ldi	r25, 0x00	; 0
 158:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
 15c:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
  // wyczyść rejestr UCSR0A
  UCSR0A = 0;
 160:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
  // włącz odbiornik i nadajnik
  UCSR0B = _BV(RXEN0) | _BV(TXEN0);
 164:	88 e1       	ldi	r24, 0x18	; 24
 166:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
  // ustaw format 8n1
  UCSR0C = _BV(UCSZ00) | _BV(UCSZ01);
 16a:	86 e0       	ldi	r24, 0x06	; 6
 16c:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
}

int main(){
    LED_DDR  |= _BV(LED);
    uart_init();
    fdev_setup_stream(&uart_file,uart_transmit,uart_receive,_FDEV_SETUP_RW);
 170:	80 e1       	ldi	r24, 0x10	; 16
 172:	91 e0       	ldi	r25, 0x01	; 1
 174:	23 e5       	ldi	r18, 0x53	; 83
 176:	30 e0       	ldi	r19, 0x00	; 0
 178:	30 93 19 01 	sts	0x0119, r19	; 0x800119 <__data_end+0x9>
 17c:	20 93 18 01 	sts	0x0118, r18	; 0x800118 <__data_end+0x8>
 180:	2c e5       	ldi	r18, 0x5C	; 92
 182:	30 e0       	ldi	r19, 0x00	; 0
 184:	30 93 1b 01 	sts	0x011B, r19	; 0x80011b <__data_end+0xb>
 188:	20 93 1a 01 	sts	0x011A, r18	; 0x80011a <__data_end+0xa>
 18c:	23 e0       	ldi	r18, 0x03	; 3
 18e:	20 93 13 01 	sts	0x0113, r18	; 0x800113 <__data_end+0x3>
 192:	10 92 1d 01 	sts	0x011D, r1	; 0x80011d <__data_end+0xd>
 196:	10 92 1c 01 	sts	0x011C, r1	; 0x80011c <__data_end+0xc>
    stdin = stdout = stderr = &uart_file;
 19a:	90 93 23 01 	sts	0x0123, r25	; 0x800123 <__iob+0x5>
 19e:	80 93 22 01 	sts	0x0122, r24	; 0x800122 <__iob+0x4>
 1a2:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <__iob+0x3>
 1a6:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <__iob+0x2>
 1aa:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <__iob+0x1>
 1ae:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <__iob>

FILE uart_file;

//inicjalizowanie ADC
void adc_init(){
    ADMUX = _BV(REFS0);
 1b2:	80 e4       	ldi	r24, 0x40	; 64
 1b4:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    ADMUX &= ~(0b1111);
 1b8:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
 1bc:	80 7f       	andi	r24, 0xF0	; 240
 1be:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    DIDR0 = _BV(ADC0D);
 1c2:	81 e0       	ldi	r24, 0x01	; 1
 1c4:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <__TEXT_REGION_LENGTH__+0x7f807e>
    ADCSRA = _BV(ADPS0) | _BV(ADPS1) | _BV(ADPS2);
 1c8:	87 e0       	ldi	r24, 0x07	; 7
 1ca:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    ADCSRA |= _BV(ADEN);
 1ce:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
 1d2:	80 68       	ori	r24, 0x80	; 128
 1d4:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    fdev_setup_stream(&uart_file,uart_transmit,uart_receive,_FDEV_SETUP_RW);
    stdin = stdout = stderr = &uart_file;
    adc_init();
    while(1){
      uint16_t v = pomiar();
      printf("Odczytano: %"PRIu16"\r\n",v);
 1d8:	00 e0       	ldi	r16, 0x00	; 0
 1da:	11 e0       	ldi	r17, 0x01	; 1
#define LED_DDR DDRB    //dioda ddr
#define LED_PORT PORTB  //dioda port 

uint16_t pomiar(){
      uint16_t result = 0;
      LED_PORT &= ~_BV(LED);
 1dc:	29 98       	cbi	0x05, 1	; 5
 1de:	94 e0       	ldi	r25, 0x04	; 4
#define LED PB1 //Dioda
#define LED_DDR DDRB    //dioda ddr
#define LED_PORT PORTB  //dioda port 

uint16_t pomiar(){
      uint16_t result = 0;
 1e0:	20 e0       	ldi	r18, 0x00	; 0
 1e2:	30 e0       	ldi	r19, 0x00	; 0
      LED_PORT &= ~_BV(LED);
      for(int8_t i = 0; i < 4; i++){
        ADCSRA |= _BV(ADSC);
 1e4:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
 1e8:	80 64       	ori	r24, 0x40	; 64
 1ea:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
        while(!(ADCSRA & _BV(ADIF)));
 1ee:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
 1f2:	84 ff       	sbrs	r24, 4
 1f4:	fc cf       	rjmp	.-8      	; 0x1ee <main+0x9c>
        ADCSRA |= _BV(ADIF);
 1f6:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
 1fa:	80 61       	ori	r24, 0x10	; 16
 1fc:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
        result+=ADC;
 200:	40 91 78 00 	lds	r20, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
 204:	50 91 79 00 	lds	r21, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
 208:	24 0f       	add	r18, r20
 20a:	35 1f       	adc	r19, r21
 20c:	91 50       	subi	r25, 0x01	; 1
#define LED_PORT PORTB  //dioda port 

uint16_t pomiar(){
      uint16_t result = 0;
      LED_PORT &= ~_BV(LED);
      for(int8_t i = 0; i < 4; i++){
 20e:	51 f7       	brne	.-44     	; 0x1e4 <main+0x92>
        ADCSRA |= _BV(ADSC);
        while(!(ADCSRA & _BV(ADIF)));
        ADCSRA |= _BV(ADIF);
        result+=ADC;
      }
      return ((result>>2)>>1)<<1;
 210:	36 95       	lsr	r19
 212:	27 95       	ror	r18
 214:	36 95       	lsr	r19
 216:	27 95       	ror	r18
 218:	36 95       	lsr	r19
 21a:	27 95       	ror	r18
 21c:	e9 01       	movw	r28, r18
 21e:	cc 0f       	add	r28, r28
 220:	dd 1f       	adc	r29, r29
    fdev_setup_stream(&uart_file,uart_transmit,uart_receive,_FDEV_SETUP_RW);
    stdin = stdout = stderr = &uart_file;
    adc_init();
    while(1){
      uint16_t v = pomiar();
      printf("Odczytano: %"PRIu16"\r\n",v);
 222:	df 93       	push	r29
 224:	cf 93       	push	r28
 226:	1f 93       	push	r17
 228:	0f 93       	push	r16
 22a:	0e 94 d6 01 	call	0x3ac	; 0x3ac <printf>
        result+=ADC;
      }
      return ((result>>2)>>1)<<1;
}
static inline void migotanie(uint16_t frequency){
  if(frequency < 100){
 22e:	0f 90       	pop	r0
 230:	0f 90       	pop	r0
 232:	0f 90       	pop	r0
 234:	0f 90       	pop	r0
 236:	c4 36       	cpi	r28, 0x64	; 100
 238:	d1 05       	cpc	r29, r1
 23a:	90 f1       	brcs	.+100    	; 0x2a0 <main+0x14e>
    LED_PORT &= ~_BV(LED);
    _delay_ms(8);
  }
  else if (frequency < 200){
      LED_PORT |= _BV(LED);
 23c:	29 9a       	sbi	0x05, 1	; 5
static inline void migotanie(uint16_t frequency){
  if(frequency < 100){
    LED_PORT &= ~_BV(LED);
    _delay_ms(8);
  }
  else if (frequency < 200){
 23e:	c8 3c       	cpi	r28, 0xC8	; 200
 240:	d1 05       	cpc	r29, r1
 242:	b0 f1       	brcs	.+108    	; 0x2b0 <main+0x15e>
      LED_PORT |= _BV(LED);
    _delay_us(50);
    LED_PORT &= ~_BV(LED);
    _delay_us(750);
  }
  else if(frequency < 300){
 244:	cc 32       	cpi	r28, 0x2C	; 44
 246:	91 e0       	ldi	r25, 0x01	; 1
 248:	d9 07       	cpc	r29, r25
 24a:	08 f4       	brcc	.+2      	; 0x24e <main+0xfc>
 24c:	3f c0       	rjmp	.+126    	; 0x2cc <main+0x17a>
    LED_PORT |= _BV(LED);
    _delay_us(150);
    LED_PORT &= ~_BV(LED);
    _delay_us(650);
  }
  else if(frequency < 400){
 24e:	c0 39       	cpi	r28, 0x90	; 144
 250:	91 e0       	ldi	r25, 0x01	; 1
 252:	d9 07       	cpc	r29, r25
 254:	08 f4       	brcc	.+2      	; 0x258 <main+0x106>
 256:	48 c0       	rjmp	.+144    	; 0x2e8 <main+0x196>
    LED_PORT |= _BV(LED);
    _delay_us(250);
    LED_PORT &= ~_BV(LED);
    _delay_us(550);
  }
  else if(frequency < 500){
 258:	c4 3f       	cpi	r28, 0xF4	; 244
 25a:	91 e0       	ldi	r25, 0x01	; 1
 25c:	d9 07       	cpc	r29, r25
 25e:	08 f4       	brcc	.+2      	; 0x262 <main+0x110>
 260:	51 c0       	rjmp	.+162    	; 0x304 <main+0x1b2>
    LED_PORT |= _BV(LED);
    _delay_ms(1);
    LED_PORT &= ~_BV(LED);
    _delay_ms(7);
  }
  else if(frequency < 600){
 262:	c8 35       	cpi	r28, 0x58	; 88
 264:	92 e0       	ldi	r25, 0x02	; 2
 266:	d9 07       	cpc	r29, r25
 268:	08 f4       	brcc	.+2      	; 0x26c <main+0x11a>
 26a:	5a c0       	rjmp	.+180    	; 0x320 <main+0x1ce>
    LED_PORT |= _BV(LED);
    _delay_ms(2);
    LED_PORT &= ~_BV(LED);
    _delay_ms(6);
  }
  else if(frequency < 700){
 26c:	cc 3b       	cpi	r28, 0xBC	; 188
 26e:	92 e0       	ldi	r25, 0x02	; 2
 270:	d9 07       	cpc	r29, r25
 272:	08 f4       	brcc	.+2      	; 0x276 <main+0x124>
 274:	63 c0       	rjmp	.+198    	; 0x33c <main+0x1ea>
    LED_PORT |= _BV(LED);
    _delay_ms(3);
    LED_PORT &= ~_BV(LED);
    _delay_ms(5);
  }
  else if(frequency < 800){
 276:	c0 32       	cpi	r28, 0x20	; 32
 278:	93 e0       	ldi	r25, 0x03	; 3
 27a:	d9 07       	cpc	r29, r25
 27c:	08 f4       	brcc	.+2      	; 0x280 <main+0x12e>
 27e:	7a c0       	rjmp	.+244    	; 0x374 <main+0x222>
    LED_PORT |= _BV(LED);
    _delay_ms(4);
    LED_PORT &= ~_BV(LED);
    _delay_ms(4);
  }
  else if(frequency < 900){
 280:	c4 38       	cpi	r28, 0x84	; 132
 282:	93 e0       	ldi	r25, 0x03	; 3
 284:	d9 07       	cpc	r29, r25
 286:	08 f4       	brcc	.+2      	; 0x28a <main+0x138>
 288:	83 c0       	rjmp	.+262    	; 0x390 <main+0x23e>
    LED_PORT |= _BV(LED);
    _delay_ms(5);
    LED_PORT &= ~_BV(LED);
    _delay_ms(3);
  }    
  else if(frequency < 1000){
 28a:	c8 3e       	cpi	r28, 0xE8	; 232
 28c:	d3 40       	sbci	r29, 0x03	; 3
 28e:	08 f4       	brcc	.+2      	; 0x292 <main+0x140>
 290:	63 c0       	rjmp	.+198    	; 0x358 <main+0x206>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 292:	8f ef       	ldi	r24, 0xFF	; 255
 294:	9c e7       	ldi	r25, 0x7C	; 124
 296:	01 97       	sbiw	r24, 0x01	; 1
 298:	f1 f7       	brne	.-4      	; 0x296 <main+0x144>
 29a:	00 c0       	rjmp	.+0      	; 0x29c <main+0x14a>
 29c:	00 00       	nop
 29e:	9e cf       	rjmp	.-196    	; 0x1dc <main+0x8a>
      }
      return ((result>>2)>>1)<<1;
}
static inline void migotanie(uint16_t frequency){
  if(frequency < 100){
    LED_PORT &= ~_BV(LED);
 2a0:	29 98       	cbi	0x05, 1	; 5
 2a2:	8f ef       	ldi	r24, 0xFF	; 255
 2a4:	9c e7       	ldi	r25, 0x7C	; 124
 2a6:	01 97       	sbiw	r24, 0x01	; 1
 2a8:	f1 f7       	brne	.-4      	; 0x2a6 <main+0x154>
 2aa:	00 c0       	rjmp	.+0      	; 0x2ac <main+0x15a>
 2ac:	00 00       	nop
 2ae:	96 cf       	rjmp	.-212    	; 0x1dc <main+0x8a>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2b0:	87 ec       	ldi	r24, 0xC7	; 199
 2b2:	90 e0       	ldi	r25, 0x00	; 0
 2b4:	01 97       	sbiw	r24, 0x01	; 1
 2b6:	f1 f7       	brne	.-4      	; 0x2b4 <main+0x162>
 2b8:	00 c0       	rjmp	.+0      	; 0x2ba <main+0x168>
 2ba:	00 00       	nop
    _delay_ms(8);
  }
  else if (frequency < 200){
      LED_PORT |= _BV(LED);
    _delay_us(50);
    LED_PORT &= ~_BV(LED);
 2bc:	29 98       	cbi	0x05, 1	; 5
 2be:	87 eb       	ldi	r24, 0xB7	; 183
 2c0:	9b e0       	ldi	r25, 0x0B	; 11
 2c2:	01 97       	sbiw	r24, 0x01	; 1
 2c4:	f1 f7       	brne	.-4      	; 0x2c2 <main+0x170>
 2c6:	00 c0       	rjmp	.+0      	; 0x2c8 <main+0x176>
 2c8:	00 00       	nop
 2ca:	88 cf       	rjmp	.-240    	; 0x1dc <main+0x8a>
 2cc:	87 e5       	ldi	r24, 0x57	; 87
 2ce:	92 e0       	ldi	r25, 0x02	; 2
 2d0:	01 97       	sbiw	r24, 0x01	; 1
 2d2:	f1 f7       	brne	.-4      	; 0x2d0 <main+0x17e>
 2d4:	00 c0       	rjmp	.+0      	; 0x2d6 <main+0x184>
 2d6:	00 00       	nop
    _delay_us(750);
  }
  else if(frequency < 300){
    LED_PORT |= _BV(LED);
    _delay_us(150);
    LED_PORT &= ~_BV(LED);
 2d8:	29 98       	cbi	0x05, 1	; 5
 2da:	87 e2       	ldi	r24, 0x27	; 39
 2dc:	9a e0       	ldi	r25, 0x0A	; 10
 2de:	01 97       	sbiw	r24, 0x01	; 1
 2e0:	f1 f7       	brne	.-4      	; 0x2de <main+0x18c>
 2e2:	00 c0       	rjmp	.+0      	; 0x2e4 <main+0x192>
 2e4:	00 00       	nop
 2e6:	7a cf       	rjmp	.-268    	; 0x1dc <main+0x8a>
 2e8:	87 ee       	ldi	r24, 0xE7	; 231
 2ea:	93 e0       	ldi	r25, 0x03	; 3
 2ec:	01 97       	sbiw	r24, 0x01	; 1
 2ee:	f1 f7       	brne	.-4      	; 0x2ec <main+0x19a>
 2f0:	00 c0       	rjmp	.+0      	; 0x2f2 <main+0x1a0>
 2f2:	00 00       	nop
    _delay_us(650);
  }
  else if(frequency < 400){
    LED_PORT |= _BV(LED);
    _delay_us(250);
    LED_PORT &= ~_BV(LED);
 2f4:	29 98       	cbi	0x05, 1	; 5
 2f6:	87 e9       	ldi	r24, 0x97	; 151
 2f8:	98 e0       	ldi	r25, 0x08	; 8
 2fa:	01 97       	sbiw	r24, 0x01	; 1
 2fc:	f1 f7       	brne	.-4      	; 0x2fa <main+0x1a8>
 2fe:	00 c0       	rjmp	.+0      	; 0x300 <main+0x1ae>
 300:	00 00       	nop
 302:	6c cf       	rjmp	.-296    	; 0x1dc <main+0x8a>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 304:	8f e9       	ldi	r24, 0x9F	; 159
 306:	9f e0       	ldi	r25, 0x0F	; 15
 308:	01 97       	sbiw	r24, 0x01	; 1
 30a:	f1 f7       	brne	.-4      	; 0x308 <main+0x1b6>
 30c:	00 c0       	rjmp	.+0      	; 0x30e <main+0x1bc>
 30e:	00 00       	nop
    _delay_us(550);
  }
  else if(frequency < 500){
    LED_PORT |= _BV(LED);
    _delay_ms(1);
    LED_PORT &= ~_BV(LED);
 310:	29 98       	cbi	0x05, 1	; 5
 312:	8f e5       	ldi	r24, 0x5F	; 95
 314:	9d e6       	ldi	r25, 0x6D	; 109
 316:	01 97       	sbiw	r24, 0x01	; 1
 318:	f1 f7       	brne	.-4      	; 0x316 <main+0x1c4>
 31a:	00 c0       	rjmp	.+0      	; 0x31c <main+0x1ca>
 31c:	00 00       	nop
 31e:	5e cf       	rjmp	.-324    	; 0x1dc <main+0x8a>
 320:	8f e3       	ldi	r24, 0x3F	; 63
 322:	9f e1       	ldi	r25, 0x1F	; 31
 324:	01 97       	sbiw	r24, 0x01	; 1
 326:	f1 f7       	brne	.-4      	; 0x324 <main+0x1d2>
 328:	00 c0       	rjmp	.+0      	; 0x32a <main+0x1d8>
 32a:	00 00       	nop
    _delay_ms(7);
  }
  else if(frequency < 600){
    LED_PORT |= _BV(LED);
    _delay_ms(2);
    LED_PORT &= ~_BV(LED);
 32c:	29 98       	cbi	0x05, 1	; 5
 32e:	8f eb       	ldi	r24, 0xBF	; 191
 330:	9d e5       	ldi	r25, 0x5D	; 93
 332:	01 97       	sbiw	r24, 0x01	; 1
 334:	f1 f7       	brne	.-4      	; 0x332 <main+0x1e0>
 336:	00 c0       	rjmp	.+0      	; 0x338 <main+0x1e6>
 338:	00 00       	nop
 33a:	50 cf       	rjmp	.-352    	; 0x1dc <main+0x8a>
 33c:	8f ed       	ldi	r24, 0xDF	; 223
 33e:	9e e2       	ldi	r25, 0x2E	; 46
 340:	01 97       	sbiw	r24, 0x01	; 1
 342:	f1 f7       	brne	.-4      	; 0x340 <main+0x1ee>
 344:	00 c0       	rjmp	.+0      	; 0x346 <main+0x1f4>
 346:	00 00       	nop
    _delay_ms(6);
  }
  else if(frequency < 700){
    LED_PORT |= _BV(LED);
    _delay_ms(3);
    LED_PORT &= ~_BV(LED);
 348:	29 98       	cbi	0x05, 1	; 5
 34a:	8f e1       	ldi	r24, 0x1F	; 31
 34c:	9e e4       	ldi	r25, 0x4E	; 78
 34e:	01 97       	sbiw	r24, 0x01	; 1
 350:	f1 f7       	brne	.-4      	; 0x34e <main+0x1fc>
 352:	00 c0       	rjmp	.+0      	; 0x354 <main+0x202>
 354:	00 00       	nop
 356:	42 cf       	rjmp	.-380    	; 0x1dc <main+0x8a>
 358:	8f eb       	ldi	r24, 0xBF	; 191
 35a:	9d e5       	ldi	r25, 0x5D	; 93
 35c:	01 97       	sbiw	r24, 0x01	; 1
 35e:	f1 f7       	brne	.-4      	; 0x35c <main+0x20a>
 360:	00 c0       	rjmp	.+0      	; 0x362 <main+0x210>
 362:	00 00       	nop
    _delay_ms(3);
  }    
  else if(frequency < 1000){
    LED_PORT |= _BV(LED);
    _delay_ms(6);
    LED_PORT &= ~_BV(LED);
 364:	29 98       	cbi	0x05, 1	; 5
 366:	8f e3       	ldi	r24, 0x3F	; 63
 368:	9f e1       	ldi	r25, 0x1F	; 31
 36a:	01 97       	sbiw	r24, 0x01	; 1
 36c:	f1 f7       	brne	.-4      	; 0x36a <main+0x218>
 36e:	00 c0       	rjmp	.+0      	; 0x370 <main+0x21e>
 370:	00 00       	nop
 372:	34 cf       	rjmp	.-408    	; 0x1dc <main+0x8a>
 374:	8f e7       	ldi	r24, 0x7F	; 127
 376:	9e e3       	ldi	r25, 0x3E	; 62
 378:	01 97       	sbiw	r24, 0x01	; 1
 37a:	f1 f7       	brne	.-4      	; 0x378 <main+0x226>
 37c:	00 c0       	rjmp	.+0      	; 0x37e <main+0x22c>
 37e:	00 00       	nop
    _delay_ms(5);
  }
  else if(frequency < 800){
    LED_PORT |= _BV(LED);
    _delay_ms(4);
    LED_PORT &= ~_BV(LED);
 380:	29 98       	cbi	0x05, 1	; 5
 382:	8f e7       	ldi	r24, 0x7F	; 127
 384:	9e e3       	ldi	r25, 0x3E	; 62
 386:	01 97       	sbiw	r24, 0x01	; 1
 388:	f1 f7       	brne	.-4      	; 0x386 <main+0x234>
 38a:	00 c0       	rjmp	.+0      	; 0x38c <main+0x23a>
 38c:	00 00       	nop
 38e:	26 cf       	rjmp	.-436    	; 0x1dc <main+0x8a>
 390:	8f e1       	ldi	r24, 0x1F	; 31
 392:	9e e4       	ldi	r25, 0x4E	; 78
 394:	01 97       	sbiw	r24, 0x01	; 1
 396:	f1 f7       	brne	.-4      	; 0x394 <main+0x242>
 398:	00 c0       	rjmp	.+0      	; 0x39a <main+0x248>
 39a:	00 00       	nop
    _delay_ms(4);
  }
  else if(frequency < 900){
    LED_PORT |= _BV(LED);
    _delay_ms(5);
    LED_PORT &= ~_BV(LED);
 39c:	29 98       	cbi	0x05, 1	; 5
 39e:	8f ed       	ldi	r24, 0xDF	; 223
 3a0:	9e e2       	ldi	r25, 0x2E	; 46
 3a2:	01 97       	sbiw	r24, 0x01	; 1
 3a4:	f1 f7       	brne	.-4      	; 0x3a2 <main+0x250>
 3a6:	00 c0       	rjmp	.+0      	; 0x3a8 <main+0x256>
 3a8:	00 00       	nop
 3aa:	18 cf       	rjmp	.-464    	; 0x1dc <main+0x8a>

000003ac <printf>:
 3ac:	a0 e0       	ldi	r26, 0x00	; 0
 3ae:	b0 e0       	ldi	r27, 0x00	; 0
 3b0:	ec ed       	ldi	r30, 0xDC	; 220
 3b2:	f1 e0       	ldi	r31, 0x01	; 1
 3b4:	0c 94 8d 04 	jmp	0x91a	; 0x91a <__stack+0x1b>
 3b8:	ae 01       	movw	r20, r28
 3ba:	4b 5f       	subi	r20, 0xFB	; 251
 3bc:	5f 4f       	sbci	r21, 0xFF	; 255
 3be:	fa 01       	movw	r30, r20
 3c0:	61 91       	ld	r22, Z+
 3c2:	71 91       	ld	r23, Z+
 3c4:	af 01       	movw	r20, r30
 3c6:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <__iob+0x2>
 3ca:	90 91 21 01 	lds	r25, 0x0121	; 0x800121 <__iob+0x3>
 3ce:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <vfprintf>
 3d2:	e2 e0       	ldi	r30, 0x02	; 2
 3d4:	0c 94 a9 04 	jmp	0x952	; 0x952 <__epilogue_restores__+0x20>

000003d8 <vfprintf>:
 3d8:	ab e0       	ldi	r26, 0x0B	; 11
 3da:	b0 e0       	ldi	r27, 0x00	; 0
 3dc:	e2 ef       	ldi	r30, 0xF2	; 242
 3de:	f1 e0       	ldi	r31, 0x01	; 1
 3e0:	0c 94 7d 04 	jmp	0x8fa	; 0x8fa <__prologue_saves__>
 3e4:	6c 01       	movw	r12, r24
 3e6:	7b 01       	movw	r14, r22
 3e8:	8a 01       	movw	r16, r20
 3ea:	fc 01       	movw	r30, r24
 3ec:	17 82       	std	Z+7, r1	; 0x07
 3ee:	16 82       	std	Z+6, r1	; 0x06
 3f0:	83 81       	ldd	r24, Z+3	; 0x03
 3f2:	81 ff       	sbrs	r24, 1
 3f4:	cc c1       	rjmp	.+920    	; 0x78e <__EEPROM_REGION_LENGTH__+0x38e>
 3f6:	ce 01       	movw	r24, r28
 3f8:	01 96       	adiw	r24, 0x01	; 1
 3fa:	3c 01       	movw	r6, r24
 3fc:	f6 01       	movw	r30, r12
 3fe:	93 81       	ldd	r25, Z+3	; 0x03
 400:	f7 01       	movw	r30, r14
 402:	93 fd       	sbrc	r25, 3
 404:	85 91       	lpm	r24, Z+
 406:	93 ff       	sbrs	r25, 3
 408:	81 91       	ld	r24, Z+
 40a:	7f 01       	movw	r14, r30
 40c:	88 23       	and	r24, r24
 40e:	09 f4       	brne	.+2      	; 0x412 <__EEPROM_REGION_LENGTH__+0x12>
 410:	ba c1       	rjmp	.+884    	; 0x786 <__EEPROM_REGION_LENGTH__+0x386>
 412:	85 32       	cpi	r24, 0x25	; 37
 414:	39 f4       	brne	.+14     	; 0x424 <__EEPROM_REGION_LENGTH__+0x24>
 416:	93 fd       	sbrc	r25, 3
 418:	85 91       	lpm	r24, Z+
 41a:	93 ff       	sbrs	r25, 3
 41c:	81 91       	ld	r24, Z+
 41e:	7f 01       	movw	r14, r30
 420:	85 32       	cpi	r24, 0x25	; 37
 422:	29 f4       	brne	.+10     	; 0x42e <__EEPROM_REGION_LENGTH__+0x2e>
 424:	b6 01       	movw	r22, r12
 426:	90 e0       	ldi	r25, 0x00	; 0
 428:	0e 94 e3 03 	call	0x7c6	; 0x7c6 <fputc>
 42c:	e7 cf       	rjmp	.-50     	; 0x3fc <vfprintf+0x24>
 42e:	91 2c       	mov	r9, r1
 430:	21 2c       	mov	r2, r1
 432:	31 2c       	mov	r3, r1
 434:	ff e1       	ldi	r31, 0x1F	; 31
 436:	f3 15       	cp	r31, r3
 438:	d8 f0       	brcs	.+54     	; 0x470 <__EEPROM_REGION_LENGTH__+0x70>
 43a:	8b 32       	cpi	r24, 0x2B	; 43
 43c:	79 f0       	breq	.+30     	; 0x45c <__EEPROM_REGION_LENGTH__+0x5c>
 43e:	38 f4       	brcc	.+14     	; 0x44e <__EEPROM_REGION_LENGTH__+0x4e>
 440:	80 32       	cpi	r24, 0x20	; 32
 442:	79 f0       	breq	.+30     	; 0x462 <__EEPROM_REGION_LENGTH__+0x62>
 444:	83 32       	cpi	r24, 0x23	; 35
 446:	a1 f4       	brne	.+40     	; 0x470 <__EEPROM_REGION_LENGTH__+0x70>
 448:	23 2d       	mov	r18, r3
 44a:	20 61       	ori	r18, 0x10	; 16
 44c:	1d c0       	rjmp	.+58     	; 0x488 <__EEPROM_REGION_LENGTH__+0x88>
 44e:	8d 32       	cpi	r24, 0x2D	; 45
 450:	61 f0       	breq	.+24     	; 0x46a <__EEPROM_REGION_LENGTH__+0x6a>
 452:	80 33       	cpi	r24, 0x30	; 48
 454:	69 f4       	brne	.+26     	; 0x470 <__EEPROM_REGION_LENGTH__+0x70>
 456:	23 2d       	mov	r18, r3
 458:	21 60       	ori	r18, 0x01	; 1
 45a:	16 c0       	rjmp	.+44     	; 0x488 <__EEPROM_REGION_LENGTH__+0x88>
 45c:	83 2d       	mov	r24, r3
 45e:	82 60       	ori	r24, 0x02	; 2
 460:	38 2e       	mov	r3, r24
 462:	e3 2d       	mov	r30, r3
 464:	e4 60       	ori	r30, 0x04	; 4
 466:	3e 2e       	mov	r3, r30
 468:	2a c0       	rjmp	.+84     	; 0x4be <__EEPROM_REGION_LENGTH__+0xbe>
 46a:	f3 2d       	mov	r31, r3
 46c:	f8 60       	ori	r31, 0x08	; 8
 46e:	1d c0       	rjmp	.+58     	; 0x4aa <__EEPROM_REGION_LENGTH__+0xaa>
 470:	37 fc       	sbrc	r3, 7
 472:	2d c0       	rjmp	.+90     	; 0x4ce <__EEPROM_REGION_LENGTH__+0xce>
 474:	20 ed       	ldi	r18, 0xD0	; 208
 476:	28 0f       	add	r18, r24
 478:	2a 30       	cpi	r18, 0x0A	; 10
 47a:	40 f0       	brcs	.+16     	; 0x48c <__EEPROM_REGION_LENGTH__+0x8c>
 47c:	8e 32       	cpi	r24, 0x2E	; 46
 47e:	b9 f4       	brne	.+46     	; 0x4ae <__EEPROM_REGION_LENGTH__+0xae>
 480:	36 fc       	sbrc	r3, 6
 482:	81 c1       	rjmp	.+770    	; 0x786 <__EEPROM_REGION_LENGTH__+0x386>
 484:	23 2d       	mov	r18, r3
 486:	20 64       	ori	r18, 0x40	; 64
 488:	32 2e       	mov	r3, r18
 48a:	19 c0       	rjmp	.+50     	; 0x4be <__EEPROM_REGION_LENGTH__+0xbe>
 48c:	36 fe       	sbrs	r3, 6
 48e:	06 c0       	rjmp	.+12     	; 0x49c <__EEPROM_REGION_LENGTH__+0x9c>
 490:	8a e0       	ldi	r24, 0x0A	; 10
 492:	98 9e       	mul	r9, r24
 494:	20 0d       	add	r18, r0
 496:	11 24       	eor	r1, r1
 498:	92 2e       	mov	r9, r18
 49a:	11 c0       	rjmp	.+34     	; 0x4be <__EEPROM_REGION_LENGTH__+0xbe>
 49c:	ea e0       	ldi	r30, 0x0A	; 10
 49e:	2e 9e       	mul	r2, r30
 4a0:	20 0d       	add	r18, r0
 4a2:	11 24       	eor	r1, r1
 4a4:	22 2e       	mov	r2, r18
 4a6:	f3 2d       	mov	r31, r3
 4a8:	f0 62       	ori	r31, 0x20	; 32
 4aa:	3f 2e       	mov	r3, r31
 4ac:	08 c0       	rjmp	.+16     	; 0x4be <__EEPROM_REGION_LENGTH__+0xbe>
 4ae:	8c 36       	cpi	r24, 0x6C	; 108
 4b0:	21 f4       	brne	.+8      	; 0x4ba <__EEPROM_REGION_LENGTH__+0xba>
 4b2:	83 2d       	mov	r24, r3
 4b4:	80 68       	ori	r24, 0x80	; 128
 4b6:	38 2e       	mov	r3, r24
 4b8:	02 c0       	rjmp	.+4      	; 0x4be <__EEPROM_REGION_LENGTH__+0xbe>
 4ba:	88 36       	cpi	r24, 0x68	; 104
 4bc:	41 f4       	brne	.+16     	; 0x4ce <__EEPROM_REGION_LENGTH__+0xce>
 4be:	f7 01       	movw	r30, r14
 4c0:	93 fd       	sbrc	r25, 3
 4c2:	85 91       	lpm	r24, Z+
 4c4:	93 ff       	sbrs	r25, 3
 4c6:	81 91       	ld	r24, Z+
 4c8:	7f 01       	movw	r14, r30
 4ca:	81 11       	cpse	r24, r1
 4cc:	b3 cf       	rjmp	.-154    	; 0x434 <__EEPROM_REGION_LENGTH__+0x34>
 4ce:	98 2f       	mov	r25, r24
 4d0:	9f 7d       	andi	r25, 0xDF	; 223
 4d2:	95 54       	subi	r25, 0x45	; 69
 4d4:	93 30       	cpi	r25, 0x03	; 3
 4d6:	28 f4       	brcc	.+10     	; 0x4e2 <__EEPROM_REGION_LENGTH__+0xe2>
 4d8:	0c 5f       	subi	r16, 0xFC	; 252
 4da:	1f 4f       	sbci	r17, 0xFF	; 255
 4dc:	9f e3       	ldi	r25, 0x3F	; 63
 4de:	99 83       	std	Y+1, r25	; 0x01
 4e0:	0d c0       	rjmp	.+26     	; 0x4fc <__EEPROM_REGION_LENGTH__+0xfc>
 4e2:	83 36       	cpi	r24, 0x63	; 99
 4e4:	31 f0       	breq	.+12     	; 0x4f2 <__EEPROM_REGION_LENGTH__+0xf2>
 4e6:	83 37       	cpi	r24, 0x73	; 115
 4e8:	71 f0       	breq	.+28     	; 0x506 <__EEPROM_REGION_LENGTH__+0x106>
 4ea:	83 35       	cpi	r24, 0x53	; 83
 4ec:	09 f0       	breq	.+2      	; 0x4f0 <__EEPROM_REGION_LENGTH__+0xf0>
 4ee:	59 c0       	rjmp	.+178    	; 0x5a2 <__EEPROM_REGION_LENGTH__+0x1a2>
 4f0:	21 c0       	rjmp	.+66     	; 0x534 <__EEPROM_REGION_LENGTH__+0x134>
 4f2:	f8 01       	movw	r30, r16
 4f4:	80 81       	ld	r24, Z
 4f6:	89 83       	std	Y+1, r24	; 0x01
 4f8:	0e 5f       	subi	r16, 0xFE	; 254
 4fa:	1f 4f       	sbci	r17, 0xFF	; 255
 4fc:	88 24       	eor	r8, r8
 4fe:	83 94       	inc	r8
 500:	91 2c       	mov	r9, r1
 502:	53 01       	movw	r10, r6
 504:	13 c0       	rjmp	.+38     	; 0x52c <__EEPROM_REGION_LENGTH__+0x12c>
 506:	28 01       	movw	r4, r16
 508:	f2 e0       	ldi	r31, 0x02	; 2
 50a:	4f 0e       	add	r4, r31
 50c:	51 1c       	adc	r5, r1
 50e:	f8 01       	movw	r30, r16
 510:	a0 80       	ld	r10, Z
 512:	b1 80       	ldd	r11, Z+1	; 0x01
 514:	36 fe       	sbrs	r3, 6
 516:	03 c0       	rjmp	.+6      	; 0x51e <__EEPROM_REGION_LENGTH__+0x11e>
 518:	69 2d       	mov	r22, r9
 51a:	70 e0       	ldi	r23, 0x00	; 0
 51c:	02 c0       	rjmp	.+4      	; 0x522 <__EEPROM_REGION_LENGTH__+0x122>
 51e:	6f ef       	ldi	r22, 0xFF	; 255
 520:	7f ef       	ldi	r23, 0xFF	; 255
 522:	c5 01       	movw	r24, r10
 524:	0e 94 d8 03 	call	0x7b0	; 0x7b0 <strnlen>
 528:	4c 01       	movw	r8, r24
 52a:	82 01       	movw	r16, r4
 52c:	f3 2d       	mov	r31, r3
 52e:	ff 77       	andi	r31, 0x7F	; 127
 530:	3f 2e       	mov	r3, r31
 532:	16 c0       	rjmp	.+44     	; 0x560 <__EEPROM_REGION_LENGTH__+0x160>
 534:	28 01       	movw	r4, r16
 536:	22 e0       	ldi	r18, 0x02	; 2
 538:	42 0e       	add	r4, r18
 53a:	51 1c       	adc	r5, r1
 53c:	f8 01       	movw	r30, r16
 53e:	a0 80       	ld	r10, Z
 540:	b1 80       	ldd	r11, Z+1	; 0x01
 542:	36 fe       	sbrs	r3, 6
 544:	03 c0       	rjmp	.+6      	; 0x54c <__EEPROM_REGION_LENGTH__+0x14c>
 546:	69 2d       	mov	r22, r9
 548:	70 e0       	ldi	r23, 0x00	; 0
 54a:	02 c0       	rjmp	.+4      	; 0x550 <__EEPROM_REGION_LENGTH__+0x150>
 54c:	6f ef       	ldi	r22, 0xFF	; 255
 54e:	7f ef       	ldi	r23, 0xFF	; 255
 550:	c5 01       	movw	r24, r10
 552:	0e 94 cd 03 	call	0x79a	; 0x79a <strnlen_P>
 556:	4c 01       	movw	r8, r24
 558:	f3 2d       	mov	r31, r3
 55a:	f0 68       	ori	r31, 0x80	; 128
 55c:	3f 2e       	mov	r3, r31
 55e:	82 01       	movw	r16, r4
 560:	33 fc       	sbrc	r3, 3
 562:	1b c0       	rjmp	.+54     	; 0x59a <__EEPROM_REGION_LENGTH__+0x19a>
 564:	82 2d       	mov	r24, r2
 566:	90 e0       	ldi	r25, 0x00	; 0
 568:	88 16       	cp	r8, r24
 56a:	99 06       	cpc	r9, r25
 56c:	b0 f4       	brcc	.+44     	; 0x59a <__EEPROM_REGION_LENGTH__+0x19a>
 56e:	b6 01       	movw	r22, r12
 570:	80 e2       	ldi	r24, 0x20	; 32
 572:	90 e0       	ldi	r25, 0x00	; 0
 574:	0e 94 e3 03 	call	0x7c6	; 0x7c6 <fputc>
 578:	2a 94       	dec	r2
 57a:	f4 cf       	rjmp	.-24     	; 0x564 <__EEPROM_REGION_LENGTH__+0x164>
 57c:	f5 01       	movw	r30, r10
 57e:	37 fc       	sbrc	r3, 7
 580:	85 91       	lpm	r24, Z+
 582:	37 fe       	sbrs	r3, 7
 584:	81 91       	ld	r24, Z+
 586:	5f 01       	movw	r10, r30
 588:	b6 01       	movw	r22, r12
 58a:	90 e0       	ldi	r25, 0x00	; 0
 58c:	0e 94 e3 03 	call	0x7c6	; 0x7c6 <fputc>
 590:	21 10       	cpse	r2, r1
 592:	2a 94       	dec	r2
 594:	21 e0       	ldi	r18, 0x01	; 1
 596:	82 1a       	sub	r8, r18
 598:	91 08       	sbc	r9, r1
 59a:	81 14       	cp	r8, r1
 59c:	91 04       	cpc	r9, r1
 59e:	71 f7       	brne	.-36     	; 0x57c <__EEPROM_REGION_LENGTH__+0x17c>
 5a0:	e8 c0       	rjmp	.+464    	; 0x772 <__EEPROM_REGION_LENGTH__+0x372>
 5a2:	84 36       	cpi	r24, 0x64	; 100
 5a4:	11 f0       	breq	.+4      	; 0x5aa <__EEPROM_REGION_LENGTH__+0x1aa>
 5a6:	89 36       	cpi	r24, 0x69	; 105
 5a8:	41 f5       	brne	.+80     	; 0x5fa <__EEPROM_REGION_LENGTH__+0x1fa>
 5aa:	f8 01       	movw	r30, r16
 5ac:	37 fe       	sbrs	r3, 7
 5ae:	07 c0       	rjmp	.+14     	; 0x5be <__EEPROM_REGION_LENGTH__+0x1be>
 5b0:	60 81       	ld	r22, Z
 5b2:	71 81       	ldd	r23, Z+1	; 0x01
 5b4:	82 81       	ldd	r24, Z+2	; 0x02
 5b6:	93 81       	ldd	r25, Z+3	; 0x03
 5b8:	0c 5f       	subi	r16, 0xFC	; 252
 5ba:	1f 4f       	sbci	r17, 0xFF	; 255
 5bc:	08 c0       	rjmp	.+16     	; 0x5ce <__EEPROM_REGION_LENGTH__+0x1ce>
 5be:	60 81       	ld	r22, Z
 5c0:	71 81       	ldd	r23, Z+1	; 0x01
 5c2:	07 2e       	mov	r0, r23
 5c4:	00 0c       	add	r0, r0
 5c6:	88 0b       	sbc	r24, r24
 5c8:	99 0b       	sbc	r25, r25
 5ca:	0e 5f       	subi	r16, 0xFE	; 254
 5cc:	1f 4f       	sbci	r17, 0xFF	; 255
 5ce:	f3 2d       	mov	r31, r3
 5d0:	ff 76       	andi	r31, 0x6F	; 111
 5d2:	3f 2e       	mov	r3, r31
 5d4:	97 ff       	sbrs	r25, 7
 5d6:	09 c0       	rjmp	.+18     	; 0x5ea <__EEPROM_REGION_LENGTH__+0x1ea>
 5d8:	90 95       	com	r25
 5da:	80 95       	com	r24
 5dc:	70 95       	com	r23
 5de:	61 95       	neg	r22
 5e0:	7f 4f       	sbci	r23, 0xFF	; 255
 5e2:	8f 4f       	sbci	r24, 0xFF	; 255
 5e4:	9f 4f       	sbci	r25, 0xFF	; 255
 5e6:	f0 68       	ori	r31, 0x80	; 128
 5e8:	3f 2e       	mov	r3, r31
 5ea:	2a e0       	ldi	r18, 0x0A	; 10
 5ec:	30 e0       	ldi	r19, 0x00	; 0
 5ee:	a3 01       	movw	r20, r6
 5f0:	0e 94 1f 04 	call	0x83e	; 0x83e <__ultoa_invert>
 5f4:	88 2e       	mov	r8, r24
 5f6:	86 18       	sub	r8, r6
 5f8:	45 c0       	rjmp	.+138    	; 0x684 <__EEPROM_REGION_LENGTH__+0x284>
 5fa:	85 37       	cpi	r24, 0x75	; 117
 5fc:	31 f4       	brne	.+12     	; 0x60a <__EEPROM_REGION_LENGTH__+0x20a>
 5fe:	23 2d       	mov	r18, r3
 600:	2f 7e       	andi	r18, 0xEF	; 239
 602:	b2 2e       	mov	r11, r18
 604:	2a e0       	ldi	r18, 0x0A	; 10
 606:	30 e0       	ldi	r19, 0x00	; 0
 608:	25 c0       	rjmp	.+74     	; 0x654 <__EEPROM_REGION_LENGTH__+0x254>
 60a:	93 2d       	mov	r25, r3
 60c:	99 7f       	andi	r25, 0xF9	; 249
 60e:	b9 2e       	mov	r11, r25
 610:	8f 36       	cpi	r24, 0x6F	; 111
 612:	c1 f0       	breq	.+48     	; 0x644 <__EEPROM_REGION_LENGTH__+0x244>
 614:	18 f4       	brcc	.+6      	; 0x61c <__EEPROM_REGION_LENGTH__+0x21c>
 616:	88 35       	cpi	r24, 0x58	; 88
 618:	79 f0       	breq	.+30     	; 0x638 <__EEPROM_REGION_LENGTH__+0x238>
 61a:	b5 c0       	rjmp	.+362    	; 0x786 <__EEPROM_REGION_LENGTH__+0x386>
 61c:	80 37       	cpi	r24, 0x70	; 112
 61e:	19 f0       	breq	.+6      	; 0x626 <__EEPROM_REGION_LENGTH__+0x226>
 620:	88 37       	cpi	r24, 0x78	; 120
 622:	21 f0       	breq	.+8      	; 0x62c <__EEPROM_REGION_LENGTH__+0x22c>
 624:	b0 c0       	rjmp	.+352    	; 0x786 <__EEPROM_REGION_LENGTH__+0x386>
 626:	e9 2f       	mov	r30, r25
 628:	e0 61       	ori	r30, 0x10	; 16
 62a:	be 2e       	mov	r11, r30
 62c:	b4 fe       	sbrs	r11, 4
 62e:	0d c0       	rjmp	.+26     	; 0x64a <__EEPROM_REGION_LENGTH__+0x24a>
 630:	fb 2d       	mov	r31, r11
 632:	f4 60       	ori	r31, 0x04	; 4
 634:	bf 2e       	mov	r11, r31
 636:	09 c0       	rjmp	.+18     	; 0x64a <__EEPROM_REGION_LENGTH__+0x24a>
 638:	34 fe       	sbrs	r3, 4
 63a:	0a c0       	rjmp	.+20     	; 0x650 <__EEPROM_REGION_LENGTH__+0x250>
 63c:	29 2f       	mov	r18, r25
 63e:	26 60       	ori	r18, 0x06	; 6
 640:	b2 2e       	mov	r11, r18
 642:	06 c0       	rjmp	.+12     	; 0x650 <__EEPROM_REGION_LENGTH__+0x250>
 644:	28 e0       	ldi	r18, 0x08	; 8
 646:	30 e0       	ldi	r19, 0x00	; 0
 648:	05 c0       	rjmp	.+10     	; 0x654 <__EEPROM_REGION_LENGTH__+0x254>
 64a:	20 e1       	ldi	r18, 0x10	; 16
 64c:	30 e0       	ldi	r19, 0x00	; 0
 64e:	02 c0       	rjmp	.+4      	; 0x654 <__EEPROM_REGION_LENGTH__+0x254>
 650:	20 e1       	ldi	r18, 0x10	; 16
 652:	32 e0       	ldi	r19, 0x02	; 2
 654:	f8 01       	movw	r30, r16
 656:	b7 fe       	sbrs	r11, 7
 658:	07 c0       	rjmp	.+14     	; 0x668 <__EEPROM_REGION_LENGTH__+0x268>
 65a:	60 81       	ld	r22, Z
 65c:	71 81       	ldd	r23, Z+1	; 0x01
 65e:	82 81       	ldd	r24, Z+2	; 0x02
 660:	93 81       	ldd	r25, Z+3	; 0x03
 662:	0c 5f       	subi	r16, 0xFC	; 252
 664:	1f 4f       	sbci	r17, 0xFF	; 255
 666:	06 c0       	rjmp	.+12     	; 0x674 <__EEPROM_REGION_LENGTH__+0x274>
 668:	60 81       	ld	r22, Z
 66a:	71 81       	ldd	r23, Z+1	; 0x01
 66c:	80 e0       	ldi	r24, 0x00	; 0
 66e:	90 e0       	ldi	r25, 0x00	; 0
 670:	0e 5f       	subi	r16, 0xFE	; 254
 672:	1f 4f       	sbci	r17, 0xFF	; 255
 674:	a3 01       	movw	r20, r6
 676:	0e 94 1f 04 	call	0x83e	; 0x83e <__ultoa_invert>
 67a:	88 2e       	mov	r8, r24
 67c:	86 18       	sub	r8, r6
 67e:	fb 2d       	mov	r31, r11
 680:	ff 77       	andi	r31, 0x7F	; 127
 682:	3f 2e       	mov	r3, r31
 684:	36 fe       	sbrs	r3, 6
 686:	0d c0       	rjmp	.+26     	; 0x6a2 <__EEPROM_REGION_LENGTH__+0x2a2>
 688:	23 2d       	mov	r18, r3
 68a:	2e 7f       	andi	r18, 0xFE	; 254
 68c:	a2 2e       	mov	r10, r18
 68e:	89 14       	cp	r8, r9
 690:	58 f4       	brcc	.+22     	; 0x6a8 <__EEPROM_REGION_LENGTH__+0x2a8>
 692:	34 fe       	sbrs	r3, 4
 694:	0b c0       	rjmp	.+22     	; 0x6ac <__EEPROM_REGION_LENGTH__+0x2ac>
 696:	32 fc       	sbrc	r3, 2
 698:	09 c0       	rjmp	.+18     	; 0x6ac <__EEPROM_REGION_LENGTH__+0x2ac>
 69a:	83 2d       	mov	r24, r3
 69c:	8e 7e       	andi	r24, 0xEE	; 238
 69e:	a8 2e       	mov	r10, r24
 6a0:	05 c0       	rjmp	.+10     	; 0x6ac <__EEPROM_REGION_LENGTH__+0x2ac>
 6a2:	b8 2c       	mov	r11, r8
 6a4:	a3 2c       	mov	r10, r3
 6a6:	03 c0       	rjmp	.+6      	; 0x6ae <__EEPROM_REGION_LENGTH__+0x2ae>
 6a8:	b8 2c       	mov	r11, r8
 6aa:	01 c0       	rjmp	.+2      	; 0x6ae <__EEPROM_REGION_LENGTH__+0x2ae>
 6ac:	b9 2c       	mov	r11, r9
 6ae:	a4 fe       	sbrs	r10, 4
 6b0:	0f c0       	rjmp	.+30     	; 0x6d0 <__EEPROM_REGION_LENGTH__+0x2d0>
 6b2:	fe 01       	movw	r30, r28
 6b4:	e8 0d       	add	r30, r8
 6b6:	f1 1d       	adc	r31, r1
 6b8:	80 81       	ld	r24, Z
 6ba:	80 33       	cpi	r24, 0x30	; 48
 6bc:	21 f4       	brne	.+8      	; 0x6c6 <__EEPROM_REGION_LENGTH__+0x2c6>
 6be:	9a 2d       	mov	r25, r10
 6c0:	99 7e       	andi	r25, 0xE9	; 233
 6c2:	a9 2e       	mov	r10, r25
 6c4:	09 c0       	rjmp	.+18     	; 0x6d8 <__EEPROM_REGION_LENGTH__+0x2d8>
 6c6:	a2 fe       	sbrs	r10, 2
 6c8:	06 c0       	rjmp	.+12     	; 0x6d6 <__EEPROM_REGION_LENGTH__+0x2d6>
 6ca:	b3 94       	inc	r11
 6cc:	b3 94       	inc	r11
 6ce:	04 c0       	rjmp	.+8      	; 0x6d8 <__EEPROM_REGION_LENGTH__+0x2d8>
 6d0:	8a 2d       	mov	r24, r10
 6d2:	86 78       	andi	r24, 0x86	; 134
 6d4:	09 f0       	breq	.+2      	; 0x6d8 <__EEPROM_REGION_LENGTH__+0x2d8>
 6d6:	b3 94       	inc	r11
 6d8:	a3 fc       	sbrc	r10, 3
 6da:	11 c0       	rjmp	.+34     	; 0x6fe <__EEPROM_REGION_LENGTH__+0x2fe>
 6dc:	a0 fe       	sbrs	r10, 0
 6de:	06 c0       	rjmp	.+12     	; 0x6ec <__EEPROM_REGION_LENGTH__+0x2ec>
 6e0:	b2 14       	cp	r11, r2
 6e2:	88 f4       	brcc	.+34     	; 0x706 <__EEPROM_REGION_LENGTH__+0x306>
 6e4:	28 0c       	add	r2, r8
 6e6:	92 2c       	mov	r9, r2
 6e8:	9b 18       	sub	r9, r11
 6ea:	0e c0       	rjmp	.+28     	; 0x708 <__EEPROM_REGION_LENGTH__+0x308>
 6ec:	b2 14       	cp	r11, r2
 6ee:	60 f4       	brcc	.+24     	; 0x708 <__EEPROM_REGION_LENGTH__+0x308>
 6f0:	b6 01       	movw	r22, r12
 6f2:	80 e2       	ldi	r24, 0x20	; 32
 6f4:	90 e0       	ldi	r25, 0x00	; 0
 6f6:	0e 94 e3 03 	call	0x7c6	; 0x7c6 <fputc>
 6fa:	b3 94       	inc	r11
 6fc:	f7 cf       	rjmp	.-18     	; 0x6ec <__EEPROM_REGION_LENGTH__+0x2ec>
 6fe:	b2 14       	cp	r11, r2
 700:	18 f4       	brcc	.+6      	; 0x708 <__EEPROM_REGION_LENGTH__+0x308>
 702:	2b 18       	sub	r2, r11
 704:	02 c0       	rjmp	.+4      	; 0x70a <__EEPROM_REGION_LENGTH__+0x30a>
 706:	98 2c       	mov	r9, r8
 708:	21 2c       	mov	r2, r1
 70a:	a4 fe       	sbrs	r10, 4
 70c:	10 c0       	rjmp	.+32     	; 0x72e <__EEPROM_REGION_LENGTH__+0x32e>
 70e:	b6 01       	movw	r22, r12
 710:	80 e3       	ldi	r24, 0x30	; 48
 712:	90 e0       	ldi	r25, 0x00	; 0
 714:	0e 94 e3 03 	call	0x7c6	; 0x7c6 <fputc>
 718:	a2 fe       	sbrs	r10, 2
 71a:	17 c0       	rjmp	.+46     	; 0x74a <__EEPROM_REGION_LENGTH__+0x34a>
 71c:	a1 fc       	sbrc	r10, 1
 71e:	03 c0       	rjmp	.+6      	; 0x726 <__EEPROM_REGION_LENGTH__+0x326>
 720:	88 e7       	ldi	r24, 0x78	; 120
 722:	90 e0       	ldi	r25, 0x00	; 0
 724:	02 c0       	rjmp	.+4      	; 0x72a <__EEPROM_REGION_LENGTH__+0x32a>
 726:	88 e5       	ldi	r24, 0x58	; 88
 728:	90 e0       	ldi	r25, 0x00	; 0
 72a:	b6 01       	movw	r22, r12
 72c:	0c c0       	rjmp	.+24     	; 0x746 <__EEPROM_REGION_LENGTH__+0x346>
 72e:	8a 2d       	mov	r24, r10
 730:	86 78       	andi	r24, 0x86	; 134
 732:	59 f0       	breq	.+22     	; 0x74a <__EEPROM_REGION_LENGTH__+0x34a>
 734:	a1 fe       	sbrs	r10, 1
 736:	02 c0       	rjmp	.+4      	; 0x73c <__EEPROM_REGION_LENGTH__+0x33c>
 738:	8b e2       	ldi	r24, 0x2B	; 43
 73a:	01 c0       	rjmp	.+2      	; 0x73e <__EEPROM_REGION_LENGTH__+0x33e>
 73c:	80 e2       	ldi	r24, 0x20	; 32
 73e:	a7 fc       	sbrc	r10, 7
 740:	8d e2       	ldi	r24, 0x2D	; 45
 742:	b6 01       	movw	r22, r12
 744:	90 e0       	ldi	r25, 0x00	; 0
 746:	0e 94 e3 03 	call	0x7c6	; 0x7c6 <fputc>
 74a:	89 14       	cp	r8, r9
 74c:	38 f4       	brcc	.+14     	; 0x75c <__EEPROM_REGION_LENGTH__+0x35c>
 74e:	b6 01       	movw	r22, r12
 750:	80 e3       	ldi	r24, 0x30	; 48
 752:	90 e0       	ldi	r25, 0x00	; 0
 754:	0e 94 e3 03 	call	0x7c6	; 0x7c6 <fputc>
 758:	9a 94       	dec	r9
 75a:	f7 cf       	rjmp	.-18     	; 0x74a <__EEPROM_REGION_LENGTH__+0x34a>
 75c:	8a 94       	dec	r8
 75e:	f3 01       	movw	r30, r6
 760:	e8 0d       	add	r30, r8
 762:	f1 1d       	adc	r31, r1
 764:	80 81       	ld	r24, Z
 766:	b6 01       	movw	r22, r12
 768:	90 e0       	ldi	r25, 0x00	; 0
 76a:	0e 94 e3 03 	call	0x7c6	; 0x7c6 <fputc>
 76e:	81 10       	cpse	r8, r1
 770:	f5 cf       	rjmp	.-22     	; 0x75c <__EEPROM_REGION_LENGTH__+0x35c>
 772:	22 20       	and	r2, r2
 774:	09 f4       	brne	.+2      	; 0x778 <__EEPROM_REGION_LENGTH__+0x378>
 776:	42 ce       	rjmp	.-892    	; 0x3fc <vfprintf+0x24>
 778:	b6 01       	movw	r22, r12
 77a:	80 e2       	ldi	r24, 0x20	; 32
 77c:	90 e0       	ldi	r25, 0x00	; 0
 77e:	0e 94 e3 03 	call	0x7c6	; 0x7c6 <fputc>
 782:	2a 94       	dec	r2
 784:	f6 cf       	rjmp	.-20     	; 0x772 <__EEPROM_REGION_LENGTH__+0x372>
 786:	f6 01       	movw	r30, r12
 788:	86 81       	ldd	r24, Z+6	; 0x06
 78a:	97 81       	ldd	r25, Z+7	; 0x07
 78c:	02 c0       	rjmp	.+4      	; 0x792 <__EEPROM_REGION_LENGTH__+0x392>
 78e:	8f ef       	ldi	r24, 0xFF	; 255
 790:	9f ef       	ldi	r25, 0xFF	; 255
 792:	2b 96       	adiw	r28, 0x0b	; 11
 794:	e2 e1       	ldi	r30, 0x12	; 18
 796:	0c 94 99 04 	jmp	0x932	; 0x932 <__epilogue_restores__>

0000079a <strnlen_P>:
 79a:	fc 01       	movw	r30, r24
 79c:	05 90       	lpm	r0, Z+
 79e:	61 50       	subi	r22, 0x01	; 1
 7a0:	70 40       	sbci	r23, 0x00	; 0
 7a2:	01 10       	cpse	r0, r1
 7a4:	d8 f7       	brcc	.-10     	; 0x79c <strnlen_P+0x2>
 7a6:	80 95       	com	r24
 7a8:	90 95       	com	r25
 7aa:	8e 0f       	add	r24, r30
 7ac:	9f 1f       	adc	r25, r31
 7ae:	08 95       	ret

000007b0 <strnlen>:
 7b0:	fc 01       	movw	r30, r24
 7b2:	61 50       	subi	r22, 0x01	; 1
 7b4:	70 40       	sbci	r23, 0x00	; 0
 7b6:	01 90       	ld	r0, Z+
 7b8:	01 10       	cpse	r0, r1
 7ba:	d8 f7       	brcc	.-10     	; 0x7b2 <strnlen+0x2>
 7bc:	80 95       	com	r24
 7be:	90 95       	com	r25
 7c0:	8e 0f       	add	r24, r30
 7c2:	9f 1f       	adc	r25, r31
 7c4:	08 95       	ret

000007c6 <fputc>:
 7c6:	0f 93       	push	r16
 7c8:	1f 93       	push	r17
 7ca:	cf 93       	push	r28
 7cc:	df 93       	push	r29
 7ce:	fb 01       	movw	r30, r22
 7d0:	23 81       	ldd	r18, Z+3	; 0x03
 7d2:	21 fd       	sbrc	r18, 1
 7d4:	03 c0       	rjmp	.+6      	; 0x7dc <fputc+0x16>
 7d6:	8f ef       	ldi	r24, 0xFF	; 255
 7d8:	9f ef       	ldi	r25, 0xFF	; 255
 7da:	2c c0       	rjmp	.+88     	; 0x834 <__DATA_REGION_LENGTH__+0x34>
 7dc:	22 ff       	sbrs	r18, 2
 7de:	16 c0       	rjmp	.+44     	; 0x80c <__DATA_REGION_LENGTH__+0xc>
 7e0:	46 81       	ldd	r20, Z+6	; 0x06
 7e2:	57 81       	ldd	r21, Z+7	; 0x07
 7e4:	24 81       	ldd	r18, Z+4	; 0x04
 7e6:	35 81       	ldd	r19, Z+5	; 0x05
 7e8:	42 17       	cp	r20, r18
 7ea:	53 07       	cpc	r21, r19
 7ec:	44 f4       	brge	.+16     	; 0x7fe <fputc+0x38>
 7ee:	a0 81       	ld	r26, Z
 7f0:	b1 81       	ldd	r27, Z+1	; 0x01
 7f2:	9d 01       	movw	r18, r26
 7f4:	2f 5f       	subi	r18, 0xFF	; 255
 7f6:	3f 4f       	sbci	r19, 0xFF	; 255
 7f8:	31 83       	std	Z+1, r19	; 0x01
 7fa:	20 83       	st	Z, r18
 7fc:	8c 93       	st	X, r24
 7fe:	26 81       	ldd	r18, Z+6	; 0x06
 800:	37 81       	ldd	r19, Z+7	; 0x07
 802:	2f 5f       	subi	r18, 0xFF	; 255
 804:	3f 4f       	sbci	r19, 0xFF	; 255
 806:	37 83       	std	Z+7, r19	; 0x07
 808:	26 83       	std	Z+6, r18	; 0x06
 80a:	14 c0       	rjmp	.+40     	; 0x834 <__DATA_REGION_LENGTH__+0x34>
 80c:	8b 01       	movw	r16, r22
 80e:	ec 01       	movw	r28, r24
 810:	fb 01       	movw	r30, r22
 812:	00 84       	ldd	r0, Z+8	; 0x08
 814:	f1 85       	ldd	r31, Z+9	; 0x09
 816:	e0 2d       	mov	r30, r0
 818:	09 95       	icall
 81a:	89 2b       	or	r24, r25
 81c:	e1 f6       	brne	.-72     	; 0x7d6 <fputc+0x10>
 81e:	d8 01       	movw	r26, r16
 820:	16 96       	adiw	r26, 0x06	; 6
 822:	8d 91       	ld	r24, X+
 824:	9c 91       	ld	r25, X
 826:	17 97       	sbiw	r26, 0x07	; 7
 828:	01 96       	adiw	r24, 0x01	; 1
 82a:	17 96       	adiw	r26, 0x07	; 7
 82c:	9c 93       	st	X, r25
 82e:	8e 93       	st	-X, r24
 830:	16 97       	sbiw	r26, 0x06	; 6
 832:	ce 01       	movw	r24, r28
 834:	df 91       	pop	r29
 836:	cf 91       	pop	r28
 838:	1f 91       	pop	r17
 83a:	0f 91       	pop	r16
 83c:	08 95       	ret

0000083e <__ultoa_invert>:
 83e:	fa 01       	movw	r30, r20
 840:	aa 27       	eor	r26, r26
 842:	28 30       	cpi	r18, 0x08	; 8
 844:	51 f1       	breq	.+84     	; 0x89a <__ultoa_invert+0x5c>
 846:	20 31       	cpi	r18, 0x10	; 16
 848:	81 f1       	breq	.+96     	; 0x8aa <__ultoa_invert+0x6c>
 84a:	e8 94       	clt
 84c:	6f 93       	push	r22
 84e:	6e 7f       	andi	r22, 0xFE	; 254
 850:	6e 5f       	subi	r22, 0xFE	; 254
 852:	7f 4f       	sbci	r23, 0xFF	; 255
 854:	8f 4f       	sbci	r24, 0xFF	; 255
 856:	9f 4f       	sbci	r25, 0xFF	; 255
 858:	af 4f       	sbci	r26, 0xFF	; 255
 85a:	b1 e0       	ldi	r27, 0x01	; 1
 85c:	3e d0       	rcall	.+124    	; 0x8da <__ultoa_invert+0x9c>
 85e:	b4 e0       	ldi	r27, 0x04	; 4
 860:	3c d0       	rcall	.+120    	; 0x8da <__ultoa_invert+0x9c>
 862:	67 0f       	add	r22, r23
 864:	78 1f       	adc	r23, r24
 866:	89 1f       	adc	r24, r25
 868:	9a 1f       	adc	r25, r26
 86a:	a1 1d       	adc	r26, r1
 86c:	68 0f       	add	r22, r24
 86e:	79 1f       	adc	r23, r25
 870:	8a 1f       	adc	r24, r26
 872:	91 1d       	adc	r25, r1
 874:	a1 1d       	adc	r26, r1
 876:	6a 0f       	add	r22, r26
 878:	71 1d       	adc	r23, r1
 87a:	81 1d       	adc	r24, r1
 87c:	91 1d       	adc	r25, r1
 87e:	a1 1d       	adc	r26, r1
 880:	20 d0       	rcall	.+64     	; 0x8c2 <__ultoa_invert+0x84>
 882:	09 f4       	brne	.+2      	; 0x886 <__ultoa_invert+0x48>
 884:	68 94       	set
 886:	3f 91       	pop	r19
 888:	2a e0       	ldi	r18, 0x0A	; 10
 88a:	26 9f       	mul	r18, r22
 88c:	11 24       	eor	r1, r1
 88e:	30 19       	sub	r19, r0
 890:	30 5d       	subi	r19, 0xD0	; 208
 892:	31 93       	st	Z+, r19
 894:	de f6       	brtc	.-74     	; 0x84c <__ultoa_invert+0xe>
 896:	cf 01       	movw	r24, r30
 898:	08 95       	ret
 89a:	46 2f       	mov	r20, r22
 89c:	47 70       	andi	r20, 0x07	; 7
 89e:	40 5d       	subi	r20, 0xD0	; 208
 8a0:	41 93       	st	Z+, r20
 8a2:	b3 e0       	ldi	r27, 0x03	; 3
 8a4:	0f d0       	rcall	.+30     	; 0x8c4 <__ultoa_invert+0x86>
 8a6:	c9 f7       	brne	.-14     	; 0x89a <__ultoa_invert+0x5c>
 8a8:	f6 cf       	rjmp	.-20     	; 0x896 <__ultoa_invert+0x58>
 8aa:	46 2f       	mov	r20, r22
 8ac:	4f 70       	andi	r20, 0x0F	; 15
 8ae:	40 5d       	subi	r20, 0xD0	; 208
 8b0:	4a 33       	cpi	r20, 0x3A	; 58
 8b2:	18 f0       	brcs	.+6      	; 0x8ba <__ultoa_invert+0x7c>
 8b4:	49 5d       	subi	r20, 0xD9	; 217
 8b6:	31 fd       	sbrc	r19, 1
 8b8:	40 52       	subi	r20, 0x20	; 32
 8ba:	41 93       	st	Z+, r20
 8bc:	02 d0       	rcall	.+4      	; 0x8c2 <__ultoa_invert+0x84>
 8be:	a9 f7       	brne	.-22     	; 0x8aa <__ultoa_invert+0x6c>
 8c0:	ea cf       	rjmp	.-44     	; 0x896 <__ultoa_invert+0x58>
 8c2:	b4 e0       	ldi	r27, 0x04	; 4
 8c4:	a6 95       	lsr	r26
 8c6:	97 95       	ror	r25
 8c8:	87 95       	ror	r24
 8ca:	77 95       	ror	r23
 8cc:	67 95       	ror	r22
 8ce:	ba 95       	dec	r27
 8d0:	c9 f7       	brne	.-14     	; 0x8c4 <__ultoa_invert+0x86>
 8d2:	00 97       	sbiw	r24, 0x00	; 0
 8d4:	61 05       	cpc	r22, r1
 8d6:	71 05       	cpc	r23, r1
 8d8:	08 95       	ret
 8da:	9b 01       	movw	r18, r22
 8dc:	ac 01       	movw	r20, r24
 8de:	0a 2e       	mov	r0, r26
 8e0:	06 94       	lsr	r0
 8e2:	57 95       	ror	r21
 8e4:	47 95       	ror	r20
 8e6:	37 95       	ror	r19
 8e8:	27 95       	ror	r18
 8ea:	ba 95       	dec	r27
 8ec:	c9 f7       	brne	.-14     	; 0x8e0 <__ultoa_invert+0xa2>
 8ee:	62 0f       	add	r22, r18
 8f0:	73 1f       	adc	r23, r19
 8f2:	84 1f       	adc	r24, r20
 8f4:	95 1f       	adc	r25, r21
 8f6:	a0 1d       	adc	r26, r0
 8f8:	08 95       	ret

000008fa <__prologue_saves__>:
 8fa:	2f 92       	push	r2
 8fc:	3f 92       	push	r3
 8fe:	4f 92       	push	r4
 900:	5f 92       	push	r5
 902:	6f 92       	push	r6
 904:	7f 92       	push	r7
 906:	8f 92       	push	r8
 908:	9f 92       	push	r9
 90a:	af 92       	push	r10
 90c:	bf 92       	push	r11
 90e:	cf 92       	push	r12
 910:	df 92       	push	r13
 912:	ef 92       	push	r14
 914:	ff 92       	push	r15
 916:	0f 93       	push	r16
 918:	1f 93       	push	r17
 91a:	cf 93       	push	r28
 91c:	df 93       	push	r29
 91e:	cd b7       	in	r28, 0x3d	; 61
 920:	de b7       	in	r29, 0x3e	; 62
 922:	ca 1b       	sub	r28, r26
 924:	db 0b       	sbc	r29, r27
 926:	0f b6       	in	r0, 0x3f	; 63
 928:	f8 94       	cli
 92a:	de bf       	out	0x3e, r29	; 62
 92c:	0f be       	out	0x3f, r0	; 63
 92e:	cd bf       	out	0x3d, r28	; 61
 930:	09 94       	ijmp

00000932 <__epilogue_restores__>:
 932:	2a 88       	ldd	r2, Y+18	; 0x12
 934:	39 88       	ldd	r3, Y+17	; 0x11
 936:	48 88       	ldd	r4, Y+16	; 0x10
 938:	5f 84       	ldd	r5, Y+15	; 0x0f
 93a:	6e 84       	ldd	r6, Y+14	; 0x0e
 93c:	7d 84       	ldd	r7, Y+13	; 0x0d
 93e:	8c 84       	ldd	r8, Y+12	; 0x0c
 940:	9b 84       	ldd	r9, Y+11	; 0x0b
 942:	aa 84       	ldd	r10, Y+10	; 0x0a
 944:	b9 84       	ldd	r11, Y+9	; 0x09
 946:	c8 84       	ldd	r12, Y+8	; 0x08
 948:	df 80       	ldd	r13, Y+7	; 0x07
 94a:	ee 80       	ldd	r14, Y+6	; 0x06
 94c:	fd 80       	ldd	r15, Y+5	; 0x05
 94e:	0c 81       	ldd	r16, Y+4	; 0x04
 950:	1b 81       	ldd	r17, Y+3	; 0x03
 952:	aa 81       	ldd	r26, Y+2	; 0x02
 954:	b9 81       	ldd	r27, Y+1	; 0x01
 956:	ce 0f       	add	r28, r30
 958:	d1 1d       	adc	r29, r1
 95a:	0f b6       	in	r0, 0x3f	; 63
 95c:	f8 94       	cli
 95e:	de bf       	out	0x3e, r29	; 62
 960:	0f be       	out	0x3f, r0	; 63
 962:	cd bf       	out	0x3d, r28	; 61
 964:	ed 01       	movw	r28, r26
 966:	08 95       	ret

00000968 <_exit>:
 968:	f8 94       	cli

0000096a <__stop_program>:
 96a:	ff cf       	rjmp	.-2      	; 0x96a <__stop_program>
