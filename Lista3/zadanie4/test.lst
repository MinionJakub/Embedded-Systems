
test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000002c  00800100  000010c4  00001158  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000010c4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000014  0080012c  0080012c  00001184  2**0
                  ALLOC
  3 .stab         00000960  00000000  00000000  00001184  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000ee1  00000000  00000000  00001ae4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000011  00000000  00000000  000029c5  2**0
                  CONTENTS, READONLY
  6 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000029d8  2**2
                  CONTENTS, READONLY
  7 .debug_info   000005f4  00000000  00000000  00002a18  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000005a2  00000000  00000000  0000300c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000001a  00000000  00000000  000035ae  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000208  00000000  00000000  000035c8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 61 00 	jmp	0xc2	; 0xc2 <__ctors_end>
       4:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
       8:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
       c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      10:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      14:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      18:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      1c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      20:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      24:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      28:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      2c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      30:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      34:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      38:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      3c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      40:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      44:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      48:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      4c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      50:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      54:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      58:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      5c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      60:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      64:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      68:	08 00       	.word	0x0008	; ????
      6a:	00 00       	nop
      6c:	be 92       	st	-X, r11
      6e:	24 49       	sbci	r18, 0x94	; 148
      70:	12 3e       	cpi	r17, 0xE2	; 226
      72:	ab aa       	std	Y+51, r10	; 0x33
      74:	aa 2a       	or	r10, r26
      76:	be cd       	rjmp	.-1156   	; 0xfffffbf4 <__eeprom_end+0xff7efbf4>
      78:	cc cc       	rjmp	.-1640   	; 0xfffffa12 <__eeprom_end+0xff7efa12>
      7a:	4c 3e       	cpi	r20, 0xEC	; 236
      7c:	00 00       	nop
      7e:	00 80       	ld	r0, Z
      80:	be ab       	std	Y+54, r27	; 0x36
      82:	aa aa       	std	Y+50, r10	; 0x32
      84:	aa 3e       	cpi	r26, 0xEA	; 234
      86:	00 00       	nop
      88:	00 00       	nop
      8a:	bf 00       	.word	0x00bf	; ????
      8c:	00 00       	nop
      8e:	80 3f       	cpi	r24, 0xF0	; 240
      90:	00 00       	nop
      92:	00 00       	nop
      94:	00 08       	sbc	r0, r0
      96:	41 78       	andi	r20, 0x81	; 129
      98:	d3 bb       	out	0x13, r29	; 19
      9a:	43 87       	std	Z+11, r20	; 0x0b
      9c:	d1 13       	cpse	r29, r17
      9e:	3d 19       	sub	r19, r13
      a0:	0e 3c       	cpi	r16, 0xCE	; 206
      a2:	c3 bd       	out	0x23, r28	; 35
      a4:	42 82       	std	Z+2, r4	; 0x02
      a6:	ad 2b       	or	r26, r29
      a8:	3e 68       	ori	r19, 0x8E	; 142
      aa:	ec 82       	std	Y+4, r14	; 0x04
      ac:	76 be       	out	0x36, r7	; 54
      ae:	d9 8f       	std	Y+25, r29	; 0x19
      b0:	e1 a9       	ldd	r30, Z+49	; 0x31
      b2:	3e 4c       	sbci	r19, 0xCE	; 206
      b4:	80 ef       	ldi	r24, 0xF0	; 240
      b6:	ff be       	out	0x3f, r15	; 63
      b8:	01 c4       	rjmp	.+2050   	; 0x8bc <log+0x18>
      ba:	ff 7f       	andi	r31, 0xFF	; 255
      bc:	3f 00       	.word	0x003f	; ????
      be:	00 00       	nop
	...

000000c2 <__ctors_end>:
      c2:	11 24       	eor	r1, r1
      c4:	1f be       	out	0x3f, r1	; 63
      c6:	cf ef       	ldi	r28, 0xFF	; 255
      c8:	d8 e0       	ldi	r29, 0x08	; 8
      ca:	de bf       	out	0x3e, r29	; 62
      cc:	cd bf       	out	0x3d, r28	; 61

000000ce <__do_copy_data>:
      ce:	11 e0       	ldi	r17, 0x01	; 1
      d0:	a0 e0       	ldi	r26, 0x00	; 0
      d2:	b1 e0       	ldi	r27, 0x01	; 1
      d4:	e4 ec       	ldi	r30, 0xC4	; 196
      d6:	f0 e1       	ldi	r31, 0x10	; 16
      d8:	02 c0       	rjmp	.+4      	; 0xde <__do_copy_data+0x10>
      da:	05 90       	lpm	r0, Z+
      dc:	0d 92       	st	X+, r0
      de:	ac 32       	cpi	r26, 0x2C	; 44
      e0:	b1 07       	cpc	r27, r17
      e2:	d9 f7       	brne	.-10     	; 0xda <__do_copy_data+0xc>

000000e4 <__do_clear_bss>:
      e4:	21 e0       	ldi	r18, 0x01	; 1
      e6:	ac e2       	ldi	r26, 0x2C	; 44
      e8:	b1 e0       	ldi	r27, 0x01	; 1
      ea:	01 c0       	rjmp	.+2      	; 0xee <.do_clear_bss_start>

000000ec <.do_clear_bss_loop>:
      ec:	1d 92       	st	X+, r1

000000ee <.do_clear_bss_start>:
      ee:	a0 34       	cpi	r26, 0x40	; 64
      f0:	b2 07       	cpc	r27, r18
      f2:	e1 f7       	brne	.-8      	; 0xec <.do_clear_bss_loop>
      f4:	0e 94 90 01 	call	0x320	; 0x320 <main>
      f8:	0c 94 60 08 	jmp	0x10c0	; 0x10c0 <_exit>

000000fc <__bad_interrupt>:
      fc:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000100 <uart_transmit>:

// transmisja jednego znaku
int uart_transmit(char data, FILE *stream)
{
  // czekaj aż transmiter gotowy
  while(!(UCSR0A & _BV(UDRE0)));
     100:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
     104:	95 ff       	sbrs	r25, 5
     106:	fc cf       	rjmp	.-8      	; 0x100 <uart_transmit>
  UDR0 = data;
     108:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
  return 0;
}
     10c:	80 e0       	ldi	r24, 0x00	; 0
     10e:	90 e0       	ldi	r25, 0x00	; 0
     110:	08 95       	ret

00000112 <uart_receive>:

// odczyt jednego znaku
int uart_receive(FILE *stream)
{
  // czekaj aż znak dostępny
  while (!(UCSR0A & _BV(RXC0)));
     112:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
     116:	87 ff       	sbrs	r24, 7
     118:	fc cf       	rjmp	.-8      	; 0x112 <uart_receive>
  return UDR0;
     11a:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
}
     11e:	90 e0       	ldi	r25, 0x00	; 0
     120:	08 95       	ret

00000122 <uart_init>:

// inicjalizacja UART
void uart_init()
{
  // ustaw baudrate
  UBRR0 = UBRR_VALUE;
     122:	87 e6       	ldi	r24, 0x67	; 103
     124:	90 e0       	ldi	r25, 0x00	; 0
     126:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
     12a:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
  // wyczyść rejestr UCSR0A
  UCSR0A = 0;
     12e:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
  // włącz odbiornik i nadajnik
  UCSR0B = _BV(RXEN0) | _BV(TXEN0);
     132:	88 e1       	ldi	r24, 0x18	; 24
     134:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
  // ustaw format 8n1
  UCSR0C = _BV(UCSZ00) | _BV(UCSZ01);
     138:	86 e0       	ldi	r24, 0x06	; 6
     13a:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
     13e:	08 95       	ret

00000140 <setup_ADC>:
FILE uart_file;

// ADC

void setup_ADC(){
    ADMUX = _BV(REFS0); // setup ref vol (here it is 5V)
     140:	ec e7       	ldi	r30, 0x7C	; 124
     142:	f0 e0       	ldi	r31, 0x00	; 0
     144:	80 e4       	ldi	r24, 0x40	; 64
     146:	80 83       	st	Z, r24

    ADMUX &= ~(0b1111);// setup input pins
     148:	80 81       	ld	r24, Z
     14a:	80 7f       	andi	r24, 0xF0	; 240
     14c:	80 83       	st	Z, r24

    DIDR0 = _BV(ADC0D); // disable digital input on pin adc0
     14e:	81 e0       	ldi	r24, 0x01	; 1
     150:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <__TEXT_REGION_LENGTH__+0x7f807e>
    ADCSRA = _BV(ADPS0) | _BV(ADPS1) | _BV(ADPS2); //setup prescaler
     154:	ea e7       	ldi	r30, 0x7A	; 122
     156:	f0 e0       	ldi	r31, 0x00	; 0
     158:	87 e0       	ldi	r24, 0x07	; 7
     15a:	80 83       	st	Z, r24
    ADCSRA |= _BV(ADEN); // enables the ADC
     15c:	80 81       	ld	r24, Z
     15e:	80 68       	ori	r24, 0x80	; 128
     160:	80 83       	st	Z, r24
     162:	08 95       	ret

00000164 <printFloat>:
}

void printFloat(float number) {
     164:	4f 92       	push	r4
     166:	5f 92       	push	r5
     168:	6f 92       	push	r6
     16a:	7f 92       	push	r7
     16c:	8f 92       	push	r8
     16e:	9f 92       	push	r9
     170:	af 92       	push	r10
     172:	bf 92       	push	r11
     174:	cf 92       	push	r12
     176:	df 92       	push	r13
     178:	ef 92       	push	r14
     17a:	ff 92       	push	r15
     17c:	cf 93       	push	r28
     17e:	df 93       	push	r29
     180:	00 d0       	rcall	.+0      	; 0x182 <printFloat+0x1e>
     182:	00 d0       	rcall	.+0      	; 0x184 <printFloat+0x20>
     184:	cd b7       	in	r28, 0x3d	; 61
     186:	de b7       	in	r29, 0x3e	; 62
    number = round(number * 100) / 100; /* round off to 2 decimal places */
     188:	20 e0       	ldi	r18, 0x00	; 0
     18a:	30 e0       	ldi	r19, 0x00	; 0
     18c:	48 ec       	ldi	r20, 0xC8	; 200
     18e:	52 e4       	ldi	r21, 0x42	; 66
     190:	0e 94 9a 04 	call	0x934	; 0x934 <__mulsf3>
     194:	0e 94 07 05 	call	0xa0e	; 0xa0e <round>
     198:	20 e0       	ldi	r18, 0x00	; 0
     19a:	30 e0       	ldi	r19, 0x00	; 0
     19c:	48 ec       	ldi	r20, 0xC8	; 200
     19e:	52 e4       	ldi	r21, 0x42	; 66
     1a0:	0e 94 bc 02 	call	0x578	; 0x578 <__divsf3>
     1a4:	6b 01       	movw	r12, r22
     1a6:	7c 01       	movw	r14, r24
    uart_transmit('0' + number / 10 - 25, stdin); /* tens place */
     1a8:	20 e0       	ldi	r18, 0x00	; 0
     1aa:	30 e0       	ldi	r19, 0x00	; 0
     1ac:	40 e2       	ldi	r20, 0x20	; 32
     1ae:	51 e4       	ldi	r21, 0x41	; 65
     1b0:	0e 94 bc 02 	call	0x578	; 0x578 <__divsf3>
     1b4:	4b 01       	movw	r8, r22
     1b6:	5c 01       	movw	r10, r24
     1b8:	20 e0       	ldi	r18, 0x00	; 0
     1ba:	30 e0       	ldi	r19, 0x00	; 0
     1bc:	40 e4       	ldi	r20, 0x40	; 64
     1be:	52 e4       	ldi	r21, 0x42	; 66
     1c0:	0e 94 50 02 	call	0x4a0	; 0x4a0 <__addsf3>
     1c4:	20 e0       	ldi	r18, 0x00	; 0
     1c6:	30 e0       	ldi	r19, 0x00	; 0
     1c8:	48 ec       	ldi	r20, 0xC8	; 200
     1ca:	51 e4       	ldi	r21, 0x41	; 65
     1cc:	0e 94 4f 02 	call	0x49e	; 0x49e <__subsf3>
     1d0:	0e 94 2e 03 	call	0x65c	; 0x65c <__fixsfsi>

// transmisja jednego znaku
int uart_transmit(char data, FILE *stream)
{
  // czekaj aż transmiter gotowy
  while(!(UCSR0A & _BV(UDRE0)));
     1d4:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
     1d8:	85 ff       	sbrs	r24, 5
     1da:	fc cf       	rjmp	.-8      	; 0x1d4 <printFloat+0x70>
  UDR0 = data;
     1dc:	60 93 c6 00 	sts	0x00C6, r22	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
}

void printFloat(float number) {
    number = round(number * 100) / 100; /* round off to 2 decimal places */
    uart_transmit('0' + number / 10 - 25, stdin); /* tens place */
    uart_transmit('0' + number - 10 * floor(number / 10), stdin); /* ones */
     1e0:	c5 01       	movw	r24, r10
     1e2:	b4 01       	movw	r22, r8
     1e4:	0e 94 a1 03 	call	0x742	; 0x742 <floor>
     1e8:	2b 01       	movw	r4, r22
     1ea:	3c 01       	movw	r6, r24
     1ec:	20 e0       	ldi	r18, 0x00	; 0
     1ee:	30 e0       	ldi	r19, 0x00	; 0
     1f0:	40 e4       	ldi	r20, 0x40	; 64
     1f2:	52 e4       	ldi	r21, 0x42	; 66
     1f4:	c7 01       	movw	r24, r14
     1f6:	b6 01       	movw	r22, r12
     1f8:	0e 94 50 02 	call	0x4a0	; 0x4a0 <__addsf3>
     1fc:	4b 01       	movw	r8, r22
     1fe:	5c 01       	movw	r10, r24
     200:	20 e0       	ldi	r18, 0x00	; 0
     202:	30 e0       	ldi	r19, 0x00	; 0
     204:	40 e2       	ldi	r20, 0x20	; 32
     206:	51 e4       	ldi	r21, 0x41	; 65
     208:	c3 01       	movw	r24, r6
     20a:	b2 01       	movw	r22, r4
     20c:	0e 94 9a 04 	call	0x934	; 0x934 <__mulsf3>
     210:	9b 01       	movw	r18, r22
     212:	ac 01       	movw	r20, r24
     214:	c5 01       	movw	r24, r10
     216:	b4 01       	movw	r22, r8
     218:	0e 94 4f 02 	call	0x49e	; 0x49e <__subsf3>
     21c:	0e 94 2e 03 	call	0x65c	; 0x65c <__fixsfsi>

// transmisja jednego znaku
int uart_transmit(char data, FILE *stream)
{
  // czekaj aż transmiter gotowy
  while(!(UCSR0A & _BV(UDRE0)));
     220:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
     224:	85 ff       	sbrs	r24, 5
     226:	fc cf       	rjmp	.-8      	; 0x220 <printFloat+0xbc>
  UDR0 = data;
     228:	60 93 c6 00 	sts	0x00C6, r22	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>

// transmisja jednego znaku
int uart_transmit(char data, FILE *stream)
{
  // czekaj aż transmiter gotowy
  while(!(UCSR0A & _BV(UDRE0)));
     22c:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
     230:	85 ff       	sbrs	r24, 5
     232:	fc cf       	rjmp	.-8      	; 0x22c <printFloat+0xc8>
  UDR0 = data;
     234:	8e e2       	ldi	r24, 0x2E	; 46
     236:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
void printFloat(float number) {
    number = round(number * 100) / 100; /* round off to 2 decimal places */
    uart_transmit('0' + number / 10 - 25, stdin); /* tens place */
    uart_transmit('0' + number - 10 * floor(number / 10), stdin); /* ones */
    uart_transmit('.', stdin);
    uart_transmit('0' + (number * 10) - floor(number) * 10, stdin); /* tenths */
     23a:	20 e0       	ldi	r18, 0x00	; 0
     23c:	30 e0       	ldi	r19, 0x00	; 0
     23e:	40 e2       	ldi	r20, 0x20	; 32
     240:	51 e4       	ldi	r21, 0x41	; 65
     242:	c7 01       	movw	r24, r14
     244:	b6 01       	movw	r22, r12
     246:	0e 94 9a 04 	call	0x934	; 0x934 <__mulsf3>
     24a:	4b 01       	movw	r8, r22
     24c:	5c 01       	movw	r10, r24
     24e:	c7 01       	movw	r24, r14
     250:	b6 01       	movw	r22, r12
     252:	0e 94 a1 03 	call	0x742	; 0x742 <floor>
     256:	2b 01       	movw	r4, r22
     258:	3c 01       	movw	r6, r24
     25a:	20 e0       	ldi	r18, 0x00	; 0
     25c:	30 e0       	ldi	r19, 0x00	; 0
     25e:	40 e4       	ldi	r20, 0x40	; 64
     260:	52 e4       	ldi	r21, 0x42	; 66
     262:	c5 01       	movw	r24, r10
     264:	b4 01       	movw	r22, r8
     266:	0e 94 50 02 	call	0x4a0	; 0x4a0 <__addsf3>
     26a:	69 83       	std	Y+1, r22	; 0x01
     26c:	7a 83       	std	Y+2, r23	; 0x02
     26e:	8b 83       	std	Y+3, r24	; 0x03
     270:	9c 83       	std	Y+4, r25	; 0x04
     272:	20 e0       	ldi	r18, 0x00	; 0
     274:	30 e0       	ldi	r19, 0x00	; 0
     276:	40 e2       	ldi	r20, 0x20	; 32
     278:	51 e4       	ldi	r21, 0x41	; 65
     27a:	c3 01       	movw	r24, r6
     27c:	b2 01       	movw	r22, r4
     27e:	0e 94 9a 04 	call	0x934	; 0x934 <__mulsf3>
     282:	9b 01       	movw	r18, r22
     284:	ac 01       	movw	r20, r24
     286:	69 81       	ldd	r22, Y+1	; 0x01
     288:	7a 81       	ldd	r23, Y+2	; 0x02
     28a:	8b 81       	ldd	r24, Y+3	; 0x03
     28c:	9c 81       	ldd	r25, Y+4	; 0x04
     28e:	0e 94 4f 02 	call	0x49e	; 0x49e <__subsf3>
     292:	0e 94 2e 03 	call	0x65c	; 0x65c <__fixsfsi>

// transmisja jednego znaku
int uart_transmit(char data, FILE *stream)
{
  // czekaj aż transmiter gotowy
  while(!(UCSR0A & _BV(UDRE0)));
     296:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
     29a:	85 ff       	sbrs	r24, 5
     29c:	fc cf       	rjmp	.-8      	; 0x296 <printFloat+0x132>
  UDR0 = data;
     29e:	60 93 c6 00 	sts	0x00C6, r22	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
    uart_transmit('0' + number / 10 - 25, stdin); /* tens place */
    uart_transmit('0' + number - 10 * floor(number / 10), stdin); /* ones */
    uart_transmit('.', stdin);
    uart_transmit('0' + (number * 10) - floor(number) * 10, stdin); /* tenths */
    /* hundredths place */
    uart_transmit('0' + (number * 100) - floor(number * 10) * 10, stdin);
     2a2:	c5 01       	movw	r24, r10
     2a4:	b4 01       	movw	r22, r8
     2a6:	0e 94 a1 03 	call	0x742	; 0x742 <floor>
     2aa:	4b 01       	movw	r8, r22
     2ac:	5c 01       	movw	r10, r24
     2ae:	20 e0       	ldi	r18, 0x00	; 0
     2b0:	30 e0       	ldi	r19, 0x00	; 0
     2b2:	48 ec       	ldi	r20, 0xC8	; 200
     2b4:	52 e4       	ldi	r21, 0x42	; 66
     2b6:	c7 01       	movw	r24, r14
     2b8:	b6 01       	movw	r22, r12
     2ba:	0e 94 9a 04 	call	0x934	; 0x934 <__mulsf3>
     2be:	20 e0       	ldi	r18, 0x00	; 0
     2c0:	30 e0       	ldi	r19, 0x00	; 0
     2c2:	40 e4       	ldi	r20, 0x40	; 64
     2c4:	52 e4       	ldi	r21, 0x42	; 66
     2c6:	0e 94 50 02 	call	0x4a0	; 0x4a0 <__addsf3>
     2ca:	6b 01       	movw	r12, r22
     2cc:	7c 01       	movw	r14, r24
     2ce:	20 e0       	ldi	r18, 0x00	; 0
     2d0:	30 e0       	ldi	r19, 0x00	; 0
     2d2:	40 e2       	ldi	r20, 0x20	; 32
     2d4:	51 e4       	ldi	r21, 0x41	; 65
     2d6:	c5 01       	movw	r24, r10
     2d8:	b4 01       	movw	r22, r8
     2da:	0e 94 9a 04 	call	0x934	; 0x934 <__mulsf3>
     2de:	9b 01       	movw	r18, r22
     2e0:	ac 01       	movw	r20, r24
     2e2:	c7 01       	movw	r24, r14
     2e4:	b6 01       	movw	r22, r12
     2e6:	0e 94 4f 02 	call	0x49e	; 0x49e <__subsf3>
     2ea:	0e 94 2e 03 	call	0x65c	; 0x65c <__fixsfsi>

// transmisja jednego znaku
int uart_transmit(char data, FILE *stream)
{
  // czekaj aż transmiter gotowy
  while(!(UCSR0A & _BV(UDRE0)));
     2ee:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
     2f2:	85 ff       	sbrs	r24, 5
     2f4:	fc cf       	rjmp	.-8      	; 0x2ee <printFloat+0x18a>
  UDR0 = data;
     2f6:	60 93 c6 00 	sts	0x00C6, r22	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
    uart_transmit('0' + number - 10 * floor(number / 10), stdin); /* ones */
    uart_transmit('.', stdin);
    uart_transmit('0' + (number * 10) - floor(number) * 10, stdin); /* tenths */
    /* hundredths place */
    uart_transmit('0' + (number * 100) - floor(number * 10) * 10, stdin);
}
     2fa:	0f 90       	pop	r0
     2fc:	0f 90       	pop	r0
     2fe:	0f 90       	pop	r0
     300:	0f 90       	pop	r0
     302:	df 91       	pop	r29
     304:	cf 91       	pop	r28
     306:	ff 90       	pop	r15
     308:	ef 90       	pop	r14
     30a:	df 90       	pop	r13
     30c:	cf 90       	pop	r12
     30e:	bf 90       	pop	r11
     310:	af 90       	pop	r10
     312:	9f 90       	pop	r9
     314:	8f 90       	pop	r8
     316:	7f 90       	pop	r7
     318:	6f 90       	pop	r6
     31a:	5f 90       	pop	r5
     31c:	4f 90       	pop	r4
     31e:	08 95       	ret

00000320 <main>:

int main(){
    UCSR0B |= _BV(RXEN0) | _BV(TXEN0);
     320:	80 91 c1 00 	lds	r24, 0x00C1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
     324:	88 61       	ori	r24, 0x18	; 24
     326:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>

// inicjalizacja UART
void uart_init()
{
  // ustaw baudrate
  UBRR0 = UBRR_VALUE;
     32a:	87 e6       	ldi	r24, 0x67	; 103
     32c:	90 e0       	ldi	r25, 0x00	; 0
     32e:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
     332:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
  // wyczyść rejestr UCSR0A
  UCSR0A = 0;
     336:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
  // włącz odbiornik i nadajnik
  UCSR0B = _BV(RXEN0) | _BV(TXEN0);
     33a:	88 e1       	ldi	r24, 0x18	; 24
     33c:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
  // ustaw format 8n1
  UCSR0C = _BV(UCSZ00) | _BV(UCSZ01);
     340:	86 e0       	ldi	r24, 0x06	; 6
     342:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>

int main(){
    UCSR0B |= _BV(RXEN0) | _BV(TXEN0);

    uart_init();
    fdev_setup_stream(&uart_file,uart_transmit,uart_receive,_FDEV_SETUP_RW);
     346:	8c e2       	ldi	r24, 0x2C	; 44
     348:	91 e0       	ldi	r25, 0x01	; 1
     34a:	20 e8       	ldi	r18, 0x80	; 128
     34c:	30 e0       	ldi	r19, 0x00	; 0
     34e:	30 93 35 01 	sts	0x0135, r19	; 0x800135 <__data_end+0x9>
     352:	20 93 34 01 	sts	0x0134, r18	; 0x800134 <__data_end+0x8>
     356:	29 e8       	ldi	r18, 0x89	; 137
     358:	30 e0       	ldi	r19, 0x00	; 0
     35a:	30 93 37 01 	sts	0x0137, r19	; 0x800137 <__data_end+0xb>
     35e:	20 93 36 01 	sts	0x0136, r18	; 0x800136 <__data_end+0xa>
     362:	23 e0       	ldi	r18, 0x03	; 3
     364:	20 93 2f 01 	sts	0x012F, r18	; 0x80012f <__data_end+0x3>
     368:	10 92 39 01 	sts	0x0139, r1	; 0x800139 <__data_end+0xd>
     36c:	10 92 38 01 	sts	0x0138, r1	; 0x800138 <__data_end+0xc>
    stdin = stdout = stderr = &uart_file;
     370:	90 93 3f 01 	sts	0x013F, r25	; 0x80013f <__iob+0x5>
     374:	80 93 3e 01 	sts	0x013E, r24	; 0x80013e <__iob+0x4>
     378:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <__iob+0x3>
     37c:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <__iob+0x2>
     380:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <__iob+0x1>
     384:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <__iob>
FILE uart_file;

// ADC

void setup_ADC(){
    ADMUX = _BV(REFS0); // setup ref vol (here it is 5V)
     388:	80 e4       	ldi	r24, 0x40	; 64
     38a:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>

    ADMUX &= ~(0b1111);// setup input pins
     38e:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
     392:	80 7f       	andi	r24, 0xF0	; 240
     394:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>

    DIDR0 = _BV(ADC0D); // disable digital input on pin adc0
     398:	81 e0       	ldi	r24, 0x01	; 1
     39a:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <__TEXT_REGION_LENGTH__+0x7f807e>
    ADCSRA = _BV(ADPS0) | _BV(ADPS1) | _BV(ADPS2); //setup prescaler
     39e:	87 e0       	ldi	r24, 0x07	; 7
     3a0:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    ADCSRA |= _BV(ADEN); // enables the ADC
     3a4:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     3a8:	80 68       	ori	r24, 0x80	; 128
     3aa:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>

        ADCSRA |= _BV(ADIF);

        float vIn = (float)ADC * (REF_VOLT / 1024.0f);

        printf("Measured voltage: ");    
     3ae:	00 e0       	ldi	r16, 0x00	; 0
     3b0:	11 e0       	ldi	r17, 0x01	; 1
        float r = ((REF_VOLT - vIn)/(vIn)) * R;
        float temperature = TO_CELCIUS(
            THERMISTOR_B / (log(r / THERMISTOR_R0) + THERMISTOR_B / THERMISTOR_T0)
        );

        printf("Current temperature: ");    
     3b2:	c5 e1       	ldi	r28, 0x15	; 21
     3b4:	d1 e0       	ldi	r29, 0x01	; 1
    
    setup_ADC();

    while(1){

        ADCSRA |= _BV(ADSC); // start conversion
     3b6:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     3ba:	80 64       	ori	r24, 0x40	; 64
     3bc:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>

        while(!(ADCSRA & _BV(ADIF)));
     3c0:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     3c4:	84 ff       	sbrs	r24, 4
     3c6:	fc cf       	rjmp	.-8      	; 0x3c0 <main+0xa0>

        ADCSRA |= _BV(ADIF);
     3c8:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     3cc:	80 61       	ori	r24, 0x10	; 16
     3ce:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>

        float vIn = (float)ADC * (REF_VOLT / 1024.0f);
     3d2:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
     3d6:	70 91 79 00 	lds	r23, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
     3da:	80 e0       	ldi	r24, 0x00	; 0
     3dc:	90 e0       	ldi	r25, 0x00	; 0
     3de:	0e 94 64 03 	call	0x6c8	; 0x6c8 <__floatunsisf>
     3e2:	2d e2       	ldi	r18, 0x2D	; 45
     3e4:	32 eb       	ldi	r19, 0xB2	; 178
     3e6:	41 ea       	ldi	r20, 0xA1	; 161
     3e8:	5b e3       	ldi	r21, 0x3B	; 59
     3ea:	0e 94 9a 04 	call	0x934	; 0x934 <__mulsf3>
     3ee:	6b 01       	movw	r12, r22
     3f0:	7c 01       	movw	r14, r24

        printf("Measured voltage: ");    
     3f2:	1f 93       	push	r17
     3f4:	0f 93       	push	r16
     3f6:	0e 94 52 05 	call	0xaa4	; 0xaa4 <printf>
        printFloat(vIn);
     3fa:	c7 01       	movw	r24, r14
     3fc:	b6 01       	movw	r22, r12
     3fe:	0e 94 b2 00 	call	0x164	; 0x164 <printFloat>
        printf("\r\n");
     402:	83 e1       	ldi	r24, 0x13	; 19
     404:	91 e0       	ldi	r25, 0x01	; 1
     406:	0e 94 68 05 	call	0xad0	; 0xad0 <puts>

        float r = ((REF_VOLT - vIn)/(vIn)) * R;
        float temperature = TO_CELCIUS(
     40a:	a7 01       	movw	r20, r14
     40c:	96 01       	movw	r18, r12
     40e:	6d e2       	ldi	r22, 0x2D	; 45
     410:	72 eb       	ldi	r23, 0xB2	; 178
     412:	81 ea       	ldi	r24, 0xA1	; 161
     414:	90 e4       	ldi	r25, 0x40	; 64
     416:	0e 94 4f 02 	call	0x49e	; 0x49e <__subsf3>
     41a:	a7 01       	movw	r20, r14
     41c:	96 01       	movw	r18, r12
     41e:	0e 94 bc 02 	call	0x578	; 0x578 <__divsf3>
     422:	20 e0       	ldi	r18, 0x00	; 0
     424:	30 e4       	ldi	r19, 0x40	; 64
     426:	4c e1       	ldi	r20, 0x1C	; 28
     428:	56 e4       	ldi	r21, 0x46	; 70
     42a:	0e 94 9a 04 	call	0x934	; 0x934 <__mulsf3>
     42e:	20 e0       	ldi	r18, 0x00	; 0
     430:	30 ee       	ldi	r19, 0xE0	; 224
     432:	42 e9       	ldi	r20, 0x92	; 146
     434:	55 e4       	ldi	r21, 0x45	; 69
     436:	0e 94 bc 02 	call	0x578	; 0x578 <__divsf3>
     43a:	0e 94 52 04 	call	0x8a4	; 0x8a4 <log>
     43e:	6b 01       	movw	r12, r22
     440:	7c 01       	movw	r14, r24
            THERMISTOR_B / (log(r / THERMISTOR_R0) + THERMISTOR_B / THERMISTOR_T0)
        );

        printf("Current temperature: ");    
     442:	df 93       	push	r29
     444:	cf 93       	push	r28
     446:	0e 94 52 05 	call	0xaa4	; 0xaa4 <printf>
        printFloat(temperature);
     44a:	23 e0       	ldi	r18, 0x03	; 3
     44c:	36 e0       	ldi	r19, 0x06	; 6
     44e:	4c e5       	ldi	r20, 0x5C	; 92
     450:	51 e4       	ldi	r21, 0x41	; 65
     452:	c7 01       	movw	r24, r14
     454:	b6 01       	movw	r22, r12
     456:	0e 94 50 02 	call	0x4a0	; 0x4a0 <__addsf3>
     45a:	9b 01       	movw	r18, r22
     45c:	ac 01       	movw	r20, r24
     45e:	60 e0       	ldi	r22, 0x00	; 0
     460:	70 e2       	ldi	r23, 0x20	; 32
     462:	80 e8       	ldi	r24, 0x80	; 128
     464:	95 e4       	ldi	r25, 0x45	; 69
     466:	0e 94 bc 02 	call	0x578	; 0x578 <__divsf3>
     46a:	23 e3       	ldi	r18, 0x33	; 51
     46c:	33 e9       	ldi	r19, 0x93	; 147
     46e:	48 e8       	ldi	r20, 0x88	; 136
     470:	53 e4       	ldi	r21, 0x43	; 67
     472:	0e 94 4f 02 	call	0x49e	; 0x49e <__subsf3>
     476:	0e 94 b2 00 	call	0x164	; 0x164 <printFloat>
        printf("\r\n");
     47a:	83 e1       	ldi	r24, 0x13	; 19
     47c:	91 e0       	ldi	r25, 0x01	; 1
     47e:	0e 94 68 05 	call	0xad0	; 0xad0 <puts>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     482:	9f ef       	ldi	r25, 0xFF	; 255
     484:	23 ed       	ldi	r18, 0xD3	; 211
     486:	80 e3       	ldi	r24, 0x30	; 48
     488:	91 50       	subi	r25, 0x01	; 1
     48a:	20 40       	sbci	r18, 0x00	; 0
     48c:	80 40       	sbci	r24, 0x00	; 0
     48e:	e1 f7       	brne	.-8      	; 0x488 <__EEPROM_REGION_LENGTH__+0x88>
     490:	00 c0       	rjmp	.+0      	; 0x492 <__EEPROM_REGION_LENGTH__+0x92>
     492:	00 00       	nop
     494:	0f 90       	pop	r0
     496:	0f 90       	pop	r0
     498:	0f 90       	pop	r0
     49a:	0f 90       	pop	r0
     49c:	8c cf       	rjmp	.-232    	; 0x3b6 <main+0x96>

0000049e <__subsf3>:
     49e:	50 58       	subi	r21, 0x80	; 128

000004a0 <__addsf3>:
     4a0:	bb 27       	eor	r27, r27
     4a2:	aa 27       	eor	r26, r26
     4a4:	0e 94 67 02 	call	0x4ce	; 0x4ce <__addsf3x>
     4a8:	0c 94 f8 03 	jmp	0x7f0	; 0x7f0 <__fp_round>
     4ac:	0e 94 ea 03 	call	0x7d4	; 0x7d4 <__fp_pscA>
     4b0:	38 f0       	brcs	.+14     	; 0x4c0 <__addsf3+0x20>
     4b2:	0e 94 f1 03 	call	0x7e2	; 0x7e2 <__fp_pscB>
     4b6:	20 f0       	brcs	.+8      	; 0x4c0 <__addsf3+0x20>
     4b8:	39 f4       	brne	.+14     	; 0x4c8 <__addsf3+0x28>
     4ba:	9f 3f       	cpi	r25, 0xFF	; 255
     4bc:	19 f4       	brne	.+6      	; 0x4c4 <__addsf3+0x24>
     4be:	26 f4       	brtc	.+8      	; 0x4c8 <__addsf3+0x28>
     4c0:	0c 94 e7 03 	jmp	0x7ce	; 0x7ce <__fp_nan>
     4c4:	0e f4       	brtc	.+2      	; 0x4c8 <__addsf3+0x28>
     4c6:	e0 95       	com	r30
     4c8:	e7 fb       	bst	r30, 7
     4ca:	0c 94 b8 03 	jmp	0x770	; 0x770 <__fp_inf>

000004ce <__addsf3x>:
     4ce:	e9 2f       	mov	r30, r25
     4d0:	0e 94 09 04 	call	0x812	; 0x812 <__fp_split3>
     4d4:	58 f3       	brcs	.-42     	; 0x4ac <__addsf3+0xc>
     4d6:	ba 17       	cp	r27, r26
     4d8:	62 07       	cpc	r22, r18
     4da:	73 07       	cpc	r23, r19
     4dc:	84 07       	cpc	r24, r20
     4de:	95 07       	cpc	r25, r21
     4e0:	20 f0       	brcs	.+8      	; 0x4ea <__addsf3x+0x1c>
     4e2:	79 f4       	brne	.+30     	; 0x502 <__addsf3x+0x34>
     4e4:	a6 f5       	brtc	.+104    	; 0x54e <__addsf3x+0x80>
     4e6:	0c 94 43 04 	jmp	0x886	; 0x886 <__fp_zero>
     4ea:	0e f4       	brtc	.+2      	; 0x4ee <__addsf3x+0x20>
     4ec:	e0 95       	com	r30
     4ee:	0b 2e       	mov	r0, r27
     4f0:	ba 2f       	mov	r27, r26
     4f2:	a0 2d       	mov	r26, r0
     4f4:	0b 01       	movw	r0, r22
     4f6:	b9 01       	movw	r22, r18
     4f8:	90 01       	movw	r18, r0
     4fa:	0c 01       	movw	r0, r24
     4fc:	ca 01       	movw	r24, r20
     4fe:	a0 01       	movw	r20, r0
     500:	11 24       	eor	r1, r1
     502:	ff 27       	eor	r31, r31
     504:	59 1b       	sub	r21, r25
     506:	99 f0       	breq	.+38     	; 0x52e <__addsf3x+0x60>
     508:	59 3f       	cpi	r21, 0xF9	; 249
     50a:	50 f4       	brcc	.+20     	; 0x520 <__addsf3x+0x52>
     50c:	50 3e       	cpi	r21, 0xE0	; 224
     50e:	68 f1       	brcs	.+90     	; 0x56a <__addsf3x+0x9c>
     510:	1a 16       	cp	r1, r26
     512:	f0 40       	sbci	r31, 0x00	; 0
     514:	a2 2f       	mov	r26, r18
     516:	23 2f       	mov	r18, r19
     518:	34 2f       	mov	r19, r20
     51a:	44 27       	eor	r20, r20
     51c:	58 5f       	subi	r21, 0xF8	; 248
     51e:	f3 cf       	rjmp	.-26     	; 0x506 <__addsf3x+0x38>
     520:	46 95       	lsr	r20
     522:	37 95       	ror	r19
     524:	27 95       	ror	r18
     526:	a7 95       	ror	r26
     528:	f0 40       	sbci	r31, 0x00	; 0
     52a:	53 95       	inc	r21
     52c:	c9 f7       	brne	.-14     	; 0x520 <__addsf3x+0x52>
     52e:	7e f4       	brtc	.+30     	; 0x54e <__addsf3x+0x80>
     530:	1f 16       	cp	r1, r31
     532:	ba 0b       	sbc	r27, r26
     534:	62 0b       	sbc	r22, r18
     536:	73 0b       	sbc	r23, r19
     538:	84 0b       	sbc	r24, r20
     53a:	ba f0       	brmi	.+46     	; 0x56a <__addsf3x+0x9c>
     53c:	91 50       	subi	r25, 0x01	; 1
     53e:	a1 f0       	breq	.+40     	; 0x568 <__addsf3x+0x9a>
     540:	ff 0f       	add	r31, r31
     542:	bb 1f       	adc	r27, r27
     544:	66 1f       	adc	r22, r22
     546:	77 1f       	adc	r23, r23
     548:	88 1f       	adc	r24, r24
     54a:	c2 f7       	brpl	.-16     	; 0x53c <__addsf3x+0x6e>
     54c:	0e c0       	rjmp	.+28     	; 0x56a <__addsf3x+0x9c>
     54e:	ba 0f       	add	r27, r26
     550:	62 1f       	adc	r22, r18
     552:	73 1f       	adc	r23, r19
     554:	84 1f       	adc	r24, r20
     556:	48 f4       	brcc	.+18     	; 0x56a <__addsf3x+0x9c>
     558:	87 95       	ror	r24
     55a:	77 95       	ror	r23
     55c:	67 95       	ror	r22
     55e:	b7 95       	ror	r27
     560:	f7 95       	ror	r31
     562:	9e 3f       	cpi	r25, 0xFE	; 254
     564:	08 f0       	brcs	.+2      	; 0x568 <__addsf3x+0x9a>
     566:	b0 cf       	rjmp	.-160    	; 0x4c8 <__addsf3+0x28>
     568:	93 95       	inc	r25
     56a:	88 0f       	add	r24, r24
     56c:	08 f0       	brcs	.+2      	; 0x570 <__addsf3x+0xa2>
     56e:	99 27       	eor	r25, r25
     570:	ee 0f       	add	r30, r30
     572:	97 95       	ror	r25
     574:	87 95       	ror	r24
     576:	08 95       	ret

00000578 <__divsf3>:
     578:	0e 94 d0 02 	call	0x5a0	; 0x5a0 <__divsf3x>
     57c:	0c 94 f8 03 	jmp	0x7f0	; 0x7f0 <__fp_round>
     580:	0e 94 f1 03 	call	0x7e2	; 0x7e2 <__fp_pscB>
     584:	58 f0       	brcs	.+22     	; 0x59c <__divsf3+0x24>
     586:	0e 94 ea 03 	call	0x7d4	; 0x7d4 <__fp_pscA>
     58a:	40 f0       	brcs	.+16     	; 0x59c <__divsf3+0x24>
     58c:	29 f4       	brne	.+10     	; 0x598 <__divsf3+0x20>
     58e:	5f 3f       	cpi	r21, 0xFF	; 255
     590:	29 f0       	breq	.+10     	; 0x59c <__divsf3+0x24>
     592:	0c 94 b8 03 	jmp	0x770	; 0x770 <__fp_inf>
     596:	51 11       	cpse	r21, r1
     598:	0c 94 44 04 	jmp	0x888	; 0x888 <__fp_szero>
     59c:	0c 94 e7 03 	jmp	0x7ce	; 0x7ce <__fp_nan>

000005a0 <__divsf3x>:
     5a0:	0e 94 09 04 	call	0x812	; 0x812 <__fp_split3>
     5a4:	68 f3       	brcs	.-38     	; 0x580 <__divsf3+0x8>

000005a6 <__divsf3_pse>:
     5a6:	99 23       	and	r25, r25
     5a8:	b1 f3       	breq	.-20     	; 0x596 <__divsf3+0x1e>
     5aa:	55 23       	and	r21, r21
     5ac:	91 f3       	breq	.-28     	; 0x592 <__divsf3+0x1a>
     5ae:	95 1b       	sub	r25, r21
     5b0:	55 0b       	sbc	r21, r21
     5b2:	bb 27       	eor	r27, r27
     5b4:	aa 27       	eor	r26, r26
     5b6:	62 17       	cp	r22, r18
     5b8:	73 07       	cpc	r23, r19
     5ba:	84 07       	cpc	r24, r20
     5bc:	38 f0       	brcs	.+14     	; 0x5cc <__divsf3_pse+0x26>
     5be:	9f 5f       	subi	r25, 0xFF	; 255
     5c0:	5f 4f       	sbci	r21, 0xFF	; 255
     5c2:	22 0f       	add	r18, r18
     5c4:	33 1f       	adc	r19, r19
     5c6:	44 1f       	adc	r20, r20
     5c8:	aa 1f       	adc	r26, r26
     5ca:	a9 f3       	breq	.-22     	; 0x5b6 <__divsf3_pse+0x10>
     5cc:	35 d0       	rcall	.+106    	; 0x638 <__divsf3_pse+0x92>
     5ce:	0e 2e       	mov	r0, r30
     5d0:	3a f0       	brmi	.+14     	; 0x5e0 <__divsf3_pse+0x3a>
     5d2:	e0 e8       	ldi	r30, 0x80	; 128
     5d4:	32 d0       	rcall	.+100    	; 0x63a <__divsf3_pse+0x94>
     5d6:	91 50       	subi	r25, 0x01	; 1
     5d8:	50 40       	sbci	r21, 0x00	; 0
     5da:	e6 95       	lsr	r30
     5dc:	00 1c       	adc	r0, r0
     5de:	ca f7       	brpl	.-14     	; 0x5d2 <__divsf3_pse+0x2c>
     5e0:	2b d0       	rcall	.+86     	; 0x638 <__divsf3_pse+0x92>
     5e2:	fe 2f       	mov	r31, r30
     5e4:	29 d0       	rcall	.+82     	; 0x638 <__divsf3_pse+0x92>
     5e6:	66 0f       	add	r22, r22
     5e8:	77 1f       	adc	r23, r23
     5ea:	88 1f       	adc	r24, r24
     5ec:	bb 1f       	adc	r27, r27
     5ee:	26 17       	cp	r18, r22
     5f0:	37 07       	cpc	r19, r23
     5f2:	48 07       	cpc	r20, r24
     5f4:	ab 07       	cpc	r26, r27
     5f6:	b0 e8       	ldi	r27, 0x80	; 128
     5f8:	09 f0       	breq	.+2      	; 0x5fc <__divsf3_pse+0x56>
     5fa:	bb 0b       	sbc	r27, r27
     5fc:	80 2d       	mov	r24, r0
     5fe:	bf 01       	movw	r22, r30
     600:	ff 27       	eor	r31, r31
     602:	93 58       	subi	r25, 0x83	; 131
     604:	5f 4f       	sbci	r21, 0xFF	; 255
     606:	3a f0       	brmi	.+14     	; 0x616 <__divsf3_pse+0x70>
     608:	9e 3f       	cpi	r25, 0xFE	; 254
     60a:	51 05       	cpc	r21, r1
     60c:	78 f0       	brcs	.+30     	; 0x62c <__divsf3_pse+0x86>
     60e:	0c 94 b8 03 	jmp	0x770	; 0x770 <__fp_inf>
     612:	0c 94 44 04 	jmp	0x888	; 0x888 <__fp_szero>
     616:	5f 3f       	cpi	r21, 0xFF	; 255
     618:	e4 f3       	brlt	.-8      	; 0x612 <__divsf3_pse+0x6c>
     61a:	98 3e       	cpi	r25, 0xE8	; 232
     61c:	d4 f3       	brlt	.-12     	; 0x612 <__divsf3_pse+0x6c>
     61e:	86 95       	lsr	r24
     620:	77 95       	ror	r23
     622:	67 95       	ror	r22
     624:	b7 95       	ror	r27
     626:	f7 95       	ror	r31
     628:	9f 5f       	subi	r25, 0xFF	; 255
     62a:	c9 f7       	brne	.-14     	; 0x61e <__divsf3_pse+0x78>
     62c:	88 0f       	add	r24, r24
     62e:	91 1d       	adc	r25, r1
     630:	96 95       	lsr	r25
     632:	87 95       	ror	r24
     634:	97 f9       	bld	r25, 7
     636:	08 95       	ret
     638:	e1 e0       	ldi	r30, 0x01	; 1
     63a:	66 0f       	add	r22, r22
     63c:	77 1f       	adc	r23, r23
     63e:	88 1f       	adc	r24, r24
     640:	bb 1f       	adc	r27, r27
     642:	62 17       	cp	r22, r18
     644:	73 07       	cpc	r23, r19
     646:	84 07       	cpc	r24, r20
     648:	ba 07       	cpc	r27, r26
     64a:	20 f0       	brcs	.+8      	; 0x654 <__divsf3_pse+0xae>
     64c:	62 1b       	sub	r22, r18
     64e:	73 0b       	sbc	r23, r19
     650:	84 0b       	sbc	r24, r20
     652:	ba 0b       	sbc	r27, r26
     654:	ee 1f       	adc	r30, r30
     656:	88 f7       	brcc	.-30     	; 0x63a <__divsf3_pse+0x94>
     658:	e0 95       	com	r30
     65a:	08 95       	ret

0000065c <__fixsfsi>:
     65c:	0e 94 35 03 	call	0x66a	; 0x66a <__fixunssfsi>
     660:	68 94       	set
     662:	b1 11       	cpse	r27, r1
     664:	0c 94 44 04 	jmp	0x888	; 0x888 <__fp_szero>
     668:	08 95       	ret

0000066a <__fixunssfsi>:
     66a:	0e 94 11 04 	call	0x822	; 0x822 <__fp_splitA>
     66e:	88 f0       	brcs	.+34     	; 0x692 <__fixunssfsi+0x28>
     670:	9f 57       	subi	r25, 0x7F	; 127
     672:	98 f0       	brcs	.+38     	; 0x69a <__fixunssfsi+0x30>
     674:	b9 2f       	mov	r27, r25
     676:	99 27       	eor	r25, r25
     678:	b7 51       	subi	r27, 0x17	; 23
     67a:	b0 f0       	brcs	.+44     	; 0x6a8 <__fixunssfsi+0x3e>
     67c:	e1 f0       	breq	.+56     	; 0x6b6 <__fixunssfsi+0x4c>
     67e:	66 0f       	add	r22, r22
     680:	77 1f       	adc	r23, r23
     682:	88 1f       	adc	r24, r24
     684:	99 1f       	adc	r25, r25
     686:	1a f0       	brmi	.+6      	; 0x68e <__fixunssfsi+0x24>
     688:	ba 95       	dec	r27
     68a:	c9 f7       	brne	.-14     	; 0x67e <__fixunssfsi+0x14>
     68c:	14 c0       	rjmp	.+40     	; 0x6b6 <__fixunssfsi+0x4c>
     68e:	b1 30       	cpi	r27, 0x01	; 1
     690:	91 f0       	breq	.+36     	; 0x6b6 <__fixunssfsi+0x4c>
     692:	0e 94 43 04 	call	0x886	; 0x886 <__fp_zero>
     696:	b1 e0       	ldi	r27, 0x01	; 1
     698:	08 95       	ret
     69a:	0c 94 43 04 	jmp	0x886	; 0x886 <__fp_zero>
     69e:	67 2f       	mov	r22, r23
     6a0:	78 2f       	mov	r23, r24
     6a2:	88 27       	eor	r24, r24
     6a4:	b8 5f       	subi	r27, 0xF8	; 248
     6a6:	39 f0       	breq	.+14     	; 0x6b6 <__fixunssfsi+0x4c>
     6a8:	b9 3f       	cpi	r27, 0xF9	; 249
     6aa:	cc f3       	brlt	.-14     	; 0x69e <__fixunssfsi+0x34>
     6ac:	86 95       	lsr	r24
     6ae:	77 95       	ror	r23
     6b0:	67 95       	ror	r22
     6b2:	b3 95       	inc	r27
     6b4:	d9 f7       	brne	.-10     	; 0x6ac <__fixunssfsi+0x42>
     6b6:	3e f4       	brtc	.+14     	; 0x6c6 <__fixunssfsi+0x5c>
     6b8:	90 95       	com	r25
     6ba:	80 95       	com	r24
     6bc:	70 95       	com	r23
     6be:	61 95       	neg	r22
     6c0:	7f 4f       	sbci	r23, 0xFF	; 255
     6c2:	8f 4f       	sbci	r24, 0xFF	; 255
     6c4:	9f 4f       	sbci	r25, 0xFF	; 255
     6c6:	08 95       	ret

000006c8 <__floatunsisf>:
     6c8:	e8 94       	clt
     6ca:	09 c0       	rjmp	.+18     	; 0x6de <__floatsisf+0x12>

000006cc <__floatsisf>:
     6cc:	97 fb       	bst	r25, 7
     6ce:	3e f4       	brtc	.+14     	; 0x6de <__floatsisf+0x12>
     6d0:	90 95       	com	r25
     6d2:	80 95       	com	r24
     6d4:	70 95       	com	r23
     6d6:	61 95       	neg	r22
     6d8:	7f 4f       	sbci	r23, 0xFF	; 255
     6da:	8f 4f       	sbci	r24, 0xFF	; 255
     6dc:	9f 4f       	sbci	r25, 0xFF	; 255
     6de:	99 23       	and	r25, r25
     6e0:	a9 f0       	breq	.+42     	; 0x70c <__floatsisf+0x40>
     6e2:	f9 2f       	mov	r31, r25
     6e4:	96 e9       	ldi	r25, 0x96	; 150
     6e6:	bb 27       	eor	r27, r27
     6e8:	93 95       	inc	r25
     6ea:	f6 95       	lsr	r31
     6ec:	87 95       	ror	r24
     6ee:	77 95       	ror	r23
     6f0:	67 95       	ror	r22
     6f2:	b7 95       	ror	r27
     6f4:	f1 11       	cpse	r31, r1
     6f6:	f8 cf       	rjmp	.-16     	; 0x6e8 <__floatsisf+0x1c>
     6f8:	fa f4       	brpl	.+62     	; 0x738 <__floatsisf+0x6c>
     6fa:	bb 0f       	add	r27, r27
     6fc:	11 f4       	brne	.+4      	; 0x702 <__floatsisf+0x36>
     6fe:	60 ff       	sbrs	r22, 0
     700:	1b c0       	rjmp	.+54     	; 0x738 <__floatsisf+0x6c>
     702:	6f 5f       	subi	r22, 0xFF	; 255
     704:	7f 4f       	sbci	r23, 0xFF	; 255
     706:	8f 4f       	sbci	r24, 0xFF	; 255
     708:	9f 4f       	sbci	r25, 0xFF	; 255
     70a:	16 c0       	rjmp	.+44     	; 0x738 <__floatsisf+0x6c>
     70c:	88 23       	and	r24, r24
     70e:	11 f0       	breq	.+4      	; 0x714 <__floatsisf+0x48>
     710:	96 e9       	ldi	r25, 0x96	; 150
     712:	11 c0       	rjmp	.+34     	; 0x736 <__floatsisf+0x6a>
     714:	77 23       	and	r23, r23
     716:	21 f0       	breq	.+8      	; 0x720 <__floatsisf+0x54>
     718:	9e e8       	ldi	r25, 0x8E	; 142
     71a:	87 2f       	mov	r24, r23
     71c:	76 2f       	mov	r23, r22
     71e:	05 c0       	rjmp	.+10     	; 0x72a <__floatsisf+0x5e>
     720:	66 23       	and	r22, r22
     722:	71 f0       	breq	.+28     	; 0x740 <__floatsisf+0x74>
     724:	96 e8       	ldi	r25, 0x86	; 134
     726:	86 2f       	mov	r24, r22
     728:	70 e0       	ldi	r23, 0x00	; 0
     72a:	60 e0       	ldi	r22, 0x00	; 0
     72c:	2a f0       	brmi	.+10     	; 0x738 <__floatsisf+0x6c>
     72e:	9a 95       	dec	r25
     730:	66 0f       	add	r22, r22
     732:	77 1f       	adc	r23, r23
     734:	88 1f       	adc	r24, r24
     736:	da f7       	brpl	.-10     	; 0x72e <__floatsisf+0x62>
     738:	88 0f       	add	r24, r24
     73a:	96 95       	lsr	r25
     73c:	87 95       	ror	r24
     73e:	97 f9       	bld	r25, 7
     740:	08 95       	ret

00000742 <floor>:
     742:	0e 94 2b 04 	call	0x856	; 0x856 <__fp_trunc>
     746:	90 f0       	brcs	.+36     	; 0x76c <floor+0x2a>
     748:	9f 37       	cpi	r25, 0x7F	; 127
     74a:	48 f4       	brcc	.+18     	; 0x75e <floor+0x1c>
     74c:	91 11       	cpse	r25, r1
     74e:	16 f0       	brts	.+4      	; 0x754 <floor+0x12>
     750:	0c 94 44 04 	jmp	0x888	; 0x888 <__fp_szero>
     754:	60 e0       	ldi	r22, 0x00	; 0
     756:	70 e0       	ldi	r23, 0x00	; 0
     758:	80 e8       	ldi	r24, 0x80	; 128
     75a:	9f eb       	ldi	r25, 0xBF	; 191
     75c:	08 95       	ret
     75e:	26 f4       	brtc	.+8      	; 0x768 <floor+0x26>
     760:	1b 16       	cp	r1, r27
     762:	61 1d       	adc	r22, r1
     764:	71 1d       	adc	r23, r1
     766:	81 1d       	adc	r24, r1
     768:	0c 94 be 03 	jmp	0x77c	; 0x77c <__fp_mintl>
     76c:	0c 94 d9 03 	jmp	0x7b2	; 0x7b2 <__fp_mpack>

00000770 <__fp_inf>:
     770:	97 f9       	bld	r25, 7
     772:	9f 67       	ori	r25, 0x7F	; 127
     774:	80 e8       	ldi	r24, 0x80	; 128
     776:	70 e0       	ldi	r23, 0x00	; 0
     778:	60 e0       	ldi	r22, 0x00	; 0
     77a:	08 95       	ret

0000077c <__fp_mintl>:
     77c:	88 23       	and	r24, r24
     77e:	71 f4       	brne	.+28     	; 0x79c <__fp_mintl+0x20>
     780:	77 23       	and	r23, r23
     782:	21 f0       	breq	.+8      	; 0x78c <__fp_mintl+0x10>
     784:	98 50       	subi	r25, 0x08	; 8
     786:	87 2b       	or	r24, r23
     788:	76 2f       	mov	r23, r22
     78a:	07 c0       	rjmp	.+14     	; 0x79a <__fp_mintl+0x1e>
     78c:	66 23       	and	r22, r22
     78e:	11 f4       	brne	.+4      	; 0x794 <__fp_mintl+0x18>
     790:	99 27       	eor	r25, r25
     792:	0d c0       	rjmp	.+26     	; 0x7ae <__fp_mintl+0x32>
     794:	90 51       	subi	r25, 0x10	; 16
     796:	86 2b       	or	r24, r22
     798:	70 e0       	ldi	r23, 0x00	; 0
     79a:	60 e0       	ldi	r22, 0x00	; 0
     79c:	2a f0       	brmi	.+10     	; 0x7a8 <__fp_mintl+0x2c>
     79e:	9a 95       	dec	r25
     7a0:	66 0f       	add	r22, r22
     7a2:	77 1f       	adc	r23, r23
     7a4:	88 1f       	adc	r24, r24
     7a6:	da f7       	brpl	.-10     	; 0x79e <__fp_mintl+0x22>
     7a8:	88 0f       	add	r24, r24
     7aa:	96 95       	lsr	r25
     7ac:	87 95       	ror	r24
     7ae:	97 f9       	bld	r25, 7
     7b0:	08 95       	ret

000007b2 <__fp_mpack>:
     7b2:	9f 3f       	cpi	r25, 0xFF	; 255
     7b4:	31 f0       	breq	.+12     	; 0x7c2 <__fp_mpack_finite+0xc>

000007b6 <__fp_mpack_finite>:
     7b6:	91 50       	subi	r25, 0x01	; 1
     7b8:	20 f4       	brcc	.+8      	; 0x7c2 <__fp_mpack_finite+0xc>
     7ba:	87 95       	ror	r24
     7bc:	77 95       	ror	r23
     7be:	67 95       	ror	r22
     7c0:	b7 95       	ror	r27
     7c2:	88 0f       	add	r24, r24
     7c4:	91 1d       	adc	r25, r1
     7c6:	96 95       	lsr	r25
     7c8:	87 95       	ror	r24
     7ca:	97 f9       	bld	r25, 7
     7cc:	08 95       	ret

000007ce <__fp_nan>:
     7ce:	9f ef       	ldi	r25, 0xFF	; 255
     7d0:	80 ec       	ldi	r24, 0xC0	; 192
     7d2:	08 95       	ret

000007d4 <__fp_pscA>:
     7d4:	00 24       	eor	r0, r0
     7d6:	0a 94       	dec	r0
     7d8:	16 16       	cp	r1, r22
     7da:	17 06       	cpc	r1, r23
     7dc:	18 06       	cpc	r1, r24
     7de:	09 06       	cpc	r0, r25
     7e0:	08 95       	ret

000007e2 <__fp_pscB>:
     7e2:	00 24       	eor	r0, r0
     7e4:	0a 94       	dec	r0
     7e6:	12 16       	cp	r1, r18
     7e8:	13 06       	cpc	r1, r19
     7ea:	14 06       	cpc	r1, r20
     7ec:	05 06       	cpc	r0, r21
     7ee:	08 95       	ret

000007f0 <__fp_round>:
     7f0:	09 2e       	mov	r0, r25
     7f2:	03 94       	inc	r0
     7f4:	00 0c       	add	r0, r0
     7f6:	11 f4       	brne	.+4      	; 0x7fc <__fp_round+0xc>
     7f8:	88 23       	and	r24, r24
     7fa:	52 f0       	brmi	.+20     	; 0x810 <__DATA_REGION_LENGTH__+0x10>
     7fc:	bb 0f       	add	r27, r27
     7fe:	40 f4       	brcc	.+16     	; 0x810 <__DATA_REGION_LENGTH__+0x10>
     800:	bf 2b       	or	r27, r31
     802:	11 f4       	brne	.+4      	; 0x808 <__DATA_REGION_LENGTH__+0x8>
     804:	60 ff       	sbrs	r22, 0
     806:	04 c0       	rjmp	.+8      	; 0x810 <__DATA_REGION_LENGTH__+0x10>
     808:	6f 5f       	subi	r22, 0xFF	; 255
     80a:	7f 4f       	sbci	r23, 0xFF	; 255
     80c:	8f 4f       	sbci	r24, 0xFF	; 255
     80e:	9f 4f       	sbci	r25, 0xFF	; 255
     810:	08 95       	ret

00000812 <__fp_split3>:
     812:	57 fd       	sbrc	r21, 7
     814:	90 58       	subi	r25, 0x80	; 128
     816:	44 0f       	add	r20, r20
     818:	55 1f       	adc	r21, r21
     81a:	59 f0       	breq	.+22     	; 0x832 <__fp_splitA+0x10>
     81c:	5f 3f       	cpi	r21, 0xFF	; 255
     81e:	71 f0       	breq	.+28     	; 0x83c <__fp_splitA+0x1a>
     820:	47 95       	ror	r20

00000822 <__fp_splitA>:
     822:	88 0f       	add	r24, r24
     824:	97 fb       	bst	r25, 7
     826:	99 1f       	adc	r25, r25
     828:	61 f0       	breq	.+24     	; 0x842 <__fp_splitA+0x20>
     82a:	9f 3f       	cpi	r25, 0xFF	; 255
     82c:	79 f0       	breq	.+30     	; 0x84c <__fp_splitA+0x2a>
     82e:	87 95       	ror	r24
     830:	08 95       	ret
     832:	12 16       	cp	r1, r18
     834:	13 06       	cpc	r1, r19
     836:	14 06       	cpc	r1, r20
     838:	55 1f       	adc	r21, r21
     83a:	f2 cf       	rjmp	.-28     	; 0x820 <__fp_split3+0xe>
     83c:	46 95       	lsr	r20
     83e:	f1 df       	rcall	.-30     	; 0x822 <__fp_splitA>
     840:	08 c0       	rjmp	.+16     	; 0x852 <__fp_splitA+0x30>
     842:	16 16       	cp	r1, r22
     844:	17 06       	cpc	r1, r23
     846:	18 06       	cpc	r1, r24
     848:	99 1f       	adc	r25, r25
     84a:	f1 cf       	rjmp	.-30     	; 0x82e <__fp_splitA+0xc>
     84c:	86 95       	lsr	r24
     84e:	71 05       	cpc	r23, r1
     850:	61 05       	cpc	r22, r1
     852:	08 94       	sec
     854:	08 95       	ret

00000856 <__fp_trunc>:
     856:	0e 94 11 04 	call	0x822	; 0x822 <__fp_splitA>
     85a:	a0 f0       	brcs	.+40     	; 0x884 <__fp_trunc+0x2e>
     85c:	be e7       	ldi	r27, 0x7E	; 126
     85e:	b9 17       	cp	r27, r25
     860:	88 f4       	brcc	.+34     	; 0x884 <__fp_trunc+0x2e>
     862:	bb 27       	eor	r27, r27
     864:	9f 38       	cpi	r25, 0x8F	; 143
     866:	60 f4       	brcc	.+24     	; 0x880 <__fp_trunc+0x2a>
     868:	16 16       	cp	r1, r22
     86a:	b1 1d       	adc	r27, r1
     86c:	67 2f       	mov	r22, r23
     86e:	78 2f       	mov	r23, r24
     870:	88 27       	eor	r24, r24
     872:	98 5f       	subi	r25, 0xF8	; 248
     874:	f7 cf       	rjmp	.-18     	; 0x864 <__fp_trunc+0xe>
     876:	86 95       	lsr	r24
     878:	77 95       	ror	r23
     87a:	67 95       	ror	r22
     87c:	b1 1d       	adc	r27, r1
     87e:	93 95       	inc	r25
     880:	96 39       	cpi	r25, 0x96	; 150
     882:	c8 f3       	brcs	.-14     	; 0x876 <__fp_trunc+0x20>
     884:	08 95       	ret

00000886 <__fp_zero>:
     886:	e8 94       	clt

00000888 <__fp_szero>:
     888:	bb 27       	eor	r27, r27
     88a:	66 27       	eor	r22, r22
     88c:	77 27       	eor	r23, r23
     88e:	cb 01       	movw	r24, r22
     890:	97 f9       	bld	r25, 7
     892:	08 95       	ret
     894:	16 f0       	brts	.+4      	; 0x89a <__fp_szero+0x12>
     896:	0c 94 d9 03 	jmp	0x7b2	; 0x7b2 <__fp_mpack>
     89a:	0c 94 e7 03 	jmp	0x7ce	; 0x7ce <__fp_nan>
     89e:	68 94       	set
     8a0:	0c 94 b8 03 	jmp	0x770	; 0x770 <__fp_inf>

000008a4 <log>:
     8a4:	0e 94 11 04 	call	0x822	; 0x822 <__fp_splitA>
     8a8:	a8 f3       	brcs	.-22     	; 0x894 <__fp_szero+0xc>
     8aa:	99 23       	and	r25, r25
     8ac:	c1 f3       	breq	.-16     	; 0x89e <__fp_szero+0x16>
     8ae:	ae f3       	brts	.-22     	; 0x89a <__fp_szero+0x12>
     8b0:	df 93       	push	r29
     8b2:	cf 93       	push	r28
     8b4:	1f 93       	push	r17
     8b6:	0f 93       	push	r16
     8b8:	ff 92       	push	r15
     8ba:	c9 2f       	mov	r28, r25
     8bc:	dd 27       	eor	r29, r29
     8be:	88 23       	and	r24, r24
     8c0:	2a f0       	brmi	.+10     	; 0x8cc <log+0x28>
     8c2:	21 97       	sbiw	r28, 0x01	; 1
     8c4:	66 0f       	add	r22, r22
     8c6:	77 1f       	adc	r23, r23
     8c8:	88 1f       	adc	r24, r24
     8ca:	da f7       	brpl	.-10     	; 0x8c2 <log+0x1e>
     8cc:	20 e0       	ldi	r18, 0x00	; 0
     8ce:	30 e0       	ldi	r19, 0x00	; 0
     8d0:	40 e8       	ldi	r20, 0x80	; 128
     8d2:	5f eb       	ldi	r21, 0xBF	; 191
     8d4:	9f e3       	ldi	r25, 0x3F	; 63
     8d6:	88 39       	cpi	r24, 0x98	; 152
     8d8:	20 f0       	brcs	.+8      	; 0x8e2 <log+0x3e>
     8da:	80 3e       	cpi	r24, 0xE0	; 224
     8dc:	38 f0       	brcs	.+14     	; 0x8ec <log+0x48>
     8de:	21 96       	adiw	r28, 0x01	; 1
     8e0:	8f 77       	andi	r24, 0x7F	; 127
     8e2:	0e 94 50 02 	call	0x4a0	; 0x4a0 <__addsf3>
     8e6:	e8 e6       	ldi	r30, 0x68	; 104
     8e8:	f0 e0       	ldi	r31, 0x00	; 0
     8ea:	04 c0       	rjmp	.+8      	; 0x8f4 <log+0x50>
     8ec:	0e 94 50 02 	call	0x4a0	; 0x4a0 <__addsf3>
     8f0:	e5 e9       	ldi	r30, 0x95	; 149
     8f2:	f0 e0       	ldi	r31, 0x00	; 0
     8f4:	0e 94 2b 05 	call	0xa56	; 0xa56 <__fp_powser>
     8f8:	8b 01       	movw	r16, r22
     8fa:	be 01       	movw	r22, r28
     8fc:	ec 01       	movw	r28, r24
     8fe:	fb 2e       	mov	r15, r27
     900:	6f 57       	subi	r22, 0x7F	; 127
     902:	71 09       	sbc	r23, r1
     904:	75 95       	asr	r23
     906:	77 1f       	adc	r23, r23
     908:	88 0b       	sbc	r24, r24
     90a:	99 0b       	sbc	r25, r25
     90c:	0e 94 66 03 	call	0x6cc	; 0x6cc <__floatsisf>
     910:	28 e1       	ldi	r18, 0x18	; 24
     912:	32 e7       	ldi	r19, 0x72	; 114
     914:	41 e3       	ldi	r20, 0x31	; 49
     916:	5f e3       	ldi	r21, 0x3F	; 63
     918:	0e 94 ad 04 	call	0x95a	; 0x95a <__mulsf3x>
     91c:	af 2d       	mov	r26, r15
     91e:	98 01       	movw	r18, r16
     920:	ae 01       	movw	r20, r28
     922:	ff 90       	pop	r15
     924:	0f 91       	pop	r16
     926:	1f 91       	pop	r17
     928:	cf 91       	pop	r28
     92a:	df 91       	pop	r29
     92c:	0e 94 67 02 	call	0x4ce	; 0x4ce <__addsf3x>
     930:	0c 94 f8 03 	jmp	0x7f0	; 0x7f0 <__fp_round>

00000934 <__mulsf3>:
     934:	0e 94 ad 04 	call	0x95a	; 0x95a <__mulsf3x>
     938:	0c 94 f8 03 	jmp	0x7f0	; 0x7f0 <__fp_round>
     93c:	0e 94 ea 03 	call	0x7d4	; 0x7d4 <__fp_pscA>
     940:	38 f0       	brcs	.+14     	; 0x950 <__mulsf3+0x1c>
     942:	0e 94 f1 03 	call	0x7e2	; 0x7e2 <__fp_pscB>
     946:	20 f0       	brcs	.+8      	; 0x950 <__mulsf3+0x1c>
     948:	95 23       	and	r25, r21
     94a:	11 f0       	breq	.+4      	; 0x950 <__mulsf3+0x1c>
     94c:	0c 94 b8 03 	jmp	0x770	; 0x770 <__fp_inf>
     950:	0c 94 e7 03 	jmp	0x7ce	; 0x7ce <__fp_nan>
     954:	11 24       	eor	r1, r1
     956:	0c 94 44 04 	jmp	0x888	; 0x888 <__fp_szero>

0000095a <__mulsf3x>:
     95a:	0e 94 09 04 	call	0x812	; 0x812 <__fp_split3>
     95e:	70 f3       	brcs	.-36     	; 0x93c <__mulsf3+0x8>

00000960 <__mulsf3_pse>:
     960:	95 9f       	mul	r25, r21
     962:	c1 f3       	breq	.-16     	; 0x954 <__mulsf3+0x20>
     964:	95 0f       	add	r25, r21
     966:	50 e0       	ldi	r21, 0x00	; 0
     968:	55 1f       	adc	r21, r21
     96a:	62 9f       	mul	r22, r18
     96c:	f0 01       	movw	r30, r0
     96e:	72 9f       	mul	r23, r18
     970:	bb 27       	eor	r27, r27
     972:	f0 0d       	add	r31, r0
     974:	b1 1d       	adc	r27, r1
     976:	63 9f       	mul	r22, r19
     978:	aa 27       	eor	r26, r26
     97a:	f0 0d       	add	r31, r0
     97c:	b1 1d       	adc	r27, r1
     97e:	aa 1f       	adc	r26, r26
     980:	64 9f       	mul	r22, r20
     982:	66 27       	eor	r22, r22
     984:	b0 0d       	add	r27, r0
     986:	a1 1d       	adc	r26, r1
     988:	66 1f       	adc	r22, r22
     98a:	82 9f       	mul	r24, r18
     98c:	22 27       	eor	r18, r18
     98e:	b0 0d       	add	r27, r0
     990:	a1 1d       	adc	r26, r1
     992:	62 1f       	adc	r22, r18
     994:	73 9f       	mul	r23, r19
     996:	b0 0d       	add	r27, r0
     998:	a1 1d       	adc	r26, r1
     99a:	62 1f       	adc	r22, r18
     99c:	83 9f       	mul	r24, r19
     99e:	a0 0d       	add	r26, r0
     9a0:	61 1d       	adc	r22, r1
     9a2:	22 1f       	adc	r18, r18
     9a4:	74 9f       	mul	r23, r20
     9a6:	33 27       	eor	r19, r19
     9a8:	a0 0d       	add	r26, r0
     9aa:	61 1d       	adc	r22, r1
     9ac:	23 1f       	adc	r18, r19
     9ae:	84 9f       	mul	r24, r20
     9b0:	60 0d       	add	r22, r0
     9b2:	21 1d       	adc	r18, r1
     9b4:	82 2f       	mov	r24, r18
     9b6:	76 2f       	mov	r23, r22
     9b8:	6a 2f       	mov	r22, r26
     9ba:	11 24       	eor	r1, r1
     9bc:	9f 57       	subi	r25, 0x7F	; 127
     9be:	50 40       	sbci	r21, 0x00	; 0
     9c0:	9a f0       	brmi	.+38     	; 0x9e8 <__mulsf3_pse+0x88>
     9c2:	f1 f0       	breq	.+60     	; 0xa00 <__mulsf3_pse+0xa0>
     9c4:	88 23       	and	r24, r24
     9c6:	4a f0       	brmi	.+18     	; 0x9da <__mulsf3_pse+0x7a>
     9c8:	ee 0f       	add	r30, r30
     9ca:	ff 1f       	adc	r31, r31
     9cc:	bb 1f       	adc	r27, r27
     9ce:	66 1f       	adc	r22, r22
     9d0:	77 1f       	adc	r23, r23
     9d2:	88 1f       	adc	r24, r24
     9d4:	91 50       	subi	r25, 0x01	; 1
     9d6:	50 40       	sbci	r21, 0x00	; 0
     9d8:	a9 f7       	brne	.-22     	; 0x9c4 <__mulsf3_pse+0x64>
     9da:	9e 3f       	cpi	r25, 0xFE	; 254
     9dc:	51 05       	cpc	r21, r1
     9de:	80 f0       	brcs	.+32     	; 0xa00 <__mulsf3_pse+0xa0>
     9e0:	0c 94 b8 03 	jmp	0x770	; 0x770 <__fp_inf>
     9e4:	0c 94 44 04 	jmp	0x888	; 0x888 <__fp_szero>
     9e8:	5f 3f       	cpi	r21, 0xFF	; 255
     9ea:	e4 f3       	brlt	.-8      	; 0x9e4 <__mulsf3_pse+0x84>
     9ec:	98 3e       	cpi	r25, 0xE8	; 232
     9ee:	d4 f3       	brlt	.-12     	; 0x9e4 <__mulsf3_pse+0x84>
     9f0:	86 95       	lsr	r24
     9f2:	77 95       	ror	r23
     9f4:	67 95       	ror	r22
     9f6:	b7 95       	ror	r27
     9f8:	f7 95       	ror	r31
     9fa:	e7 95       	ror	r30
     9fc:	9f 5f       	subi	r25, 0xFF	; 255
     9fe:	c1 f7       	brne	.-16     	; 0x9f0 <__mulsf3_pse+0x90>
     a00:	fe 2b       	or	r31, r30
     a02:	88 0f       	add	r24, r24
     a04:	91 1d       	adc	r25, r1
     a06:	96 95       	lsr	r25
     a08:	87 95       	ror	r24
     a0a:	97 f9       	bld	r25, 7
     a0c:	08 95       	ret

00000a0e <round>:
     a0e:	0e 94 11 04 	call	0x822	; 0x822 <__fp_splitA>
     a12:	e8 f0       	brcs	.+58     	; 0xa4e <round+0x40>
     a14:	9e 37       	cpi	r25, 0x7E	; 126
     a16:	e8 f0       	brcs	.+58     	; 0xa52 <round+0x44>
     a18:	96 39       	cpi	r25, 0x96	; 150
     a1a:	b8 f4       	brcc	.+46     	; 0xa4a <round+0x3c>
     a1c:	9e 38       	cpi	r25, 0x8E	; 142
     a1e:	48 f4       	brcc	.+18     	; 0xa32 <round+0x24>
     a20:	67 2f       	mov	r22, r23
     a22:	78 2f       	mov	r23, r24
     a24:	88 27       	eor	r24, r24
     a26:	98 5f       	subi	r25, 0xF8	; 248
     a28:	f9 cf       	rjmp	.-14     	; 0xa1c <round+0xe>
     a2a:	86 95       	lsr	r24
     a2c:	77 95       	ror	r23
     a2e:	67 95       	ror	r22
     a30:	93 95       	inc	r25
     a32:	95 39       	cpi	r25, 0x95	; 149
     a34:	d0 f3       	brcs	.-12     	; 0xa2a <round+0x1c>
     a36:	b6 2f       	mov	r27, r22
     a38:	b1 70       	andi	r27, 0x01	; 1
     a3a:	6b 0f       	add	r22, r27
     a3c:	71 1d       	adc	r23, r1
     a3e:	81 1d       	adc	r24, r1
     a40:	20 f4       	brcc	.+8      	; 0xa4a <round+0x3c>
     a42:	87 95       	ror	r24
     a44:	77 95       	ror	r23
     a46:	67 95       	ror	r22
     a48:	93 95       	inc	r25
     a4a:	0c 94 be 03 	jmp	0x77c	; 0x77c <__fp_mintl>
     a4e:	0c 94 d9 03 	jmp	0x7b2	; 0x7b2 <__fp_mpack>
     a52:	0c 94 44 04 	jmp	0x888	; 0x888 <__fp_szero>

00000a56 <__fp_powser>:
     a56:	df 93       	push	r29
     a58:	cf 93       	push	r28
     a5a:	1f 93       	push	r17
     a5c:	0f 93       	push	r16
     a5e:	ff 92       	push	r15
     a60:	ef 92       	push	r14
     a62:	df 92       	push	r13
     a64:	7b 01       	movw	r14, r22
     a66:	8c 01       	movw	r16, r24
     a68:	68 94       	set
     a6a:	06 c0       	rjmp	.+12     	; 0xa78 <__fp_powser+0x22>
     a6c:	da 2e       	mov	r13, r26
     a6e:	ef 01       	movw	r28, r30
     a70:	0e 94 ad 04 	call	0x95a	; 0x95a <__mulsf3x>
     a74:	fe 01       	movw	r30, r28
     a76:	e8 94       	clt
     a78:	a5 91       	lpm	r26, Z+
     a7a:	25 91       	lpm	r18, Z+
     a7c:	35 91       	lpm	r19, Z+
     a7e:	45 91       	lpm	r20, Z+
     a80:	55 91       	lpm	r21, Z+
     a82:	a6 f3       	brts	.-24     	; 0xa6c <__fp_powser+0x16>
     a84:	ef 01       	movw	r28, r30
     a86:	0e 94 67 02 	call	0x4ce	; 0x4ce <__addsf3x>
     a8a:	fe 01       	movw	r30, r28
     a8c:	97 01       	movw	r18, r14
     a8e:	a8 01       	movw	r20, r16
     a90:	da 94       	dec	r13
     a92:	69 f7       	brne	.-38     	; 0xa6e <__fp_powser+0x18>
     a94:	df 90       	pop	r13
     a96:	ef 90       	pop	r14
     a98:	ff 90       	pop	r15
     a9a:	0f 91       	pop	r16
     a9c:	1f 91       	pop	r17
     a9e:	cf 91       	pop	r28
     aa0:	df 91       	pop	r29
     aa2:	08 95       	ret

00000aa4 <printf>:
     aa4:	a0 e0       	ldi	r26, 0x00	; 0
     aa6:	b0 e0       	ldi	r27, 0x00	; 0
     aa8:	e8 e5       	ldi	r30, 0x58	; 88
     aaa:	f5 e0       	ldi	r31, 0x05	; 5
     aac:	0c 94 39 08 	jmp	0x1072	; 0x1072 <__prologue_saves__+0x20>
     ab0:	ae 01       	movw	r20, r28
     ab2:	4b 5f       	subi	r20, 0xFB	; 251
     ab4:	5f 4f       	sbci	r21, 0xFF	; 255
     ab6:	fa 01       	movw	r30, r20
     ab8:	61 91       	ld	r22, Z+
     aba:	71 91       	ld	r23, Z+
     abc:	af 01       	movw	r20, r30
     abe:	80 91 3c 01 	lds	r24, 0x013C	; 0x80013c <__iob+0x2>
     ac2:	90 91 3d 01 	lds	r25, 0x013D	; 0x80013d <__iob+0x3>
     ac6:	0e 94 98 05 	call	0xb30	; 0xb30 <vfprintf>
     aca:	e2 e0       	ldi	r30, 0x02	; 2
     acc:	0c 94 55 08 	jmp	0x10aa	; 0x10aa <__epilogue_restores__+0x20>

00000ad0 <puts>:
     ad0:	0f 93       	push	r16
     ad2:	1f 93       	push	r17
     ad4:	cf 93       	push	r28
     ad6:	df 93       	push	r29
     ad8:	e0 91 3c 01 	lds	r30, 0x013C	; 0x80013c <__iob+0x2>
     adc:	f0 91 3d 01 	lds	r31, 0x013D	; 0x80013d <__iob+0x3>
     ae0:	23 81       	ldd	r18, Z+3	; 0x03
     ae2:	21 ff       	sbrs	r18, 1
     ae4:	1b c0       	rjmp	.+54     	; 0xb1c <puts+0x4c>
     ae6:	8c 01       	movw	r16, r24
     ae8:	d0 e0       	ldi	r29, 0x00	; 0
     aea:	c0 e0       	ldi	r28, 0x00	; 0
     aec:	f8 01       	movw	r30, r16
     aee:	81 91       	ld	r24, Z+
     af0:	8f 01       	movw	r16, r30
     af2:	60 91 3c 01 	lds	r22, 0x013C	; 0x80013c <__iob+0x2>
     af6:	70 91 3d 01 	lds	r23, 0x013D	; 0x80013d <__iob+0x3>
     afa:	db 01       	movw	r26, r22
     afc:	18 96       	adiw	r26, 0x08	; 8
     afe:	ed 91       	ld	r30, X+
     b00:	fc 91       	ld	r31, X
     b02:	19 97       	sbiw	r26, 0x09	; 9
     b04:	88 23       	and	r24, r24
     b06:	31 f0       	breq	.+12     	; 0xb14 <puts+0x44>
     b08:	09 95       	icall
     b0a:	89 2b       	or	r24, r25
     b0c:	79 f3       	breq	.-34     	; 0xaec <puts+0x1c>
     b0e:	df ef       	ldi	r29, 0xFF	; 255
     b10:	cf ef       	ldi	r28, 0xFF	; 255
     b12:	ec cf       	rjmp	.-40     	; 0xaec <puts+0x1c>
     b14:	8a e0       	ldi	r24, 0x0A	; 10
     b16:	09 95       	icall
     b18:	89 2b       	or	r24, r25
     b1a:	19 f0       	breq	.+6      	; 0xb22 <puts+0x52>
     b1c:	8f ef       	ldi	r24, 0xFF	; 255
     b1e:	9f ef       	ldi	r25, 0xFF	; 255
     b20:	02 c0       	rjmp	.+4      	; 0xb26 <puts+0x56>
     b22:	8d 2f       	mov	r24, r29
     b24:	9c 2f       	mov	r25, r28
     b26:	df 91       	pop	r29
     b28:	cf 91       	pop	r28
     b2a:	1f 91       	pop	r17
     b2c:	0f 91       	pop	r16
     b2e:	08 95       	ret

00000b30 <vfprintf>:
     b30:	ab e0       	ldi	r26, 0x0B	; 11
     b32:	b0 e0       	ldi	r27, 0x00	; 0
     b34:	ee e9       	ldi	r30, 0x9E	; 158
     b36:	f5 e0       	ldi	r31, 0x05	; 5
     b38:	0c 94 29 08 	jmp	0x1052	; 0x1052 <__prologue_saves__>
     b3c:	6c 01       	movw	r12, r24
     b3e:	7b 01       	movw	r14, r22
     b40:	8a 01       	movw	r16, r20
     b42:	fc 01       	movw	r30, r24
     b44:	17 82       	std	Z+7, r1	; 0x07
     b46:	16 82       	std	Z+6, r1	; 0x06
     b48:	83 81       	ldd	r24, Z+3	; 0x03
     b4a:	81 ff       	sbrs	r24, 1
     b4c:	cc c1       	rjmp	.+920    	; 0xee6 <vfprintf+0x3b6>
     b4e:	ce 01       	movw	r24, r28
     b50:	01 96       	adiw	r24, 0x01	; 1
     b52:	3c 01       	movw	r6, r24
     b54:	f6 01       	movw	r30, r12
     b56:	93 81       	ldd	r25, Z+3	; 0x03
     b58:	f7 01       	movw	r30, r14
     b5a:	93 fd       	sbrc	r25, 3
     b5c:	85 91       	lpm	r24, Z+
     b5e:	93 ff       	sbrs	r25, 3
     b60:	81 91       	ld	r24, Z+
     b62:	7f 01       	movw	r14, r30
     b64:	88 23       	and	r24, r24
     b66:	09 f4       	brne	.+2      	; 0xb6a <vfprintf+0x3a>
     b68:	ba c1       	rjmp	.+884    	; 0xede <vfprintf+0x3ae>
     b6a:	85 32       	cpi	r24, 0x25	; 37
     b6c:	39 f4       	brne	.+14     	; 0xb7c <vfprintf+0x4c>
     b6e:	93 fd       	sbrc	r25, 3
     b70:	85 91       	lpm	r24, Z+
     b72:	93 ff       	sbrs	r25, 3
     b74:	81 91       	ld	r24, Z+
     b76:	7f 01       	movw	r14, r30
     b78:	85 32       	cpi	r24, 0x25	; 37
     b7a:	29 f4       	brne	.+10     	; 0xb86 <vfprintf+0x56>
     b7c:	b6 01       	movw	r22, r12
     b7e:	90 e0       	ldi	r25, 0x00	; 0
     b80:	0e 94 8f 07 	call	0xf1e	; 0xf1e <fputc>
     b84:	e7 cf       	rjmp	.-50     	; 0xb54 <vfprintf+0x24>
     b86:	91 2c       	mov	r9, r1
     b88:	21 2c       	mov	r2, r1
     b8a:	31 2c       	mov	r3, r1
     b8c:	ff e1       	ldi	r31, 0x1F	; 31
     b8e:	f3 15       	cp	r31, r3
     b90:	d8 f0       	brcs	.+54     	; 0xbc8 <vfprintf+0x98>
     b92:	8b 32       	cpi	r24, 0x2B	; 43
     b94:	79 f0       	breq	.+30     	; 0xbb4 <vfprintf+0x84>
     b96:	38 f4       	brcc	.+14     	; 0xba6 <vfprintf+0x76>
     b98:	80 32       	cpi	r24, 0x20	; 32
     b9a:	79 f0       	breq	.+30     	; 0xbba <vfprintf+0x8a>
     b9c:	83 32       	cpi	r24, 0x23	; 35
     b9e:	a1 f4       	brne	.+40     	; 0xbc8 <vfprintf+0x98>
     ba0:	23 2d       	mov	r18, r3
     ba2:	20 61       	ori	r18, 0x10	; 16
     ba4:	1d c0       	rjmp	.+58     	; 0xbe0 <vfprintf+0xb0>
     ba6:	8d 32       	cpi	r24, 0x2D	; 45
     ba8:	61 f0       	breq	.+24     	; 0xbc2 <vfprintf+0x92>
     baa:	80 33       	cpi	r24, 0x30	; 48
     bac:	69 f4       	brne	.+26     	; 0xbc8 <vfprintf+0x98>
     bae:	23 2d       	mov	r18, r3
     bb0:	21 60       	ori	r18, 0x01	; 1
     bb2:	16 c0       	rjmp	.+44     	; 0xbe0 <vfprintf+0xb0>
     bb4:	83 2d       	mov	r24, r3
     bb6:	82 60       	ori	r24, 0x02	; 2
     bb8:	38 2e       	mov	r3, r24
     bba:	e3 2d       	mov	r30, r3
     bbc:	e4 60       	ori	r30, 0x04	; 4
     bbe:	3e 2e       	mov	r3, r30
     bc0:	2a c0       	rjmp	.+84     	; 0xc16 <vfprintf+0xe6>
     bc2:	f3 2d       	mov	r31, r3
     bc4:	f8 60       	ori	r31, 0x08	; 8
     bc6:	1d c0       	rjmp	.+58     	; 0xc02 <vfprintf+0xd2>
     bc8:	37 fc       	sbrc	r3, 7
     bca:	2d c0       	rjmp	.+90     	; 0xc26 <vfprintf+0xf6>
     bcc:	20 ed       	ldi	r18, 0xD0	; 208
     bce:	28 0f       	add	r18, r24
     bd0:	2a 30       	cpi	r18, 0x0A	; 10
     bd2:	40 f0       	brcs	.+16     	; 0xbe4 <vfprintf+0xb4>
     bd4:	8e 32       	cpi	r24, 0x2E	; 46
     bd6:	b9 f4       	brne	.+46     	; 0xc06 <vfprintf+0xd6>
     bd8:	36 fc       	sbrc	r3, 6
     bda:	81 c1       	rjmp	.+770    	; 0xede <vfprintf+0x3ae>
     bdc:	23 2d       	mov	r18, r3
     bde:	20 64       	ori	r18, 0x40	; 64
     be0:	32 2e       	mov	r3, r18
     be2:	19 c0       	rjmp	.+50     	; 0xc16 <vfprintf+0xe6>
     be4:	36 fe       	sbrs	r3, 6
     be6:	06 c0       	rjmp	.+12     	; 0xbf4 <vfprintf+0xc4>
     be8:	8a e0       	ldi	r24, 0x0A	; 10
     bea:	98 9e       	mul	r9, r24
     bec:	20 0d       	add	r18, r0
     bee:	11 24       	eor	r1, r1
     bf0:	92 2e       	mov	r9, r18
     bf2:	11 c0       	rjmp	.+34     	; 0xc16 <vfprintf+0xe6>
     bf4:	ea e0       	ldi	r30, 0x0A	; 10
     bf6:	2e 9e       	mul	r2, r30
     bf8:	20 0d       	add	r18, r0
     bfa:	11 24       	eor	r1, r1
     bfc:	22 2e       	mov	r2, r18
     bfe:	f3 2d       	mov	r31, r3
     c00:	f0 62       	ori	r31, 0x20	; 32
     c02:	3f 2e       	mov	r3, r31
     c04:	08 c0       	rjmp	.+16     	; 0xc16 <vfprintf+0xe6>
     c06:	8c 36       	cpi	r24, 0x6C	; 108
     c08:	21 f4       	brne	.+8      	; 0xc12 <vfprintf+0xe2>
     c0a:	83 2d       	mov	r24, r3
     c0c:	80 68       	ori	r24, 0x80	; 128
     c0e:	38 2e       	mov	r3, r24
     c10:	02 c0       	rjmp	.+4      	; 0xc16 <vfprintf+0xe6>
     c12:	88 36       	cpi	r24, 0x68	; 104
     c14:	41 f4       	brne	.+16     	; 0xc26 <vfprintf+0xf6>
     c16:	f7 01       	movw	r30, r14
     c18:	93 fd       	sbrc	r25, 3
     c1a:	85 91       	lpm	r24, Z+
     c1c:	93 ff       	sbrs	r25, 3
     c1e:	81 91       	ld	r24, Z+
     c20:	7f 01       	movw	r14, r30
     c22:	81 11       	cpse	r24, r1
     c24:	b3 cf       	rjmp	.-154    	; 0xb8c <vfprintf+0x5c>
     c26:	98 2f       	mov	r25, r24
     c28:	9f 7d       	andi	r25, 0xDF	; 223
     c2a:	95 54       	subi	r25, 0x45	; 69
     c2c:	93 30       	cpi	r25, 0x03	; 3
     c2e:	28 f4       	brcc	.+10     	; 0xc3a <vfprintf+0x10a>
     c30:	0c 5f       	subi	r16, 0xFC	; 252
     c32:	1f 4f       	sbci	r17, 0xFF	; 255
     c34:	9f e3       	ldi	r25, 0x3F	; 63
     c36:	99 83       	std	Y+1, r25	; 0x01
     c38:	0d c0       	rjmp	.+26     	; 0xc54 <vfprintf+0x124>
     c3a:	83 36       	cpi	r24, 0x63	; 99
     c3c:	31 f0       	breq	.+12     	; 0xc4a <vfprintf+0x11a>
     c3e:	83 37       	cpi	r24, 0x73	; 115
     c40:	71 f0       	breq	.+28     	; 0xc5e <vfprintf+0x12e>
     c42:	83 35       	cpi	r24, 0x53	; 83
     c44:	09 f0       	breq	.+2      	; 0xc48 <vfprintf+0x118>
     c46:	59 c0       	rjmp	.+178    	; 0xcfa <vfprintf+0x1ca>
     c48:	21 c0       	rjmp	.+66     	; 0xc8c <vfprintf+0x15c>
     c4a:	f8 01       	movw	r30, r16
     c4c:	80 81       	ld	r24, Z
     c4e:	89 83       	std	Y+1, r24	; 0x01
     c50:	0e 5f       	subi	r16, 0xFE	; 254
     c52:	1f 4f       	sbci	r17, 0xFF	; 255
     c54:	88 24       	eor	r8, r8
     c56:	83 94       	inc	r8
     c58:	91 2c       	mov	r9, r1
     c5a:	53 01       	movw	r10, r6
     c5c:	13 c0       	rjmp	.+38     	; 0xc84 <vfprintf+0x154>
     c5e:	28 01       	movw	r4, r16
     c60:	f2 e0       	ldi	r31, 0x02	; 2
     c62:	4f 0e       	add	r4, r31
     c64:	51 1c       	adc	r5, r1
     c66:	f8 01       	movw	r30, r16
     c68:	a0 80       	ld	r10, Z
     c6a:	b1 80       	ldd	r11, Z+1	; 0x01
     c6c:	36 fe       	sbrs	r3, 6
     c6e:	03 c0       	rjmp	.+6      	; 0xc76 <vfprintf+0x146>
     c70:	69 2d       	mov	r22, r9
     c72:	70 e0       	ldi	r23, 0x00	; 0
     c74:	02 c0       	rjmp	.+4      	; 0xc7a <vfprintf+0x14a>
     c76:	6f ef       	ldi	r22, 0xFF	; 255
     c78:	7f ef       	ldi	r23, 0xFF	; 255
     c7a:	c5 01       	movw	r24, r10
     c7c:	0e 94 84 07 	call	0xf08	; 0xf08 <strnlen>
     c80:	4c 01       	movw	r8, r24
     c82:	82 01       	movw	r16, r4
     c84:	f3 2d       	mov	r31, r3
     c86:	ff 77       	andi	r31, 0x7F	; 127
     c88:	3f 2e       	mov	r3, r31
     c8a:	16 c0       	rjmp	.+44     	; 0xcb8 <vfprintf+0x188>
     c8c:	28 01       	movw	r4, r16
     c8e:	22 e0       	ldi	r18, 0x02	; 2
     c90:	42 0e       	add	r4, r18
     c92:	51 1c       	adc	r5, r1
     c94:	f8 01       	movw	r30, r16
     c96:	a0 80       	ld	r10, Z
     c98:	b1 80       	ldd	r11, Z+1	; 0x01
     c9a:	36 fe       	sbrs	r3, 6
     c9c:	03 c0       	rjmp	.+6      	; 0xca4 <vfprintf+0x174>
     c9e:	69 2d       	mov	r22, r9
     ca0:	70 e0       	ldi	r23, 0x00	; 0
     ca2:	02 c0       	rjmp	.+4      	; 0xca8 <vfprintf+0x178>
     ca4:	6f ef       	ldi	r22, 0xFF	; 255
     ca6:	7f ef       	ldi	r23, 0xFF	; 255
     ca8:	c5 01       	movw	r24, r10
     caa:	0e 94 79 07 	call	0xef2	; 0xef2 <strnlen_P>
     cae:	4c 01       	movw	r8, r24
     cb0:	f3 2d       	mov	r31, r3
     cb2:	f0 68       	ori	r31, 0x80	; 128
     cb4:	3f 2e       	mov	r3, r31
     cb6:	82 01       	movw	r16, r4
     cb8:	33 fc       	sbrc	r3, 3
     cba:	1b c0       	rjmp	.+54     	; 0xcf2 <vfprintf+0x1c2>
     cbc:	82 2d       	mov	r24, r2
     cbe:	90 e0       	ldi	r25, 0x00	; 0
     cc0:	88 16       	cp	r8, r24
     cc2:	99 06       	cpc	r9, r25
     cc4:	b0 f4       	brcc	.+44     	; 0xcf2 <vfprintf+0x1c2>
     cc6:	b6 01       	movw	r22, r12
     cc8:	80 e2       	ldi	r24, 0x20	; 32
     cca:	90 e0       	ldi	r25, 0x00	; 0
     ccc:	0e 94 8f 07 	call	0xf1e	; 0xf1e <fputc>
     cd0:	2a 94       	dec	r2
     cd2:	f4 cf       	rjmp	.-24     	; 0xcbc <vfprintf+0x18c>
     cd4:	f5 01       	movw	r30, r10
     cd6:	37 fc       	sbrc	r3, 7
     cd8:	85 91       	lpm	r24, Z+
     cda:	37 fe       	sbrs	r3, 7
     cdc:	81 91       	ld	r24, Z+
     cde:	5f 01       	movw	r10, r30
     ce0:	b6 01       	movw	r22, r12
     ce2:	90 e0       	ldi	r25, 0x00	; 0
     ce4:	0e 94 8f 07 	call	0xf1e	; 0xf1e <fputc>
     ce8:	21 10       	cpse	r2, r1
     cea:	2a 94       	dec	r2
     cec:	21 e0       	ldi	r18, 0x01	; 1
     cee:	82 1a       	sub	r8, r18
     cf0:	91 08       	sbc	r9, r1
     cf2:	81 14       	cp	r8, r1
     cf4:	91 04       	cpc	r9, r1
     cf6:	71 f7       	brne	.-36     	; 0xcd4 <vfprintf+0x1a4>
     cf8:	e8 c0       	rjmp	.+464    	; 0xeca <vfprintf+0x39a>
     cfa:	84 36       	cpi	r24, 0x64	; 100
     cfc:	11 f0       	breq	.+4      	; 0xd02 <vfprintf+0x1d2>
     cfe:	89 36       	cpi	r24, 0x69	; 105
     d00:	41 f5       	brne	.+80     	; 0xd52 <vfprintf+0x222>
     d02:	f8 01       	movw	r30, r16
     d04:	37 fe       	sbrs	r3, 7
     d06:	07 c0       	rjmp	.+14     	; 0xd16 <vfprintf+0x1e6>
     d08:	60 81       	ld	r22, Z
     d0a:	71 81       	ldd	r23, Z+1	; 0x01
     d0c:	82 81       	ldd	r24, Z+2	; 0x02
     d0e:	93 81       	ldd	r25, Z+3	; 0x03
     d10:	0c 5f       	subi	r16, 0xFC	; 252
     d12:	1f 4f       	sbci	r17, 0xFF	; 255
     d14:	08 c0       	rjmp	.+16     	; 0xd26 <vfprintf+0x1f6>
     d16:	60 81       	ld	r22, Z
     d18:	71 81       	ldd	r23, Z+1	; 0x01
     d1a:	07 2e       	mov	r0, r23
     d1c:	00 0c       	add	r0, r0
     d1e:	88 0b       	sbc	r24, r24
     d20:	99 0b       	sbc	r25, r25
     d22:	0e 5f       	subi	r16, 0xFE	; 254
     d24:	1f 4f       	sbci	r17, 0xFF	; 255
     d26:	f3 2d       	mov	r31, r3
     d28:	ff 76       	andi	r31, 0x6F	; 111
     d2a:	3f 2e       	mov	r3, r31
     d2c:	97 ff       	sbrs	r25, 7
     d2e:	09 c0       	rjmp	.+18     	; 0xd42 <vfprintf+0x212>
     d30:	90 95       	com	r25
     d32:	80 95       	com	r24
     d34:	70 95       	com	r23
     d36:	61 95       	neg	r22
     d38:	7f 4f       	sbci	r23, 0xFF	; 255
     d3a:	8f 4f       	sbci	r24, 0xFF	; 255
     d3c:	9f 4f       	sbci	r25, 0xFF	; 255
     d3e:	f0 68       	ori	r31, 0x80	; 128
     d40:	3f 2e       	mov	r3, r31
     d42:	2a e0       	ldi	r18, 0x0A	; 10
     d44:	30 e0       	ldi	r19, 0x00	; 0
     d46:	a3 01       	movw	r20, r6
     d48:	0e 94 cb 07 	call	0xf96	; 0xf96 <__ultoa_invert>
     d4c:	88 2e       	mov	r8, r24
     d4e:	86 18       	sub	r8, r6
     d50:	45 c0       	rjmp	.+138    	; 0xddc <vfprintf+0x2ac>
     d52:	85 37       	cpi	r24, 0x75	; 117
     d54:	31 f4       	brne	.+12     	; 0xd62 <vfprintf+0x232>
     d56:	23 2d       	mov	r18, r3
     d58:	2f 7e       	andi	r18, 0xEF	; 239
     d5a:	b2 2e       	mov	r11, r18
     d5c:	2a e0       	ldi	r18, 0x0A	; 10
     d5e:	30 e0       	ldi	r19, 0x00	; 0
     d60:	25 c0       	rjmp	.+74     	; 0xdac <vfprintf+0x27c>
     d62:	93 2d       	mov	r25, r3
     d64:	99 7f       	andi	r25, 0xF9	; 249
     d66:	b9 2e       	mov	r11, r25
     d68:	8f 36       	cpi	r24, 0x6F	; 111
     d6a:	c1 f0       	breq	.+48     	; 0xd9c <vfprintf+0x26c>
     d6c:	18 f4       	brcc	.+6      	; 0xd74 <vfprintf+0x244>
     d6e:	88 35       	cpi	r24, 0x58	; 88
     d70:	79 f0       	breq	.+30     	; 0xd90 <vfprintf+0x260>
     d72:	b5 c0       	rjmp	.+362    	; 0xede <vfprintf+0x3ae>
     d74:	80 37       	cpi	r24, 0x70	; 112
     d76:	19 f0       	breq	.+6      	; 0xd7e <vfprintf+0x24e>
     d78:	88 37       	cpi	r24, 0x78	; 120
     d7a:	21 f0       	breq	.+8      	; 0xd84 <vfprintf+0x254>
     d7c:	b0 c0       	rjmp	.+352    	; 0xede <vfprintf+0x3ae>
     d7e:	e9 2f       	mov	r30, r25
     d80:	e0 61       	ori	r30, 0x10	; 16
     d82:	be 2e       	mov	r11, r30
     d84:	b4 fe       	sbrs	r11, 4
     d86:	0d c0       	rjmp	.+26     	; 0xda2 <vfprintf+0x272>
     d88:	fb 2d       	mov	r31, r11
     d8a:	f4 60       	ori	r31, 0x04	; 4
     d8c:	bf 2e       	mov	r11, r31
     d8e:	09 c0       	rjmp	.+18     	; 0xda2 <vfprintf+0x272>
     d90:	34 fe       	sbrs	r3, 4
     d92:	0a c0       	rjmp	.+20     	; 0xda8 <vfprintf+0x278>
     d94:	29 2f       	mov	r18, r25
     d96:	26 60       	ori	r18, 0x06	; 6
     d98:	b2 2e       	mov	r11, r18
     d9a:	06 c0       	rjmp	.+12     	; 0xda8 <vfprintf+0x278>
     d9c:	28 e0       	ldi	r18, 0x08	; 8
     d9e:	30 e0       	ldi	r19, 0x00	; 0
     da0:	05 c0       	rjmp	.+10     	; 0xdac <vfprintf+0x27c>
     da2:	20 e1       	ldi	r18, 0x10	; 16
     da4:	30 e0       	ldi	r19, 0x00	; 0
     da6:	02 c0       	rjmp	.+4      	; 0xdac <vfprintf+0x27c>
     da8:	20 e1       	ldi	r18, 0x10	; 16
     daa:	32 e0       	ldi	r19, 0x02	; 2
     dac:	f8 01       	movw	r30, r16
     dae:	b7 fe       	sbrs	r11, 7
     db0:	07 c0       	rjmp	.+14     	; 0xdc0 <vfprintf+0x290>
     db2:	60 81       	ld	r22, Z
     db4:	71 81       	ldd	r23, Z+1	; 0x01
     db6:	82 81       	ldd	r24, Z+2	; 0x02
     db8:	93 81       	ldd	r25, Z+3	; 0x03
     dba:	0c 5f       	subi	r16, 0xFC	; 252
     dbc:	1f 4f       	sbci	r17, 0xFF	; 255
     dbe:	06 c0       	rjmp	.+12     	; 0xdcc <vfprintf+0x29c>
     dc0:	60 81       	ld	r22, Z
     dc2:	71 81       	ldd	r23, Z+1	; 0x01
     dc4:	80 e0       	ldi	r24, 0x00	; 0
     dc6:	90 e0       	ldi	r25, 0x00	; 0
     dc8:	0e 5f       	subi	r16, 0xFE	; 254
     dca:	1f 4f       	sbci	r17, 0xFF	; 255
     dcc:	a3 01       	movw	r20, r6
     dce:	0e 94 cb 07 	call	0xf96	; 0xf96 <__ultoa_invert>
     dd2:	88 2e       	mov	r8, r24
     dd4:	86 18       	sub	r8, r6
     dd6:	fb 2d       	mov	r31, r11
     dd8:	ff 77       	andi	r31, 0x7F	; 127
     dda:	3f 2e       	mov	r3, r31
     ddc:	36 fe       	sbrs	r3, 6
     dde:	0d c0       	rjmp	.+26     	; 0xdfa <vfprintf+0x2ca>
     de0:	23 2d       	mov	r18, r3
     de2:	2e 7f       	andi	r18, 0xFE	; 254
     de4:	a2 2e       	mov	r10, r18
     de6:	89 14       	cp	r8, r9
     de8:	58 f4       	brcc	.+22     	; 0xe00 <vfprintf+0x2d0>
     dea:	34 fe       	sbrs	r3, 4
     dec:	0b c0       	rjmp	.+22     	; 0xe04 <vfprintf+0x2d4>
     dee:	32 fc       	sbrc	r3, 2
     df0:	09 c0       	rjmp	.+18     	; 0xe04 <vfprintf+0x2d4>
     df2:	83 2d       	mov	r24, r3
     df4:	8e 7e       	andi	r24, 0xEE	; 238
     df6:	a8 2e       	mov	r10, r24
     df8:	05 c0       	rjmp	.+10     	; 0xe04 <vfprintf+0x2d4>
     dfa:	b8 2c       	mov	r11, r8
     dfc:	a3 2c       	mov	r10, r3
     dfe:	03 c0       	rjmp	.+6      	; 0xe06 <vfprintf+0x2d6>
     e00:	b8 2c       	mov	r11, r8
     e02:	01 c0       	rjmp	.+2      	; 0xe06 <vfprintf+0x2d6>
     e04:	b9 2c       	mov	r11, r9
     e06:	a4 fe       	sbrs	r10, 4
     e08:	0f c0       	rjmp	.+30     	; 0xe28 <vfprintf+0x2f8>
     e0a:	fe 01       	movw	r30, r28
     e0c:	e8 0d       	add	r30, r8
     e0e:	f1 1d       	adc	r31, r1
     e10:	80 81       	ld	r24, Z
     e12:	80 33       	cpi	r24, 0x30	; 48
     e14:	21 f4       	brne	.+8      	; 0xe1e <vfprintf+0x2ee>
     e16:	9a 2d       	mov	r25, r10
     e18:	99 7e       	andi	r25, 0xE9	; 233
     e1a:	a9 2e       	mov	r10, r25
     e1c:	09 c0       	rjmp	.+18     	; 0xe30 <vfprintf+0x300>
     e1e:	a2 fe       	sbrs	r10, 2
     e20:	06 c0       	rjmp	.+12     	; 0xe2e <vfprintf+0x2fe>
     e22:	b3 94       	inc	r11
     e24:	b3 94       	inc	r11
     e26:	04 c0       	rjmp	.+8      	; 0xe30 <vfprintf+0x300>
     e28:	8a 2d       	mov	r24, r10
     e2a:	86 78       	andi	r24, 0x86	; 134
     e2c:	09 f0       	breq	.+2      	; 0xe30 <vfprintf+0x300>
     e2e:	b3 94       	inc	r11
     e30:	a3 fc       	sbrc	r10, 3
     e32:	11 c0       	rjmp	.+34     	; 0xe56 <vfprintf+0x326>
     e34:	a0 fe       	sbrs	r10, 0
     e36:	06 c0       	rjmp	.+12     	; 0xe44 <vfprintf+0x314>
     e38:	b2 14       	cp	r11, r2
     e3a:	88 f4       	brcc	.+34     	; 0xe5e <vfprintf+0x32e>
     e3c:	28 0c       	add	r2, r8
     e3e:	92 2c       	mov	r9, r2
     e40:	9b 18       	sub	r9, r11
     e42:	0e c0       	rjmp	.+28     	; 0xe60 <vfprintf+0x330>
     e44:	b2 14       	cp	r11, r2
     e46:	60 f4       	brcc	.+24     	; 0xe60 <vfprintf+0x330>
     e48:	b6 01       	movw	r22, r12
     e4a:	80 e2       	ldi	r24, 0x20	; 32
     e4c:	90 e0       	ldi	r25, 0x00	; 0
     e4e:	0e 94 8f 07 	call	0xf1e	; 0xf1e <fputc>
     e52:	b3 94       	inc	r11
     e54:	f7 cf       	rjmp	.-18     	; 0xe44 <vfprintf+0x314>
     e56:	b2 14       	cp	r11, r2
     e58:	18 f4       	brcc	.+6      	; 0xe60 <vfprintf+0x330>
     e5a:	2b 18       	sub	r2, r11
     e5c:	02 c0       	rjmp	.+4      	; 0xe62 <vfprintf+0x332>
     e5e:	98 2c       	mov	r9, r8
     e60:	21 2c       	mov	r2, r1
     e62:	a4 fe       	sbrs	r10, 4
     e64:	10 c0       	rjmp	.+32     	; 0xe86 <vfprintf+0x356>
     e66:	b6 01       	movw	r22, r12
     e68:	80 e3       	ldi	r24, 0x30	; 48
     e6a:	90 e0       	ldi	r25, 0x00	; 0
     e6c:	0e 94 8f 07 	call	0xf1e	; 0xf1e <fputc>
     e70:	a2 fe       	sbrs	r10, 2
     e72:	17 c0       	rjmp	.+46     	; 0xea2 <vfprintf+0x372>
     e74:	a1 fc       	sbrc	r10, 1
     e76:	03 c0       	rjmp	.+6      	; 0xe7e <vfprintf+0x34e>
     e78:	88 e7       	ldi	r24, 0x78	; 120
     e7a:	90 e0       	ldi	r25, 0x00	; 0
     e7c:	02 c0       	rjmp	.+4      	; 0xe82 <vfprintf+0x352>
     e7e:	88 e5       	ldi	r24, 0x58	; 88
     e80:	90 e0       	ldi	r25, 0x00	; 0
     e82:	b6 01       	movw	r22, r12
     e84:	0c c0       	rjmp	.+24     	; 0xe9e <vfprintf+0x36e>
     e86:	8a 2d       	mov	r24, r10
     e88:	86 78       	andi	r24, 0x86	; 134
     e8a:	59 f0       	breq	.+22     	; 0xea2 <vfprintf+0x372>
     e8c:	a1 fe       	sbrs	r10, 1
     e8e:	02 c0       	rjmp	.+4      	; 0xe94 <vfprintf+0x364>
     e90:	8b e2       	ldi	r24, 0x2B	; 43
     e92:	01 c0       	rjmp	.+2      	; 0xe96 <vfprintf+0x366>
     e94:	80 e2       	ldi	r24, 0x20	; 32
     e96:	a7 fc       	sbrc	r10, 7
     e98:	8d e2       	ldi	r24, 0x2D	; 45
     e9a:	b6 01       	movw	r22, r12
     e9c:	90 e0       	ldi	r25, 0x00	; 0
     e9e:	0e 94 8f 07 	call	0xf1e	; 0xf1e <fputc>
     ea2:	89 14       	cp	r8, r9
     ea4:	38 f4       	brcc	.+14     	; 0xeb4 <vfprintf+0x384>
     ea6:	b6 01       	movw	r22, r12
     ea8:	80 e3       	ldi	r24, 0x30	; 48
     eaa:	90 e0       	ldi	r25, 0x00	; 0
     eac:	0e 94 8f 07 	call	0xf1e	; 0xf1e <fputc>
     eb0:	9a 94       	dec	r9
     eb2:	f7 cf       	rjmp	.-18     	; 0xea2 <vfprintf+0x372>
     eb4:	8a 94       	dec	r8
     eb6:	f3 01       	movw	r30, r6
     eb8:	e8 0d       	add	r30, r8
     eba:	f1 1d       	adc	r31, r1
     ebc:	80 81       	ld	r24, Z
     ebe:	b6 01       	movw	r22, r12
     ec0:	90 e0       	ldi	r25, 0x00	; 0
     ec2:	0e 94 8f 07 	call	0xf1e	; 0xf1e <fputc>
     ec6:	81 10       	cpse	r8, r1
     ec8:	f5 cf       	rjmp	.-22     	; 0xeb4 <vfprintf+0x384>
     eca:	22 20       	and	r2, r2
     ecc:	09 f4       	brne	.+2      	; 0xed0 <vfprintf+0x3a0>
     ece:	42 ce       	rjmp	.-892    	; 0xb54 <vfprintf+0x24>
     ed0:	b6 01       	movw	r22, r12
     ed2:	80 e2       	ldi	r24, 0x20	; 32
     ed4:	90 e0       	ldi	r25, 0x00	; 0
     ed6:	0e 94 8f 07 	call	0xf1e	; 0xf1e <fputc>
     eda:	2a 94       	dec	r2
     edc:	f6 cf       	rjmp	.-20     	; 0xeca <vfprintf+0x39a>
     ede:	f6 01       	movw	r30, r12
     ee0:	86 81       	ldd	r24, Z+6	; 0x06
     ee2:	97 81       	ldd	r25, Z+7	; 0x07
     ee4:	02 c0       	rjmp	.+4      	; 0xeea <vfprintf+0x3ba>
     ee6:	8f ef       	ldi	r24, 0xFF	; 255
     ee8:	9f ef       	ldi	r25, 0xFF	; 255
     eea:	2b 96       	adiw	r28, 0x0b	; 11
     eec:	e2 e1       	ldi	r30, 0x12	; 18
     eee:	0c 94 45 08 	jmp	0x108a	; 0x108a <__epilogue_restores__>

00000ef2 <strnlen_P>:
     ef2:	fc 01       	movw	r30, r24
     ef4:	05 90       	lpm	r0, Z+
     ef6:	61 50       	subi	r22, 0x01	; 1
     ef8:	70 40       	sbci	r23, 0x00	; 0
     efa:	01 10       	cpse	r0, r1
     efc:	d8 f7       	brcc	.-10     	; 0xef4 <strnlen_P+0x2>
     efe:	80 95       	com	r24
     f00:	90 95       	com	r25
     f02:	8e 0f       	add	r24, r30
     f04:	9f 1f       	adc	r25, r31
     f06:	08 95       	ret

00000f08 <strnlen>:
     f08:	fc 01       	movw	r30, r24
     f0a:	61 50       	subi	r22, 0x01	; 1
     f0c:	70 40       	sbci	r23, 0x00	; 0
     f0e:	01 90       	ld	r0, Z+
     f10:	01 10       	cpse	r0, r1
     f12:	d8 f7       	brcc	.-10     	; 0xf0a <strnlen+0x2>
     f14:	80 95       	com	r24
     f16:	90 95       	com	r25
     f18:	8e 0f       	add	r24, r30
     f1a:	9f 1f       	adc	r25, r31
     f1c:	08 95       	ret

00000f1e <fputc>:
     f1e:	0f 93       	push	r16
     f20:	1f 93       	push	r17
     f22:	cf 93       	push	r28
     f24:	df 93       	push	r29
     f26:	fb 01       	movw	r30, r22
     f28:	23 81       	ldd	r18, Z+3	; 0x03
     f2a:	21 fd       	sbrc	r18, 1
     f2c:	03 c0       	rjmp	.+6      	; 0xf34 <fputc+0x16>
     f2e:	8f ef       	ldi	r24, 0xFF	; 255
     f30:	9f ef       	ldi	r25, 0xFF	; 255
     f32:	2c c0       	rjmp	.+88     	; 0xf8c <fputc+0x6e>
     f34:	22 ff       	sbrs	r18, 2
     f36:	16 c0       	rjmp	.+44     	; 0xf64 <fputc+0x46>
     f38:	46 81       	ldd	r20, Z+6	; 0x06
     f3a:	57 81       	ldd	r21, Z+7	; 0x07
     f3c:	24 81       	ldd	r18, Z+4	; 0x04
     f3e:	35 81       	ldd	r19, Z+5	; 0x05
     f40:	42 17       	cp	r20, r18
     f42:	53 07       	cpc	r21, r19
     f44:	44 f4       	brge	.+16     	; 0xf56 <fputc+0x38>
     f46:	a0 81       	ld	r26, Z
     f48:	b1 81       	ldd	r27, Z+1	; 0x01
     f4a:	9d 01       	movw	r18, r26
     f4c:	2f 5f       	subi	r18, 0xFF	; 255
     f4e:	3f 4f       	sbci	r19, 0xFF	; 255
     f50:	31 83       	std	Z+1, r19	; 0x01
     f52:	20 83       	st	Z, r18
     f54:	8c 93       	st	X, r24
     f56:	26 81       	ldd	r18, Z+6	; 0x06
     f58:	37 81       	ldd	r19, Z+7	; 0x07
     f5a:	2f 5f       	subi	r18, 0xFF	; 255
     f5c:	3f 4f       	sbci	r19, 0xFF	; 255
     f5e:	37 83       	std	Z+7, r19	; 0x07
     f60:	26 83       	std	Z+6, r18	; 0x06
     f62:	14 c0       	rjmp	.+40     	; 0xf8c <fputc+0x6e>
     f64:	8b 01       	movw	r16, r22
     f66:	ec 01       	movw	r28, r24
     f68:	fb 01       	movw	r30, r22
     f6a:	00 84       	ldd	r0, Z+8	; 0x08
     f6c:	f1 85       	ldd	r31, Z+9	; 0x09
     f6e:	e0 2d       	mov	r30, r0
     f70:	09 95       	icall
     f72:	89 2b       	or	r24, r25
     f74:	e1 f6       	brne	.-72     	; 0xf2e <fputc+0x10>
     f76:	d8 01       	movw	r26, r16
     f78:	16 96       	adiw	r26, 0x06	; 6
     f7a:	8d 91       	ld	r24, X+
     f7c:	9c 91       	ld	r25, X
     f7e:	17 97       	sbiw	r26, 0x07	; 7
     f80:	01 96       	adiw	r24, 0x01	; 1
     f82:	17 96       	adiw	r26, 0x07	; 7
     f84:	9c 93       	st	X, r25
     f86:	8e 93       	st	-X, r24
     f88:	16 97       	sbiw	r26, 0x06	; 6
     f8a:	ce 01       	movw	r24, r28
     f8c:	df 91       	pop	r29
     f8e:	cf 91       	pop	r28
     f90:	1f 91       	pop	r17
     f92:	0f 91       	pop	r16
     f94:	08 95       	ret

00000f96 <__ultoa_invert>:
     f96:	fa 01       	movw	r30, r20
     f98:	aa 27       	eor	r26, r26
     f9a:	28 30       	cpi	r18, 0x08	; 8
     f9c:	51 f1       	breq	.+84     	; 0xff2 <__ultoa_invert+0x5c>
     f9e:	20 31       	cpi	r18, 0x10	; 16
     fa0:	81 f1       	breq	.+96     	; 0x1002 <__ultoa_invert+0x6c>
     fa2:	e8 94       	clt
     fa4:	6f 93       	push	r22
     fa6:	6e 7f       	andi	r22, 0xFE	; 254
     fa8:	6e 5f       	subi	r22, 0xFE	; 254
     faa:	7f 4f       	sbci	r23, 0xFF	; 255
     fac:	8f 4f       	sbci	r24, 0xFF	; 255
     fae:	9f 4f       	sbci	r25, 0xFF	; 255
     fb0:	af 4f       	sbci	r26, 0xFF	; 255
     fb2:	b1 e0       	ldi	r27, 0x01	; 1
     fb4:	3e d0       	rcall	.+124    	; 0x1032 <__ultoa_invert+0x9c>
     fb6:	b4 e0       	ldi	r27, 0x04	; 4
     fb8:	3c d0       	rcall	.+120    	; 0x1032 <__ultoa_invert+0x9c>
     fba:	67 0f       	add	r22, r23
     fbc:	78 1f       	adc	r23, r24
     fbe:	89 1f       	adc	r24, r25
     fc0:	9a 1f       	adc	r25, r26
     fc2:	a1 1d       	adc	r26, r1
     fc4:	68 0f       	add	r22, r24
     fc6:	79 1f       	adc	r23, r25
     fc8:	8a 1f       	adc	r24, r26
     fca:	91 1d       	adc	r25, r1
     fcc:	a1 1d       	adc	r26, r1
     fce:	6a 0f       	add	r22, r26
     fd0:	71 1d       	adc	r23, r1
     fd2:	81 1d       	adc	r24, r1
     fd4:	91 1d       	adc	r25, r1
     fd6:	a1 1d       	adc	r26, r1
     fd8:	20 d0       	rcall	.+64     	; 0x101a <__ultoa_invert+0x84>
     fda:	09 f4       	brne	.+2      	; 0xfde <__ultoa_invert+0x48>
     fdc:	68 94       	set
     fde:	3f 91       	pop	r19
     fe0:	2a e0       	ldi	r18, 0x0A	; 10
     fe2:	26 9f       	mul	r18, r22
     fe4:	11 24       	eor	r1, r1
     fe6:	30 19       	sub	r19, r0
     fe8:	30 5d       	subi	r19, 0xD0	; 208
     fea:	31 93       	st	Z+, r19
     fec:	de f6       	brtc	.-74     	; 0xfa4 <__ultoa_invert+0xe>
     fee:	cf 01       	movw	r24, r30
     ff0:	08 95       	ret
     ff2:	46 2f       	mov	r20, r22
     ff4:	47 70       	andi	r20, 0x07	; 7
     ff6:	40 5d       	subi	r20, 0xD0	; 208
     ff8:	41 93       	st	Z+, r20
     ffa:	b3 e0       	ldi	r27, 0x03	; 3
     ffc:	0f d0       	rcall	.+30     	; 0x101c <__ultoa_invert+0x86>
     ffe:	c9 f7       	brne	.-14     	; 0xff2 <__ultoa_invert+0x5c>
    1000:	f6 cf       	rjmp	.-20     	; 0xfee <__ultoa_invert+0x58>
    1002:	46 2f       	mov	r20, r22
    1004:	4f 70       	andi	r20, 0x0F	; 15
    1006:	40 5d       	subi	r20, 0xD0	; 208
    1008:	4a 33       	cpi	r20, 0x3A	; 58
    100a:	18 f0       	brcs	.+6      	; 0x1012 <__ultoa_invert+0x7c>
    100c:	49 5d       	subi	r20, 0xD9	; 217
    100e:	31 fd       	sbrc	r19, 1
    1010:	40 52       	subi	r20, 0x20	; 32
    1012:	41 93       	st	Z+, r20
    1014:	02 d0       	rcall	.+4      	; 0x101a <__ultoa_invert+0x84>
    1016:	a9 f7       	brne	.-22     	; 0x1002 <__ultoa_invert+0x6c>
    1018:	ea cf       	rjmp	.-44     	; 0xfee <__ultoa_invert+0x58>
    101a:	b4 e0       	ldi	r27, 0x04	; 4
    101c:	a6 95       	lsr	r26
    101e:	97 95       	ror	r25
    1020:	87 95       	ror	r24
    1022:	77 95       	ror	r23
    1024:	67 95       	ror	r22
    1026:	ba 95       	dec	r27
    1028:	c9 f7       	brne	.-14     	; 0x101c <__ultoa_invert+0x86>
    102a:	00 97       	sbiw	r24, 0x00	; 0
    102c:	61 05       	cpc	r22, r1
    102e:	71 05       	cpc	r23, r1
    1030:	08 95       	ret
    1032:	9b 01       	movw	r18, r22
    1034:	ac 01       	movw	r20, r24
    1036:	0a 2e       	mov	r0, r26
    1038:	06 94       	lsr	r0
    103a:	57 95       	ror	r21
    103c:	47 95       	ror	r20
    103e:	37 95       	ror	r19
    1040:	27 95       	ror	r18
    1042:	ba 95       	dec	r27
    1044:	c9 f7       	brne	.-14     	; 0x1038 <__ultoa_invert+0xa2>
    1046:	62 0f       	add	r22, r18
    1048:	73 1f       	adc	r23, r19
    104a:	84 1f       	adc	r24, r20
    104c:	95 1f       	adc	r25, r21
    104e:	a0 1d       	adc	r26, r0
    1050:	08 95       	ret

00001052 <__prologue_saves__>:
    1052:	2f 92       	push	r2
    1054:	3f 92       	push	r3
    1056:	4f 92       	push	r4
    1058:	5f 92       	push	r5
    105a:	6f 92       	push	r6
    105c:	7f 92       	push	r7
    105e:	8f 92       	push	r8
    1060:	9f 92       	push	r9
    1062:	af 92       	push	r10
    1064:	bf 92       	push	r11
    1066:	cf 92       	push	r12
    1068:	df 92       	push	r13
    106a:	ef 92       	push	r14
    106c:	ff 92       	push	r15
    106e:	0f 93       	push	r16
    1070:	1f 93       	push	r17
    1072:	cf 93       	push	r28
    1074:	df 93       	push	r29
    1076:	cd b7       	in	r28, 0x3d	; 61
    1078:	de b7       	in	r29, 0x3e	; 62
    107a:	ca 1b       	sub	r28, r26
    107c:	db 0b       	sbc	r29, r27
    107e:	0f b6       	in	r0, 0x3f	; 63
    1080:	f8 94       	cli
    1082:	de bf       	out	0x3e, r29	; 62
    1084:	0f be       	out	0x3f, r0	; 63
    1086:	cd bf       	out	0x3d, r28	; 61
    1088:	09 94       	ijmp

0000108a <__epilogue_restores__>:
    108a:	2a 88       	ldd	r2, Y+18	; 0x12
    108c:	39 88       	ldd	r3, Y+17	; 0x11
    108e:	48 88       	ldd	r4, Y+16	; 0x10
    1090:	5f 84       	ldd	r5, Y+15	; 0x0f
    1092:	6e 84       	ldd	r6, Y+14	; 0x0e
    1094:	7d 84       	ldd	r7, Y+13	; 0x0d
    1096:	8c 84       	ldd	r8, Y+12	; 0x0c
    1098:	9b 84       	ldd	r9, Y+11	; 0x0b
    109a:	aa 84       	ldd	r10, Y+10	; 0x0a
    109c:	b9 84       	ldd	r11, Y+9	; 0x09
    109e:	c8 84       	ldd	r12, Y+8	; 0x08
    10a0:	df 80       	ldd	r13, Y+7	; 0x07
    10a2:	ee 80       	ldd	r14, Y+6	; 0x06
    10a4:	fd 80       	ldd	r15, Y+5	; 0x05
    10a6:	0c 81       	ldd	r16, Y+4	; 0x04
    10a8:	1b 81       	ldd	r17, Y+3	; 0x03
    10aa:	aa 81       	ldd	r26, Y+2	; 0x02
    10ac:	b9 81       	ldd	r27, Y+1	; 0x01
    10ae:	ce 0f       	add	r28, r30
    10b0:	d1 1d       	adc	r29, r1
    10b2:	0f b6       	in	r0, 0x3f	; 63
    10b4:	f8 94       	cli
    10b6:	de bf       	out	0x3e, r29	; 62
    10b8:	0f be       	out	0x3f, r0	; 63
    10ba:	cd bf       	out	0x3d, r28	; 61
    10bc:	ed 01       	movw	r28, r26
    10be:	08 95       	ret

000010c0 <_exit>:
    10c0:	f8 94       	cli

000010c2 <__stop_program>:
    10c2:	ff cf       	rjmp	.-2      	; 0x10c2 <__stop_program>
