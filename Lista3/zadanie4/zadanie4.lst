
zadanie4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000010  00800100  0000103e  000010d2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000103e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000014  00800110  00800110  000010e2  2**0
                  ALLOC
  3 .stab         000008a0  00000000  00000000  000010e4  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000ec0  00000000  00000000  00001984  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000011  00000000  00000000  00002844  2**0
                  CONTENTS, READONLY
  6 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002858  2**2
                  CONTENTS, READONLY
  7 .debug_info   000005f4  00000000  00000000  00002898  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000005a2  00000000  00000000  00002e8c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000001a  00000000  00000000  0000342e  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000208  00000000  00000000  00003448  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 61 00 	jmp	0xc2	; 0xc2 <__ctors_end>
       4:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
       8:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
       c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      10:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      14:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      18:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      1c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      20:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      24:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      28:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      2c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      30:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      34:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      38:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      3c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      40:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      44:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      48:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      4c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      50:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      54:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      58:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      5c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      60:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      64:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      68:	08 00       	.word	0x0008	; ????
      6a:	00 00       	nop
      6c:	be 92       	st	-X, r11
      6e:	24 49       	sbci	r18, 0x94	; 148
      70:	12 3e       	cpi	r17, 0xE2	; 226
      72:	ab aa       	std	Y+51, r10	; 0x33
      74:	aa 2a       	or	r10, r26
      76:	be cd       	rjmp	.-1156   	; 0xfffffbf4 <__eeprom_end+0xff7efbf4>
      78:	cc cc       	rjmp	.-1640   	; 0xfffffa12 <__eeprom_end+0xff7efa12>
      7a:	4c 3e       	cpi	r20, 0xEC	; 236
      7c:	00 00       	nop
      7e:	00 80       	ld	r0, Z
      80:	be ab       	std	Y+54, r27	; 0x36
      82:	aa aa       	std	Y+50, r10	; 0x32
      84:	aa 3e       	cpi	r26, 0xEA	; 234
      86:	00 00       	nop
      88:	00 00       	nop
      8a:	bf 00       	.word	0x00bf	; ????
      8c:	00 00       	nop
      8e:	80 3f       	cpi	r24, 0xF0	; 240
      90:	00 00       	nop
      92:	00 00       	nop
      94:	00 08       	sbc	r0, r0
      96:	41 78       	andi	r20, 0x81	; 129
      98:	d3 bb       	out	0x13, r29	; 19
      9a:	43 87       	std	Z+11, r20	; 0x0b
      9c:	d1 13       	cpse	r29, r17
      9e:	3d 19       	sub	r19, r13
      a0:	0e 3c       	cpi	r16, 0xCE	; 206
      a2:	c3 bd       	out	0x23, r28	; 35
      a4:	42 82       	std	Z+2, r4	; 0x02
      a6:	ad 2b       	or	r26, r29
      a8:	3e 68       	ori	r19, 0x8E	; 142
      aa:	ec 82       	std	Y+4, r14	; 0x04
      ac:	76 be       	out	0x36, r7	; 54
      ae:	d9 8f       	std	Y+25, r29	; 0x19
      b0:	e1 a9       	ldd	r30, Z+49	; 0x31
      b2:	3e 4c       	sbci	r19, 0xCE	; 206
      b4:	80 ef       	ldi	r24, 0xF0	; 240
      b6:	ff be       	out	0x3f, r15	; 63
      b8:	01 c4       	rjmp	.+2050   	; 0x8bc <__mulsf3+0xe>
      ba:	ff 7f       	andi	r31, 0xFF	; 255
      bc:	3f 00       	.word	0x003f	; ????
      be:	00 00       	nop
	...

000000c2 <__ctors_end>:
      c2:	11 24       	eor	r1, r1
      c4:	1f be       	out	0x3f, r1	; 63
      c6:	cf ef       	ldi	r28, 0xFF	; 255
      c8:	d8 e0       	ldi	r29, 0x08	; 8
      ca:	de bf       	out	0x3e, r29	; 62
      cc:	cd bf       	out	0x3d, r28	; 61

000000ce <__do_copy_data>:
      ce:	11 e0       	ldi	r17, 0x01	; 1
      d0:	a0 e0       	ldi	r26, 0x00	; 0
      d2:	b1 e0       	ldi	r27, 0x01	; 1
      d4:	ee e3       	ldi	r30, 0x3E	; 62
      d6:	f0 e1       	ldi	r31, 0x10	; 16
      d8:	02 c0       	rjmp	.+4      	; 0xde <__do_copy_data+0x10>
      da:	05 90       	lpm	r0, Z+
      dc:	0d 92       	st	X+, r0
      de:	a0 31       	cpi	r26, 0x10	; 16
      e0:	b1 07       	cpc	r27, r17
      e2:	d9 f7       	brne	.-10     	; 0xda <__do_copy_data+0xc>

000000e4 <__do_clear_bss>:
      e4:	21 e0       	ldi	r18, 0x01	; 1
      e6:	a0 e1       	ldi	r26, 0x10	; 16
      e8:	b1 e0       	ldi	r27, 0x01	; 1
      ea:	01 c0       	rjmp	.+2      	; 0xee <.do_clear_bss_start>

000000ec <.do_clear_bss_loop>:
      ec:	1d 92       	st	X+, r1

000000ee <.do_clear_bss_start>:
      ee:	a4 32       	cpi	r26, 0x24	; 36
      f0:	b2 07       	cpc	r27, r18
      f2:	e1 f7       	brne	.-8      	; 0xec <.do_clear_bss_loop>
      f4:	0e 94 a0 00 	call	0x140	; 0x140 <main>
      f8:	0c 94 1d 08 	jmp	0x103a	; 0x103a <_exit>

000000fc <__bad_interrupt>:
      fc:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000100 <uart_transmit>:

// transmisja jednego znaku
int uart_transmit(char data, FILE *stream)
{
  // czekaj aż transmiter gotowy
  while(!(UCSR0A & _BV(UDRE0)));
     100:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
     104:	95 ff       	sbrs	r25, 5
     106:	fc cf       	rjmp	.-8      	; 0x100 <uart_transmit>
  UDR0 = data;
     108:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
  return 0;
}
     10c:	80 e0       	ldi	r24, 0x00	; 0
     10e:	90 e0       	ldi	r25, 0x00	; 0
     110:	08 95       	ret

00000112 <uart_receive>:

// odczyt jednego znaku
int uart_receive(FILE *stream)
{
  // czekaj aż znak dostępny
  while (!(UCSR0A & _BV(RXC0)));
     112:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
     116:	87 ff       	sbrs	r24, 7
     118:	fc cf       	rjmp	.-8      	; 0x112 <uart_receive>
  return UDR0;
     11a:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
}
     11e:	90 e0       	ldi	r25, 0x00	; 0
     120:	08 95       	ret

00000122 <uart_init>:

// inicjalizacja UART
void uart_init()
{
  // ustaw baudrate
  UBRR0 = UBRR_VALUE;
     122:	87 e6       	ldi	r24, 0x67	; 103
     124:	90 e0       	ldi	r25, 0x00	; 0
     126:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
     12a:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
  // wyczyść rejestr UCSR0A
  UCSR0A = 0;
     12e:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
  // włącz odbiornik i nadajnik
  UCSR0B = _BV(RXEN0) | _BV(TXEN0);
     132:	88 e1       	ldi	r24, 0x18	; 24
     134:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
  // ustaw format 8n1
  UCSR0C = _BV(UCSZ00) | _BV(UCSZ01);
     138:	86 e0       	ldi	r24, 0x06	; 6
     13a:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
     13e:	08 95       	ret

00000140 <main>:
    uart_transmit('0'+(number*100) - 10 * floor(number*10),stdin);
}



int main(){
     140:	cf 93       	push	r28
     142:	df 93       	push	r29
     144:	00 d0       	rcall	.+0      	; 0x146 <main+0x6>
     146:	00 d0       	rcall	.+0      	; 0x148 <main+0x8>
     148:	cd b7       	in	r28, 0x3d	; 61
     14a:	de b7       	in	r29, 0x3e	; 62
    UCSR0B |= _BV(RXEN0) | _BV(TXEN0);
     14c:	80 91 c1 00 	lds	r24, 0x00C1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
     150:	88 61       	ori	r24, 0x18	; 24
     152:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>

// inicjalizacja UART
void uart_init()
{
  // ustaw baudrate
  UBRR0 = UBRR_VALUE;
     156:	87 e6       	ldi	r24, 0x67	; 103
     158:	90 e0       	ldi	r25, 0x00	; 0
     15a:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
     15e:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
  // wyczyść rejestr UCSR0A
  UCSR0A = 0;
     162:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
  // włącz odbiornik i nadajnik
  UCSR0B = _BV(RXEN0) | _BV(TXEN0);
     166:	88 e1       	ldi	r24, 0x18	; 24
     168:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
  // ustaw format 8n1
  UCSR0C = _BV(UCSZ00) | _BV(UCSZ01);
     16c:	86 e0       	ldi	r24, 0x06	; 6
     16e:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>


int main(){
    UCSR0B |= _BV(RXEN0) | _BV(TXEN0);
    uart_init();
    fdev_setup_stream(&uart_file,uart_transmit,uart_receive,_FDEV_SETUP_RW);
     172:	80 e1       	ldi	r24, 0x10	; 16
     174:	91 e0       	ldi	r25, 0x01	; 1
     176:	20 e8       	ldi	r18, 0x80	; 128
     178:	30 e0       	ldi	r19, 0x00	; 0
     17a:	30 93 19 01 	sts	0x0119, r19	; 0x800119 <__data_end+0x9>
     17e:	20 93 18 01 	sts	0x0118, r18	; 0x800118 <__data_end+0x8>
     182:	29 e8       	ldi	r18, 0x89	; 137
     184:	30 e0       	ldi	r19, 0x00	; 0
     186:	30 93 1b 01 	sts	0x011B, r19	; 0x80011b <__data_end+0xb>
     18a:	20 93 1a 01 	sts	0x011A, r18	; 0x80011a <__data_end+0xa>
     18e:	23 e0       	ldi	r18, 0x03	; 3
     190:	20 93 13 01 	sts	0x0113, r18	; 0x800113 <__data_end+0x3>
     194:	10 92 1d 01 	sts	0x011D, r1	; 0x80011d <__data_end+0xd>
     198:	10 92 1c 01 	sts	0x011C, r1	; 0x80011c <__data_end+0xc>
    stdin = stdout = stderr = &uart_file;
     19c:	90 93 23 01 	sts	0x0123, r25	; 0x800123 <__iob+0x5>
     1a0:	80 93 22 01 	sts	0x0122, r24	; 0x800122 <__iob+0x4>
     1a4:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <__iob+0x3>
     1a8:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <__iob+0x2>
     1ac:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <__iob+0x1>
     1b0:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <__iob>

FILE uart_file;

//inicjalizowanie ADC
static inline void adc_init(){
    ADMUX = _BV(REFS0);
     1b4:	80 e4       	ldi	r24, 0x40	; 64
     1b6:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    ADMUX &= ~(0b1111);
     1ba:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
     1be:	80 7f       	andi	r24, 0xF0	; 240
     1c0:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    DIDR0 = _BV(ADC0D);
     1c4:	81 e0       	ldi	r24, 0x01	; 1
     1c6:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <__TEXT_REGION_LENGTH__+0x7f807e>
    ADCSRA = _BV(ADPS0) | _BV(ADPS1) | _BV(ADPS2);
     1ca:	87 e0       	ldi	r24, 0x07	; 7
     1cc:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    ADCSRA |= _BV(ADEN);
     1d0:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     1d4:	80 68       	ori	r24, 0x80	; 128
     1d6:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
// transmisja jednego znaku
int uart_transmit(char data, FILE *stream)
{
  // czekaj aż transmiter gotowy
  while(!(UCSR0A & _BV(UDRE0)));
  UDR0 = data;
     1da:	1e e2       	ldi	r17, 0x2E	; 46
    uart_init();
    fdev_setup_stream(&uart_file,uart_transmit,uart_receive,_FDEV_SETUP_RW);
    stdin = stdout = stderr = &uart_file;
    adc_init();
    while(1){
        ADCSRA |= _BV(ADSC);
     1dc:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     1e0:	80 64       	ori	r24, 0x40	; 64
     1e2:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
        while(!(ADCSRA & _BV(ADIF)));
     1e6:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     1ea:	84 ff       	sbrs	r24, 4
     1ec:	fc cf       	rjmp	.-8      	; 0x1e6 <main+0xa6>
        ADCSRA |= _BV(ADIF);
     1ee:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     1f2:	80 61       	ori	r24, 0x10	; 16
     1f4:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
        float value = (float)ADC * (REF_VOLT / 1024.0f);        
     1f8:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
     1fc:	70 91 79 00 	lds	r23, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
     200:	80 e0       	ldi	r24, 0x00	; 0
     202:	90 e0       	ldi	r25, 0x00	; 0
     204:	0e 94 21 03 	call	0x642	; 0x642 <__floatunsisf>
     208:	23 e3       	ldi	r18, 0x33	; 51
     20a:	33 e3       	ldi	r19, 0x33	; 51
     20c:	43 ea       	ldi	r20, 0xA3	; 163
     20e:	5b e3       	ldi	r21, 0x3B	; 59
     210:	0e 94 57 04 	call	0x8ae	; 0x8ae <__mulsf3>
     214:	6b 01       	movw	r12, r22
     216:	7c 01       	movw	r14, r24
        float temperature = ((REF_VOLT - value)/value) * R;
        float cels = TO_CELISIUS(GET_TEMP(temperature));
     218:	9b 01       	movw	r18, r22
     21a:	ac 01       	movw	r20, r24
     21c:	63 e3       	ldi	r22, 0x33	; 51
     21e:	73 e3       	ldi	r23, 0x33	; 51
     220:	83 ea       	ldi	r24, 0xA3	; 163
     222:	90 e4       	ldi	r25, 0x40	; 64
     224:	0e 94 0c 02 	call	0x418	; 0x418 <__subsf3>
     228:	a7 01       	movw	r20, r14
     22a:	96 01       	movw	r18, r12
     22c:	0e 94 79 02 	call	0x4f2	; 0x4f2 <__divsf3>
     230:	20 e0       	ldi	r18, 0x00	; 0
     232:	30 e4       	ldi	r19, 0x40	; 64
     234:	4c e1       	ldi	r20, 0x1C	; 28
     236:	56 e4       	ldi	r21, 0x46	; 70
     238:	0e 94 57 04 	call	0x8ae	; 0x8ae <__mulsf3>
     23c:	20 e0       	ldi	r18, 0x00	; 0
     23e:	30 ee       	ldi	r19, 0xE0	; 224
     240:	42 e9       	ldi	r20, 0x92	; 146
     242:	55 e4       	ldi	r21, 0x45	; 69
     244:	0e 94 79 02 	call	0x4f2	; 0x4f2 <__divsf3>
     248:	0e 94 0f 04 	call	0x81e	; 0x81e <log>
     24c:	6b 01       	movw	r12, r22
     24e:	7c 01       	movw	r14, r24
        printf("Temperature:\t");
     250:	80 e0       	ldi	r24, 0x00	; 0
     252:	91 e0       	ldi	r25, 0x01	; 1
     254:	9f 93       	push	r25
     256:	8f 93       	push	r24
     258:	0e 94 0f 05 	call	0xa1e	; 0xa1e <printf>
    ADCSRA = _BV(ADPS0) | _BV(ADPS1) | _BV(ADPS2);
    ADCSRA |= _BV(ADEN);
}

static inline void printfloat(float number){
    number = round(number * 100) / 100;
     25c:	29 ec       	ldi	r18, 0xC9	; 201
     25e:	3f e2       	ldi	r19, 0x2F	; 47
     260:	45 e9       	ldi	r20, 0x95	; 149
     262:	51 e4       	ldi	r21, 0x41	; 65
     264:	c7 01       	movw	r24, r14
     266:	b6 01       	movw	r22, r12
     268:	0e 94 0d 02 	call	0x41a	; 0x41a <__addsf3>
     26c:	9b 01       	movw	r18, r22
     26e:	ac 01       	movw	r20, r24
     270:	60 e0       	ldi	r22, 0x00	; 0
     272:	70 ec       	ldi	r23, 0xC0	; 192
     274:	8d ea       	ldi	r24, 0xAD	; 173
     276:	95 e4       	ldi	r25, 0x45	; 69
     278:	0e 94 79 02 	call	0x4f2	; 0x4f2 <__divsf3>
     27c:	23 e3       	ldi	r18, 0x33	; 51
     27e:	33 e9       	ldi	r19, 0x93	; 147
     280:	48 e8       	ldi	r20, 0x88	; 136
     282:	53 e4       	ldi	r21, 0x43	; 67
     284:	0e 94 0c 02 	call	0x418	; 0x418 <__subsf3>
     288:	20 e0       	ldi	r18, 0x00	; 0
     28a:	30 e0       	ldi	r19, 0x00	; 0
     28c:	48 ec       	ldi	r20, 0xC8	; 200
     28e:	52 e4       	ldi	r21, 0x42	; 66
     290:	0e 94 57 04 	call	0x8ae	; 0x8ae <__mulsf3>
     294:	0e 94 c4 04 	call	0x988	; 0x988 <round>
     298:	20 e0       	ldi	r18, 0x00	; 0
     29a:	30 e0       	ldi	r19, 0x00	; 0
     29c:	48 ec       	ldi	r20, 0xC8	; 200
     29e:	52 e4       	ldi	r21, 0x42	; 66
     2a0:	0e 94 79 02 	call	0x4f2	; 0x4f2 <__divsf3>
     2a4:	6b 01       	movw	r12, r22
     2a6:	7c 01       	movw	r14, r24
    uart_transmit('0'+number /10 - 29,stdin);
     2a8:	20 e0       	ldi	r18, 0x00	; 0
     2aa:	30 e0       	ldi	r19, 0x00	; 0
     2ac:	40 e2       	ldi	r20, 0x20	; 32
     2ae:	51 e4       	ldi	r21, 0x41	; 65
     2b0:	0e 94 79 02 	call	0x4f2	; 0x4f2 <__divsf3>
     2b4:	4b 01       	movw	r8, r22
     2b6:	5c 01       	movw	r10, r24
     2b8:	20 e0       	ldi	r18, 0x00	; 0
     2ba:	30 e0       	ldi	r19, 0x00	; 0
     2bc:	40 e4       	ldi	r20, 0x40	; 64
     2be:	52 e4       	ldi	r21, 0x42	; 66
     2c0:	0e 94 0d 02 	call	0x41a	; 0x41a <__addsf3>
     2c4:	20 e0       	ldi	r18, 0x00	; 0
     2c6:	30 e0       	ldi	r19, 0x00	; 0
     2c8:	48 ee       	ldi	r20, 0xE8	; 232
     2ca:	51 e4       	ldi	r21, 0x41	; 65
     2cc:	0e 94 0c 02 	call	0x418	; 0x418 <__subsf3>
     2d0:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <__fixsfsi>
     2d4:	0f 90       	pop	r0
     2d6:	0f 90       	pop	r0

// transmisja jednego znaku
int uart_transmit(char data, FILE *stream)
{
  // czekaj aż transmiter gotowy
  while(!(UCSR0A & _BV(UDRE0)));
     2d8:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
     2dc:	85 ff       	sbrs	r24, 5
     2de:	fc cf       	rjmp	.-8      	; 0x2d8 <main+0x198>
  UDR0 = data;
     2e0:	60 93 c6 00 	sts	0x00C6, r22	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
}

static inline void printfloat(float number){
    number = round(number * 100) / 100;
    uart_transmit('0'+number /10 - 29,stdin);
    uart_transmit('0'+number - 10 * floor(number/10),stdin);
     2e4:	c5 01       	movw	r24, r10
     2e6:	b4 01       	movw	r22, r8
     2e8:	0e 94 5e 03 	call	0x6bc	; 0x6bc <floor>
     2ec:	2b 01       	movw	r4, r22
     2ee:	3c 01       	movw	r6, r24
     2f0:	20 e0       	ldi	r18, 0x00	; 0
     2f2:	30 e0       	ldi	r19, 0x00	; 0
     2f4:	40 e4       	ldi	r20, 0x40	; 64
     2f6:	52 e4       	ldi	r21, 0x42	; 66
     2f8:	c7 01       	movw	r24, r14
     2fa:	b6 01       	movw	r22, r12
     2fc:	0e 94 0d 02 	call	0x41a	; 0x41a <__addsf3>
     300:	4b 01       	movw	r8, r22
     302:	5c 01       	movw	r10, r24
     304:	20 e0       	ldi	r18, 0x00	; 0
     306:	30 e0       	ldi	r19, 0x00	; 0
     308:	40 e2       	ldi	r20, 0x20	; 32
     30a:	51 e4       	ldi	r21, 0x41	; 65
     30c:	c3 01       	movw	r24, r6
     30e:	b2 01       	movw	r22, r4
     310:	0e 94 57 04 	call	0x8ae	; 0x8ae <__mulsf3>
     314:	9b 01       	movw	r18, r22
     316:	ac 01       	movw	r20, r24
     318:	c5 01       	movw	r24, r10
     31a:	b4 01       	movw	r22, r8
     31c:	0e 94 0c 02 	call	0x418	; 0x418 <__subsf3>
     320:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <__fixsfsi>

// transmisja jednego znaku
int uart_transmit(char data, FILE *stream)
{
  // czekaj aż transmiter gotowy
  while(!(UCSR0A & _BV(UDRE0)));
     324:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
     328:	85 ff       	sbrs	r24, 5
     32a:	fc cf       	rjmp	.-8      	; 0x324 <main+0x1e4>
  UDR0 = data;
     32c:	60 93 c6 00 	sts	0x00C6, r22	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>

// transmisja jednego znaku
int uart_transmit(char data, FILE *stream)
{
  // czekaj aż transmiter gotowy
  while(!(UCSR0A & _BV(UDRE0)));
     330:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
     334:	85 ff       	sbrs	r24, 5
     336:	fc cf       	rjmp	.-8      	; 0x330 <main+0x1f0>
  UDR0 = data;
     338:	10 93 c6 00 	sts	0x00C6, r17	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
static inline void printfloat(float number){
    number = round(number * 100) / 100;
    uart_transmit('0'+number /10 - 29,stdin);
    uart_transmit('0'+number - 10 * floor(number/10),stdin);
    uart_transmit('.',stdin);
    uart_transmit('0'+(number*10) - 10 * floor(number),stdin);
     33c:	20 e0       	ldi	r18, 0x00	; 0
     33e:	30 e0       	ldi	r19, 0x00	; 0
     340:	40 e2       	ldi	r20, 0x20	; 32
     342:	51 e4       	ldi	r21, 0x41	; 65
     344:	c7 01       	movw	r24, r14
     346:	b6 01       	movw	r22, r12
     348:	0e 94 57 04 	call	0x8ae	; 0x8ae <__mulsf3>
     34c:	4b 01       	movw	r8, r22
     34e:	5c 01       	movw	r10, r24
     350:	c7 01       	movw	r24, r14
     352:	b6 01       	movw	r22, r12
     354:	0e 94 5e 03 	call	0x6bc	; 0x6bc <floor>
     358:	2b 01       	movw	r4, r22
     35a:	3c 01       	movw	r6, r24
     35c:	20 e0       	ldi	r18, 0x00	; 0
     35e:	30 e0       	ldi	r19, 0x00	; 0
     360:	40 e4       	ldi	r20, 0x40	; 64
     362:	52 e4       	ldi	r21, 0x42	; 66
     364:	c5 01       	movw	r24, r10
     366:	b4 01       	movw	r22, r8
     368:	0e 94 0d 02 	call	0x41a	; 0x41a <__addsf3>
     36c:	69 83       	std	Y+1, r22	; 0x01
     36e:	7a 83       	std	Y+2, r23	; 0x02
     370:	8b 83       	std	Y+3, r24	; 0x03
     372:	9c 83       	std	Y+4, r25	; 0x04
     374:	20 e0       	ldi	r18, 0x00	; 0
     376:	30 e0       	ldi	r19, 0x00	; 0
     378:	40 e2       	ldi	r20, 0x20	; 32
     37a:	51 e4       	ldi	r21, 0x41	; 65
     37c:	c3 01       	movw	r24, r6
     37e:	b2 01       	movw	r22, r4
     380:	0e 94 57 04 	call	0x8ae	; 0x8ae <__mulsf3>
     384:	9b 01       	movw	r18, r22
     386:	ac 01       	movw	r20, r24
     388:	69 81       	ldd	r22, Y+1	; 0x01
     38a:	7a 81       	ldd	r23, Y+2	; 0x02
     38c:	8b 81       	ldd	r24, Y+3	; 0x03
     38e:	9c 81       	ldd	r25, Y+4	; 0x04
     390:	0e 94 0c 02 	call	0x418	; 0x418 <__subsf3>
     394:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <__fixsfsi>

// transmisja jednego znaku
int uart_transmit(char data, FILE *stream)
{
  // czekaj aż transmiter gotowy
  while(!(UCSR0A & _BV(UDRE0)));
     398:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
     39c:	85 ff       	sbrs	r24, 5
     39e:	fc cf       	rjmp	.-8      	; 0x398 <main+0x258>
  UDR0 = data;
     3a0:	60 93 c6 00 	sts	0x00C6, r22	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
    number = round(number * 100) / 100;
    uart_transmit('0'+number /10 - 29,stdin);
    uart_transmit('0'+number - 10 * floor(number/10),stdin);
    uart_transmit('.',stdin);
    uart_transmit('0'+(number*10) - 10 * floor(number),stdin);
    uart_transmit('0'+(number*100) - 10 * floor(number*10),stdin);
     3a4:	c5 01       	movw	r24, r10
     3a6:	b4 01       	movw	r22, r8
     3a8:	0e 94 5e 03 	call	0x6bc	; 0x6bc <floor>
     3ac:	4b 01       	movw	r8, r22
     3ae:	5c 01       	movw	r10, r24
     3b0:	20 e0       	ldi	r18, 0x00	; 0
     3b2:	30 e0       	ldi	r19, 0x00	; 0
     3b4:	48 ec       	ldi	r20, 0xC8	; 200
     3b6:	52 e4       	ldi	r21, 0x42	; 66
     3b8:	c7 01       	movw	r24, r14
     3ba:	b6 01       	movw	r22, r12
     3bc:	0e 94 57 04 	call	0x8ae	; 0x8ae <__mulsf3>
     3c0:	20 e0       	ldi	r18, 0x00	; 0
     3c2:	30 e0       	ldi	r19, 0x00	; 0
     3c4:	40 e4       	ldi	r20, 0x40	; 64
     3c6:	52 e4       	ldi	r21, 0x42	; 66
     3c8:	0e 94 0d 02 	call	0x41a	; 0x41a <__addsf3>
     3cc:	6b 01       	movw	r12, r22
     3ce:	7c 01       	movw	r14, r24
     3d0:	20 e0       	ldi	r18, 0x00	; 0
     3d2:	30 e0       	ldi	r19, 0x00	; 0
     3d4:	40 e2       	ldi	r20, 0x20	; 32
     3d6:	51 e4       	ldi	r21, 0x41	; 65
     3d8:	c5 01       	movw	r24, r10
     3da:	b4 01       	movw	r22, r8
     3dc:	0e 94 57 04 	call	0x8ae	; 0x8ae <__mulsf3>
     3e0:	9b 01       	movw	r18, r22
     3e2:	ac 01       	movw	r20, r24
     3e4:	c7 01       	movw	r24, r14
     3e6:	b6 01       	movw	r22, r12
     3e8:	0e 94 0c 02 	call	0x418	; 0x418 <__subsf3>
     3ec:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <__fixsfsi>

// transmisja jednego znaku
int uart_transmit(char data, FILE *stream)
{
  // czekaj aż transmiter gotowy
  while(!(UCSR0A & _BV(UDRE0)));
     3f0:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
     3f4:	85 ff       	sbrs	r24, 5
     3f6:	fc cf       	rjmp	.-8      	; 0x3f0 <main+0x2b0>
  UDR0 = data;
     3f8:	60 93 c6 00 	sts	0x00C6, r22	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
        float value = (float)ADC * (REF_VOLT / 1024.0f);        
        float temperature = ((REF_VOLT - value)/value) * R;
        float cels = TO_CELISIUS(GET_TEMP(temperature));
        printf("Temperature:\t");
        printfloat(cels);
        printf("\r\n");
     3fc:	8e e0       	ldi	r24, 0x0E	; 14
     3fe:	91 e0       	ldi	r25, 0x01	; 1
     400:	0e 94 25 05 	call	0xa4a	; 0xa4a <puts>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     404:	8f ef       	ldi	r24, 0xFF	; 255
     406:	93 ed       	ldi	r25, 0xD3	; 211
     408:	20 e3       	ldi	r18, 0x30	; 48
     40a:	81 50       	subi	r24, 0x01	; 1
     40c:	90 40       	sbci	r25, 0x00	; 0
     40e:	20 40       	sbci	r18, 0x00	; 0
     410:	e1 f7       	brne	.-8      	; 0x40a <__EEPROM_REGION_LENGTH__+0xa>
     412:	00 c0       	rjmp	.+0      	; 0x414 <__EEPROM_REGION_LENGTH__+0x14>
     414:	00 00       	nop
     416:	e2 ce       	rjmp	.-572    	; 0x1dc <main+0x9c>

00000418 <__subsf3>:
     418:	50 58       	subi	r21, 0x80	; 128

0000041a <__addsf3>:
     41a:	bb 27       	eor	r27, r27
     41c:	aa 27       	eor	r26, r26
     41e:	0e 94 24 02 	call	0x448	; 0x448 <__addsf3x>
     422:	0c 94 b5 03 	jmp	0x76a	; 0x76a <__fp_round>
     426:	0e 94 a7 03 	call	0x74e	; 0x74e <__fp_pscA>
     42a:	38 f0       	brcs	.+14     	; 0x43a <__addsf3+0x20>
     42c:	0e 94 ae 03 	call	0x75c	; 0x75c <__fp_pscB>
     430:	20 f0       	brcs	.+8      	; 0x43a <__addsf3+0x20>
     432:	39 f4       	brne	.+14     	; 0x442 <__addsf3+0x28>
     434:	9f 3f       	cpi	r25, 0xFF	; 255
     436:	19 f4       	brne	.+6      	; 0x43e <__addsf3+0x24>
     438:	26 f4       	brtc	.+8      	; 0x442 <__addsf3+0x28>
     43a:	0c 94 a4 03 	jmp	0x748	; 0x748 <__fp_nan>
     43e:	0e f4       	brtc	.+2      	; 0x442 <__addsf3+0x28>
     440:	e0 95       	com	r30
     442:	e7 fb       	bst	r30, 7
     444:	0c 94 75 03 	jmp	0x6ea	; 0x6ea <__fp_inf>

00000448 <__addsf3x>:
     448:	e9 2f       	mov	r30, r25
     44a:	0e 94 c6 03 	call	0x78c	; 0x78c <__fp_split3>
     44e:	58 f3       	brcs	.-42     	; 0x426 <__addsf3+0xc>
     450:	ba 17       	cp	r27, r26
     452:	62 07       	cpc	r22, r18
     454:	73 07       	cpc	r23, r19
     456:	84 07       	cpc	r24, r20
     458:	95 07       	cpc	r25, r21
     45a:	20 f0       	brcs	.+8      	; 0x464 <__addsf3x+0x1c>
     45c:	79 f4       	brne	.+30     	; 0x47c <__addsf3x+0x34>
     45e:	a6 f5       	brtc	.+104    	; 0x4c8 <__addsf3x+0x80>
     460:	0c 94 00 04 	jmp	0x800	; 0x800 <__fp_zero>
     464:	0e f4       	brtc	.+2      	; 0x468 <__addsf3x+0x20>
     466:	e0 95       	com	r30
     468:	0b 2e       	mov	r0, r27
     46a:	ba 2f       	mov	r27, r26
     46c:	a0 2d       	mov	r26, r0
     46e:	0b 01       	movw	r0, r22
     470:	b9 01       	movw	r22, r18
     472:	90 01       	movw	r18, r0
     474:	0c 01       	movw	r0, r24
     476:	ca 01       	movw	r24, r20
     478:	a0 01       	movw	r20, r0
     47a:	11 24       	eor	r1, r1
     47c:	ff 27       	eor	r31, r31
     47e:	59 1b       	sub	r21, r25
     480:	99 f0       	breq	.+38     	; 0x4a8 <__addsf3x+0x60>
     482:	59 3f       	cpi	r21, 0xF9	; 249
     484:	50 f4       	brcc	.+20     	; 0x49a <__addsf3x+0x52>
     486:	50 3e       	cpi	r21, 0xE0	; 224
     488:	68 f1       	brcs	.+90     	; 0x4e4 <__addsf3x+0x9c>
     48a:	1a 16       	cp	r1, r26
     48c:	f0 40       	sbci	r31, 0x00	; 0
     48e:	a2 2f       	mov	r26, r18
     490:	23 2f       	mov	r18, r19
     492:	34 2f       	mov	r19, r20
     494:	44 27       	eor	r20, r20
     496:	58 5f       	subi	r21, 0xF8	; 248
     498:	f3 cf       	rjmp	.-26     	; 0x480 <__addsf3x+0x38>
     49a:	46 95       	lsr	r20
     49c:	37 95       	ror	r19
     49e:	27 95       	ror	r18
     4a0:	a7 95       	ror	r26
     4a2:	f0 40       	sbci	r31, 0x00	; 0
     4a4:	53 95       	inc	r21
     4a6:	c9 f7       	brne	.-14     	; 0x49a <__addsf3x+0x52>
     4a8:	7e f4       	brtc	.+30     	; 0x4c8 <__addsf3x+0x80>
     4aa:	1f 16       	cp	r1, r31
     4ac:	ba 0b       	sbc	r27, r26
     4ae:	62 0b       	sbc	r22, r18
     4b0:	73 0b       	sbc	r23, r19
     4b2:	84 0b       	sbc	r24, r20
     4b4:	ba f0       	brmi	.+46     	; 0x4e4 <__addsf3x+0x9c>
     4b6:	91 50       	subi	r25, 0x01	; 1
     4b8:	a1 f0       	breq	.+40     	; 0x4e2 <__addsf3x+0x9a>
     4ba:	ff 0f       	add	r31, r31
     4bc:	bb 1f       	adc	r27, r27
     4be:	66 1f       	adc	r22, r22
     4c0:	77 1f       	adc	r23, r23
     4c2:	88 1f       	adc	r24, r24
     4c4:	c2 f7       	brpl	.-16     	; 0x4b6 <__addsf3x+0x6e>
     4c6:	0e c0       	rjmp	.+28     	; 0x4e4 <__addsf3x+0x9c>
     4c8:	ba 0f       	add	r27, r26
     4ca:	62 1f       	adc	r22, r18
     4cc:	73 1f       	adc	r23, r19
     4ce:	84 1f       	adc	r24, r20
     4d0:	48 f4       	brcc	.+18     	; 0x4e4 <__addsf3x+0x9c>
     4d2:	87 95       	ror	r24
     4d4:	77 95       	ror	r23
     4d6:	67 95       	ror	r22
     4d8:	b7 95       	ror	r27
     4da:	f7 95       	ror	r31
     4dc:	9e 3f       	cpi	r25, 0xFE	; 254
     4de:	08 f0       	brcs	.+2      	; 0x4e2 <__addsf3x+0x9a>
     4e0:	b0 cf       	rjmp	.-160    	; 0x442 <__addsf3+0x28>
     4e2:	93 95       	inc	r25
     4e4:	88 0f       	add	r24, r24
     4e6:	08 f0       	brcs	.+2      	; 0x4ea <__addsf3x+0xa2>
     4e8:	99 27       	eor	r25, r25
     4ea:	ee 0f       	add	r30, r30
     4ec:	97 95       	ror	r25
     4ee:	87 95       	ror	r24
     4f0:	08 95       	ret

000004f2 <__divsf3>:
     4f2:	0e 94 8d 02 	call	0x51a	; 0x51a <__divsf3x>
     4f6:	0c 94 b5 03 	jmp	0x76a	; 0x76a <__fp_round>
     4fa:	0e 94 ae 03 	call	0x75c	; 0x75c <__fp_pscB>
     4fe:	58 f0       	brcs	.+22     	; 0x516 <__divsf3+0x24>
     500:	0e 94 a7 03 	call	0x74e	; 0x74e <__fp_pscA>
     504:	40 f0       	brcs	.+16     	; 0x516 <__divsf3+0x24>
     506:	29 f4       	brne	.+10     	; 0x512 <__divsf3+0x20>
     508:	5f 3f       	cpi	r21, 0xFF	; 255
     50a:	29 f0       	breq	.+10     	; 0x516 <__divsf3+0x24>
     50c:	0c 94 75 03 	jmp	0x6ea	; 0x6ea <__fp_inf>
     510:	51 11       	cpse	r21, r1
     512:	0c 94 01 04 	jmp	0x802	; 0x802 <__fp_szero>
     516:	0c 94 a4 03 	jmp	0x748	; 0x748 <__fp_nan>

0000051a <__divsf3x>:
     51a:	0e 94 c6 03 	call	0x78c	; 0x78c <__fp_split3>
     51e:	68 f3       	brcs	.-38     	; 0x4fa <__divsf3+0x8>

00000520 <__divsf3_pse>:
     520:	99 23       	and	r25, r25
     522:	b1 f3       	breq	.-20     	; 0x510 <__divsf3+0x1e>
     524:	55 23       	and	r21, r21
     526:	91 f3       	breq	.-28     	; 0x50c <__divsf3+0x1a>
     528:	95 1b       	sub	r25, r21
     52a:	55 0b       	sbc	r21, r21
     52c:	bb 27       	eor	r27, r27
     52e:	aa 27       	eor	r26, r26
     530:	62 17       	cp	r22, r18
     532:	73 07       	cpc	r23, r19
     534:	84 07       	cpc	r24, r20
     536:	38 f0       	brcs	.+14     	; 0x546 <__divsf3_pse+0x26>
     538:	9f 5f       	subi	r25, 0xFF	; 255
     53a:	5f 4f       	sbci	r21, 0xFF	; 255
     53c:	22 0f       	add	r18, r18
     53e:	33 1f       	adc	r19, r19
     540:	44 1f       	adc	r20, r20
     542:	aa 1f       	adc	r26, r26
     544:	a9 f3       	breq	.-22     	; 0x530 <__divsf3_pse+0x10>
     546:	35 d0       	rcall	.+106    	; 0x5b2 <__divsf3_pse+0x92>
     548:	0e 2e       	mov	r0, r30
     54a:	3a f0       	brmi	.+14     	; 0x55a <__divsf3_pse+0x3a>
     54c:	e0 e8       	ldi	r30, 0x80	; 128
     54e:	32 d0       	rcall	.+100    	; 0x5b4 <__divsf3_pse+0x94>
     550:	91 50       	subi	r25, 0x01	; 1
     552:	50 40       	sbci	r21, 0x00	; 0
     554:	e6 95       	lsr	r30
     556:	00 1c       	adc	r0, r0
     558:	ca f7       	brpl	.-14     	; 0x54c <__divsf3_pse+0x2c>
     55a:	2b d0       	rcall	.+86     	; 0x5b2 <__divsf3_pse+0x92>
     55c:	fe 2f       	mov	r31, r30
     55e:	29 d0       	rcall	.+82     	; 0x5b2 <__divsf3_pse+0x92>
     560:	66 0f       	add	r22, r22
     562:	77 1f       	adc	r23, r23
     564:	88 1f       	adc	r24, r24
     566:	bb 1f       	adc	r27, r27
     568:	26 17       	cp	r18, r22
     56a:	37 07       	cpc	r19, r23
     56c:	48 07       	cpc	r20, r24
     56e:	ab 07       	cpc	r26, r27
     570:	b0 e8       	ldi	r27, 0x80	; 128
     572:	09 f0       	breq	.+2      	; 0x576 <__divsf3_pse+0x56>
     574:	bb 0b       	sbc	r27, r27
     576:	80 2d       	mov	r24, r0
     578:	bf 01       	movw	r22, r30
     57a:	ff 27       	eor	r31, r31
     57c:	93 58       	subi	r25, 0x83	; 131
     57e:	5f 4f       	sbci	r21, 0xFF	; 255
     580:	3a f0       	brmi	.+14     	; 0x590 <__divsf3_pse+0x70>
     582:	9e 3f       	cpi	r25, 0xFE	; 254
     584:	51 05       	cpc	r21, r1
     586:	78 f0       	brcs	.+30     	; 0x5a6 <__divsf3_pse+0x86>
     588:	0c 94 75 03 	jmp	0x6ea	; 0x6ea <__fp_inf>
     58c:	0c 94 01 04 	jmp	0x802	; 0x802 <__fp_szero>
     590:	5f 3f       	cpi	r21, 0xFF	; 255
     592:	e4 f3       	brlt	.-8      	; 0x58c <__divsf3_pse+0x6c>
     594:	98 3e       	cpi	r25, 0xE8	; 232
     596:	d4 f3       	brlt	.-12     	; 0x58c <__divsf3_pse+0x6c>
     598:	86 95       	lsr	r24
     59a:	77 95       	ror	r23
     59c:	67 95       	ror	r22
     59e:	b7 95       	ror	r27
     5a0:	f7 95       	ror	r31
     5a2:	9f 5f       	subi	r25, 0xFF	; 255
     5a4:	c9 f7       	brne	.-14     	; 0x598 <__divsf3_pse+0x78>
     5a6:	88 0f       	add	r24, r24
     5a8:	91 1d       	adc	r25, r1
     5aa:	96 95       	lsr	r25
     5ac:	87 95       	ror	r24
     5ae:	97 f9       	bld	r25, 7
     5b0:	08 95       	ret
     5b2:	e1 e0       	ldi	r30, 0x01	; 1
     5b4:	66 0f       	add	r22, r22
     5b6:	77 1f       	adc	r23, r23
     5b8:	88 1f       	adc	r24, r24
     5ba:	bb 1f       	adc	r27, r27
     5bc:	62 17       	cp	r22, r18
     5be:	73 07       	cpc	r23, r19
     5c0:	84 07       	cpc	r24, r20
     5c2:	ba 07       	cpc	r27, r26
     5c4:	20 f0       	brcs	.+8      	; 0x5ce <__divsf3_pse+0xae>
     5c6:	62 1b       	sub	r22, r18
     5c8:	73 0b       	sbc	r23, r19
     5ca:	84 0b       	sbc	r24, r20
     5cc:	ba 0b       	sbc	r27, r26
     5ce:	ee 1f       	adc	r30, r30
     5d0:	88 f7       	brcc	.-30     	; 0x5b4 <__divsf3_pse+0x94>
     5d2:	e0 95       	com	r30
     5d4:	08 95       	ret

000005d6 <__fixsfsi>:
     5d6:	0e 94 f2 02 	call	0x5e4	; 0x5e4 <__fixunssfsi>
     5da:	68 94       	set
     5dc:	b1 11       	cpse	r27, r1
     5de:	0c 94 01 04 	jmp	0x802	; 0x802 <__fp_szero>
     5e2:	08 95       	ret

000005e4 <__fixunssfsi>:
     5e4:	0e 94 ce 03 	call	0x79c	; 0x79c <__fp_splitA>
     5e8:	88 f0       	brcs	.+34     	; 0x60c <__fixunssfsi+0x28>
     5ea:	9f 57       	subi	r25, 0x7F	; 127
     5ec:	98 f0       	brcs	.+38     	; 0x614 <__fixunssfsi+0x30>
     5ee:	b9 2f       	mov	r27, r25
     5f0:	99 27       	eor	r25, r25
     5f2:	b7 51       	subi	r27, 0x17	; 23
     5f4:	b0 f0       	brcs	.+44     	; 0x622 <__fixunssfsi+0x3e>
     5f6:	e1 f0       	breq	.+56     	; 0x630 <__fixunssfsi+0x4c>
     5f8:	66 0f       	add	r22, r22
     5fa:	77 1f       	adc	r23, r23
     5fc:	88 1f       	adc	r24, r24
     5fe:	99 1f       	adc	r25, r25
     600:	1a f0       	brmi	.+6      	; 0x608 <__fixunssfsi+0x24>
     602:	ba 95       	dec	r27
     604:	c9 f7       	brne	.-14     	; 0x5f8 <__fixunssfsi+0x14>
     606:	14 c0       	rjmp	.+40     	; 0x630 <__fixunssfsi+0x4c>
     608:	b1 30       	cpi	r27, 0x01	; 1
     60a:	91 f0       	breq	.+36     	; 0x630 <__fixunssfsi+0x4c>
     60c:	0e 94 00 04 	call	0x800	; 0x800 <__fp_zero>
     610:	b1 e0       	ldi	r27, 0x01	; 1
     612:	08 95       	ret
     614:	0c 94 00 04 	jmp	0x800	; 0x800 <__fp_zero>
     618:	67 2f       	mov	r22, r23
     61a:	78 2f       	mov	r23, r24
     61c:	88 27       	eor	r24, r24
     61e:	b8 5f       	subi	r27, 0xF8	; 248
     620:	39 f0       	breq	.+14     	; 0x630 <__fixunssfsi+0x4c>
     622:	b9 3f       	cpi	r27, 0xF9	; 249
     624:	cc f3       	brlt	.-14     	; 0x618 <__fixunssfsi+0x34>
     626:	86 95       	lsr	r24
     628:	77 95       	ror	r23
     62a:	67 95       	ror	r22
     62c:	b3 95       	inc	r27
     62e:	d9 f7       	brne	.-10     	; 0x626 <__fixunssfsi+0x42>
     630:	3e f4       	brtc	.+14     	; 0x640 <__fixunssfsi+0x5c>
     632:	90 95       	com	r25
     634:	80 95       	com	r24
     636:	70 95       	com	r23
     638:	61 95       	neg	r22
     63a:	7f 4f       	sbci	r23, 0xFF	; 255
     63c:	8f 4f       	sbci	r24, 0xFF	; 255
     63e:	9f 4f       	sbci	r25, 0xFF	; 255
     640:	08 95       	ret

00000642 <__floatunsisf>:
     642:	e8 94       	clt
     644:	09 c0       	rjmp	.+18     	; 0x658 <__floatsisf+0x12>

00000646 <__floatsisf>:
     646:	97 fb       	bst	r25, 7
     648:	3e f4       	brtc	.+14     	; 0x658 <__floatsisf+0x12>
     64a:	90 95       	com	r25
     64c:	80 95       	com	r24
     64e:	70 95       	com	r23
     650:	61 95       	neg	r22
     652:	7f 4f       	sbci	r23, 0xFF	; 255
     654:	8f 4f       	sbci	r24, 0xFF	; 255
     656:	9f 4f       	sbci	r25, 0xFF	; 255
     658:	99 23       	and	r25, r25
     65a:	a9 f0       	breq	.+42     	; 0x686 <__floatsisf+0x40>
     65c:	f9 2f       	mov	r31, r25
     65e:	96 e9       	ldi	r25, 0x96	; 150
     660:	bb 27       	eor	r27, r27
     662:	93 95       	inc	r25
     664:	f6 95       	lsr	r31
     666:	87 95       	ror	r24
     668:	77 95       	ror	r23
     66a:	67 95       	ror	r22
     66c:	b7 95       	ror	r27
     66e:	f1 11       	cpse	r31, r1
     670:	f8 cf       	rjmp	.-16     	; 0x662 <__floatsisf+0x1c>
     672:	fa f4       	brpl	.+62     	; 0x6b2 <__floatsisf+0x6c>
     674:	bb 0f       	add	r27, r27
     676:	11 f4       	brne	.+4      	; 0x67c <__floatsisf+0x36>
     678:	60 ff       	sbrs	r22, 0
     67a:	1b c0       	rjmp	.+54     	; 0x6b2 <__floatsisf+0x6c>
     67c:	6f 5f       	subi	r22, 0xFF	; 255
     67e:	7f 4f       	sbci	r23, 0xFF	; 255
     680:	8f 4f       	sbci	r24, 0xFF	; 255
     682:	9f 4f       	sbci	r25, 0xFF	; 255
     684:	16 c0       	rjmp	.+44     	; 0x6b2 <__floatsisf+0x6c>
     686:	88 23       	and	r24, r24
     688:	11 f0       	breq	.+4      	; 0x68e <__floatsisf+0x48>
     68a:	96 e9       	ldi	r25, 0x96	; 150
     68c:	11 c0       	rjmp	.+34     	; 0x6b0 <__floatsisf+0x6a>
     68e:	77 23       	and	r23, r23
     690:	21 f0       	breq	.+8      	; 0x69a <__floatsisf+0x54>
     692:	9e e8       	ldi	r25, 0x8E	; 142
     694:	87 2f       	mov	r24, r23
     696:	76 2f       	mov	r23, r22
     698:	05 c0       	rjmp	.+10     	; 0x6a4 <__floatsisf+0x5e>
     69a:	66 23       	and	r22, r22
     69c:	71 f0       	breq	.+28     	; 0x6ba <__floatsisf+0x74>
     69e:	96 e8       	ldi	r25, 0x86	; 134
     6a0:	86 2f       	mov	r24, r22
     6a2:	70 e0       	ldi	r23, 0x00	; 0
     6a4:	60 e0       	ldi	r22, 0x00	; 0
     6a6:	2a f0       	brmi	.+10     	; 0x6b2 <__floatsisf+0x6c>
     6a8:	9a 95       	dec	r25
     6aa:	66 0f       	add	r22, r22
     6ac:	77 1f       	adc	r23, r23
     6ae:	88 1f       	adc	r24, r24
     6b0:	da f7       	brpl	.-10     	; 0x6a8 <__floatsisf+0x62>
     6b2:	88 0f       	add	r24, r24
     6b4:	96 95       	lsr	r25
     6b6:	87 95       	ror	r24
     6b8:	97 f9       	bld	r25, 7
     6ba:	08 95       	ret

000006bc <floor>:
     6bc:	0e 94 e8 03 	call	0x7d0	; 0x7d0 <__fp_trunc>
     6c0:	90 f0       	brcs	.+36     	; 0x6e6 <floor+0x2a>
     6c2:	9f 37       	cpi	r25, 0x7F	; 127
     6c4:	48 f4       	brcc	.+18     	; 0x6d8 <floor+0x1c>
     6c6:	91 11       	cpse	r25, r1
     6c8:	16 f0       	brts	.+4      	; 0x6ce <floor+0x12>
     6ca:	0c 94 01 04 	jmp	0x802	; 0x802 <__fp_szero>
     6ce:	60 e0       	ldi	r22, 0x00	; 0
     6d0:	70 e0       	ldi	r23, 0x00	; 0
     6d2:	80 e8       	ldi	r24, 0x80	; 128
     6d4:	9f eb       	ldi	r25, 0xBF	; 191
     6d6:	08 95       	ret
     6d8:	26 f4       	brtc	.+8      	; 0x6e2 <floor+0x26>
     6da:	1b 16       	cp	r1, r27
     6dc:	61 1d       	adc	r22, r1
     6de:	71 1d       	adc	r23, r1
     6e0:	81 1d       	adc	r24, r1
     6e2:	0c 94 7b 03 	jmp	0x6f6	; 0x6f6 <__fp_mintl>
     6e6:	0c 94 96 03 	jmp	0x72c	; 0x72c <__fp_mpack>

000006ea <__fp_inf>:
     6ea:	97 f9       	bld	r25, 7
     6ec:	9f 67       	ori	r25, 0x7F	; 127
     6ee:	80 e8       	ldi	r24, 0x80	; 128
     6f0:	70 e0       	ldi	r23, 0x00	; 0
     6f2:	60 e0       	ldi	r22, 0x00	; 0
     6f4:	08 95       	ret

000006f6 <__fp_mintl>:
     6f6:	88 23       	and	r24, r24
     6f8:	71 f4       	brne	.+28     	; 0x716 <__fp_mintl+0x20>
     6fa:	77 23       	and	r23, r23
     6fc:	21 f0       	breq	.+8      	; 0x706 <__fp_mintl+0x10>
     6fe:	98 50       	subi	r25, 0x08	; 8
     700:	87 2b       	or	r24, r23
     702:	76 2f       	mov	r23, r22
     704:	07 c0       	rjmp	.+14     	; 0x714 <__fp_mintl+0x1e>
     706:	66 23       	and	r22, r22
     708:	11 f4       	brne	.+4      	; 0x70e <__fp_mintl+0x18>
     70a:	99 27       	eor	r25, r25
     70c:	0d c0       	rjmp	.+26     	; 0x728 <__fp_mintl+0x32>
     70e:	90 51       	subi	r25, 0x10	; 16
     710:	86 2b       	or	r24, r22
     712:	70 e0       	ldi	r23, 0x00	; 0
     714:	60 e0       	ldi	r22, 0x00	; 0
     716:	2a f0       	brmi	.+10     	; 0x722 <__fp_mintl+0x2c>
     718:	9a 95       	dec	r25
     71a:	66 0f       	add	r22, r22
     71c:	77 1f       	adc	r23, r23
     71e:	88 1f       	adc	r24, r24
     720:	da f7       	brpl	.-10     	; 0x718 <__fp_mintl+0x22>
     722:	88 0f       	add	r24, r24
     724:	96 95       	lsr	r25
     726:	87 95       	ror	r24
     728:	97 f9       	bld	r25, 7
     72a:	08 95       	ret

0000072c <__fp_mpack>:
     72c:	9f 3f       	cpi	r25, 0xFF	; 255
     72e:	31 f0       	breq	.+12     	; 0x73c <__fp_mpack_finite+0xc>

00000730 <__fp_mpack_finite>:
     730:	91 50       	subi	r25, 0x01	; 1
     732:	20 f4       	brcc	.+8      	; 0x73c <__fp_mpack_finite+0xc>
     734:	87 95       	ror	r24
     736:	77 95       	ror	r23
     738:	67 95       	ror	r22
     73a:	b7 95       	ror	r27
     73c:	88 0f       	add	r24, r24
     73e:	91 1d       	adc	r25, r1
     740:	96 95       	lsr	r25
     742:	87 95       	ror	r24
     744:	97 f9       	bld	r25, 7
     746:	08 95       	ret

00000748 <__fp_nan>:
     748:	9f ef       	ldi	r25, 0xFF	; 255
     74a:	80 ec       	ldi	r24, 0xC0	; 192
     74c:	08 95       	ret

0000074e <__fp_pscA>:
     74e:	00 24       	eor	r0, r0
     750:	0a 94       	dec	r0
     752:	16 16       	cp	r1, r22
     754:	17 06       	cpc	r1, r23
     756:	18 06       	cpc	r1, r24
     758:	09 06       	cpc	r0, r25
     75a:	08 95       	ret

0000075c <__fp_pscB>:
     75c:	00 24       	eor	r0, r0
     75e:	0a 94       	dec	r0
     760:	12 16       	cp	r1, r18
     762:	13 06       	cpc	r1, r19
     764:	14 06       	cpc	r1, r20
     766:	05 06       	cpc	r0, r21
     768:	08 95       	ret

0000076a <__fp_round>:
     76a:	09 2e       	mov	r0, r25
     76c:	03 94       	inc	r0
     76e:	00 0c       	add	r0, r0
     770:	11 f4       	brne	.+4      	; 0x776 <__fp_round+0xc>
     772:	88 23       	and	r24, r24
     774:	52 f0       	brmi	.+20     	; 0x78a <__fp_round+0x20>
     776:	bb 0f       	add	r27, r27
     778:	40 f4       	brcc	.+16     	; 0x78a <__fp_round+0x20>
     77a:	bf 2b       	or	r27, r31
     77c:	11 f4       	brne	.+4      	; 0x782 <__fp_round+0x18>
     77e:	60 ff       	sbrs	r22, 0
     780:	04 c0       	rjmp	.+8      	; 0x78a <__fp_round+0x20>
     782:	6f 5f       	subi	r22, 0xFF	; 255
     784:	7f 4f       	sbci	r23, 0xFF	; 255
     786:	8f 4f       	sbci	r24, 0xFF	; 255
     788:	9f 4f       	sbci	r25, 0xFF	; 255
     78a:	08 95       	ret

0000078c <__fp_split3>:
     78c:	57 fd       	sbrc	r21, 7
     78e:	90 58       	subi	r25, 0x80	; 128
     790:	44 0f       	add	r20, r20
     792:	55 1f       	adc	r21, r21
     794:	59 f0       	breq	.+22     	; 0x7ac <__fp_splitA+0x10>
     796:	5f 3f       	cpi	r21, 0xFF	; 255
     798:	71 f0       	breq	.+28     	; 0x7b6 <__fp_splitA+0x1a>
     79a:	47 95       	ror	r20

0000079c <__fp_splitA>:
     79c:	88 0f       	add	r24, r24
     79e:	97 fb       	bst	r25, 7
     7a0:	99 1f       	adc	r25, r25
     7a2:	61 f0       	breq	.+24     	; 0x7bc <__fp_splitA+0x20>
     7a4:	9f 3f       	cpi	r25, 0xFF	; 255
     7a6:	79 f0       	breq	.+30     	; 0x7c6 <__fp_splitA+0x2a>
     7a8:	87 95       	ror	r24
     7aa:	08 95       	ret
     7ac:	12 16       	cp	r1, r18
     7ae:	13 06       	cpc	r1, r19
     7b0:	14 06       	cpc	r1, r20
     7b2:	55 1f       	adc	r21, r21
     7b4:	f2 cf       	rjmp	.-28     	; 0x79a <__fp_split3+0xe>
     7b6:	46 95       	lsr	r20
     7b8:	f1 df       	rcall	.-30     	; 0x79c <__fp_splitA>
     7ba:	08 c0       	rjmp	.+16     	; 0x7cc <__fp_splitA+0x30>
     7bc:	16 16       	cp	r1, r22
     7be:	17 06       	cpc	r1, r23
     7c0:	18 06       	cpc	r1, r24
     7c2:	99 1f       	adc	r25, r25
     7c4:	f1 cf       	rjmp	.-30     	; 0x7a8 <__fp_splitA+0xc>
     7c6:	86 95       	lsr	r24
     7c8:	71 05       	cpc	r23, r1
     7ca:	61 05       	cpc	r22, r1
     7cc:	08 94       	sec
     7ce:	08 95       	ret

000007d0 <__fp_trunc>:
     7d0:	0e 94 ce 03 	call	0x79c	; 0x79c <__fp_splitA>
     7d4:	a0 f0       	brcs	.+40     	; 0x7fe <__fp_trunc+0x2e>
     7d6:	be e7       	ldi	r27, 0x7E	; 126
     7d8:	b9 17       	cp	r27, r25
     7da:	88 f4       	brcc	.+34     	; 0x7fe <__fp_trunc+0x2e>
     7dc:	bb 27       	eor	r27, r27
     7de:	9f 38       	cpi	r25, 0x8F	; 143
     7e0:	60 f4       	brcc	.+24     	; 0x7fa <__fp_trunc+0x2a>
     7e2:	16 16       	cp	r1, r22
     7e4:	b1 1d       	adc	r27, r1
     7e6:	67 2f       	mov	r22, r23
     7e8:	78 2f       	mov	r23, r24
     7ea:	88 27       	eor	r24, r24
     7ec:	98 5f       	subi	r25, 0xF8	; 248
     7ee:	f7 cf       	rjmp	.-18     	; 0x7de <__fp_trunc+0xe>
     7f0:	86 95       	lsr	r24
     7f2:	77 95       	ror	r23
     7f4:	67 95       	ror	r22
     7f6:	b1 1d       	adc	r27, r1
     7f8:	93 95       	inc	r25
     7fa:	96 39       	cpi	r25, 0x96	; 150
     7fc:	c8 f3       	brcs	.-14     	; 0x7f0 <__fp_trunc+0x20>
     7fe:	08 95       	ret

00000800 <__fp_zero>:
     800:	e8 94       	clt

00000802 <__fp_szero>:
     802:	bb 27       	eor	r27, r27
     804:	66 27       	eor	r22, r22
     806:	77 27       	eor	r23, r23
     808:	cb 01       	movw	r24, r22
     80a:	97 f9       	bld	r25, 7
     80c:	08 95       	ret
     80e:	16 f0       	brts	.+4      	; 0x814 <__fp_szero+0x12>
     810:	0c 94 96 03 	jmp	0x72c	; 0x72c <__fp_mpack>
     814:	0c 94 a4 03 	jmp	0x748	; 0x748 <__fp_nan>
     818:	68 94       	set
     81a:	0c 94 75 03 	jmp	0x6ea	; 0x6ea <__fp_inf>

0000081e <log>:
     81e:	0e 94 ce 03 	call	0x79c	; 0x79c <__fp_splitA>
     822:	a8 f3       	brcs	.-22     	; 0x80e <__fp_szero+0xc>
     824:	99 23       	and	r25, r25
     826:	c1 f3       	breq	.-16     	; 0x818 <__fp_szero+0x16>
     828:	ae f3       	brts	.-22     	; 0x814 <__fp_szero+0x12>
     82a:	df 93       	push	r29
     82c:	cf 93       	push	r28
     82e:	1f 93       	push	r17
     830:	0f 93       	push	r16
     832:	ff 92       	push	r15
     834:	c9 2f       	mov	r28, r25
     836:	dd 27       	eor	r29, r29
     838:	88 23       	and	r24, r24
     83a:	2a f0       	brmi	.+10     	; 0x846 <log+0x28>
     83c:	21 97       	sbiw	r28, 0x01	; 1
     83e:	66 0f       	add	r22, r22
     840:	77 1f       	adc	r23, r23
     842:	88 1f       	adc	r24, r24
     844:	da f7       	brpl	.-10     	; 0x83c <log+0x1e>
     846:	20 e0       	ldi	r18, 0x00	; 0
     848:	30 e0       	ldi	r19, 0x00	; 0
     84a:	40 e8       	ldi	r20, 0x80	; 128
     84c:	5f eb       	ldi	r21, 0xBF	; 191
     84e:	9f e3       	ldi	r25, 0x3F	; 63
     850:	88 39       	cpi	r24, 0x98	; 152
     852:	20 f0       	brcs	.+8      	; 0x85c <log+0x3e>
     854:	80 3e       	cpi	r24, 0xE0	; 224
     856:	38 f0       	brcs	.+14     	; 0x866 <log+0x48>
     858:	21 96       	adiw	r28, 0x01	; 1
     85a:	8f 77       	andi	r24, 0x7F	; 127
     85c:	0e 94 0d 02 	call	0x41a	; 0x41a <__addsf3>
     860:	e8 e6       	ldi	r30, 0x68	; 104
     862:	f0 e0       	ldi	r31, 0x00	; 0
     864:	04 c0       	rjmp	.+8      	; 0x86e <log+0x50>
     866:	0e 94 0d 02 	call	0x41a	; 0x41a <__addsf3>
     86a:	e5 e9       	ldi	r30, 0x95	; 149
     86c:	f0 e0       	ldi	r31, 0x00	; 0
     86e:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <__fp_powser>
     872:	8b 01       	movw	r16, r22
     874:	be 01       	movw	r22, r28
     876:	ec 01       	movw	r28, r24
     878:	fb 2e       	mov	r15, r27
     87a:	6f 57       	subi	r22, 0x7F	; 127
     87c:	71 09       	sbc	r23, r1
     87e:	75 95       	asr	r23
     880:	77 1f       	adc	r23, r23
     882:	88 0b       	sbc	r24, r24
     884:	99 0b       	sbc	r25, r25
     886:	0e 94 23 03 	call	0x646	; 0x646 <__floatsisf>
     88a:	28 e1       	ldi	r18, 0x18	; 24
     88c:	32 e7       	ldi	r19, 0x72	; 114
     88e:	41 e3       	ldi	r20, 0x31	; 49
     890:	5f e3       	ldi	r21, 0x3F	; 63
     892:	0e 94 6a 04 	call	0x8d4	; 0x8d4 <__mulsf3x>
     896:	af 2d       	mov	r26, r15
     898:	98 01       	movw	r18, r16
     89a:	ae 01       	movw	r20, r28
     89c:	ff 90       	pop	r15
     89e:	0f 91       	pop	r16
     8a0:	1f 91       	pop	r17
     8a2:	cf 91       	pop	r28
     8a4:	df 91       	pop	r29
     8a6:	0e 94 24 02 	call	0x448	; 0x448 <__addsf3x>
     8aa:	0c 94 b5 03 	jmp	0x76a	; 0x76a <__fp_round>

000008ae <__mulsf3>:
     8ae:	0e 94 6a 04 	call	0x8d4	; 0x8d4 <__mulsf3x>
     8b2:	0c 94 b5 03 	jmp	0x76a	; 0x76a <__fp_round>
     8b6:	0e 94 a7 03 	call	0x74e	; 0x74e <__fp_pscA>
     8ba:	38 f0       	brcs	.+14     	; 0x8ca <__mulsf3+0x1c>
     8bc:	0e 94 ae 03 	call	0x75c	; 0x75c <__fp_pscB>
     8c0:	20 f0       	brcs	.+8      	; 0x8ca <__mulsf3+0x1c>
     8c2:	95 23       	and	r25, r21
     8c4:	11 f0       	breq	.+4      	; 0x8ca <__mulsf3+0x1c>
     8c6:	0c 94 75 03 	jmp	0x6ea	; 0x6ea <__fp_inf>
     8ca:	0c 94 a4 03 	jmp	0x748	; 0x748 <__fp_nan>
     8ce:	11 24       	eor	r1, r1
     8d0:	0c 94 01 04 	jmp	0x802	; 0x802 <__fp_szero>

000008d4 <__mulsf3x>:
     8d4:	0e 94 c6 03 	call	0x78c	; 0x78c <__fp_split3>
     8d8:	70 f3       	brcs	.-36     	; 0x8b6 <__mulsf3+0x8>

000008da <__mulsf3_pse>:
     8da:	95 9f       	mul	r25, r21
     8dc:	c1 f3       	breq	.-16     	; 0x8ce <__mulsf3+0x20>
     8de:	95 0f       	add	r25, r21
     8e0:	50 e0       	ldi	r21, 0x00	; 0
     8e2:	55 1f       	adc	r21, r21
     8e4:	62 9f       	mul	r22, r18
     8e6:	f0 01       	movw	r30, r0
     8e8:	72 9f       	mul	r23, r18
     8ea:	bb 27       	eor	r27, r27
     8ec:	f0 0d       	add	r31, r0
     8ee:	b1 1d       	adc	r27, r1
     8f0:	63 9f       	mul	r22, r19
     8f2:	aa 27       	eor	r26, r26
     8f4:	f0 0d       	add	r31, r0
     8f6:	b1 1d       	adc	r27, r1
     8f8:	aa 1f       	adc	r26, r26
     8fa:	64 9f       	mul	r22, r20
     8fc:	66 27       	eor	r22, r22
     8fe:	b0 0d       	add	r27, r0
     900:	a1 1d       	adc	r26, r1
     902:	66 1f       	adc	r22, r22
     904:	82 9f       	mul	r24, r18
     906:	22 27       	eor	r18, r18
     908:	b0 0d       	add	r27, r0
     90a:	a1 1d       	adc	r26, r1
     90c:	62 1f       	adc	r22, r18
     90e:	73 9f       	mul	r23, r19
     910:	b0 0d       	add	r27, r0
     912:	a1 1d       	adc	r26, r1
     914:	62 1f       	adc	r22, r18
     916:	83 9f       	mul	r24, r19
     918:	a0 0d       	add	r26, r0
     91a:	61 1d       	adc	r22, r1
     91c:	22 1f       	adc	r18, r18
     91e:	74 9f       	mul	r23, r20
     920:	33 27       	eor	r19, r19
     922:	a0 0d       	add	r26, r0
     924:	61 1d       	adc	r22, r1
     926:	23 1f       	adc	r18, r19
     928:	84 9f       	mul	r24, r20
     92a:	60 0d       	add	r22, r0
     92c:	21 1d       	adc	r18, r1
     92e:	82 2f       	mov	r24, r18
     930:	76 2f       	mov	r23, r22
     932:	6a 2f       	mov	r22, r26
     934:	11 24       	eor	r1, r1
     936:	9f 57       	subi	r25, 0x7F	; 127
     938:	50 40       	sbci	r21, 0x00	; 0
     93a:	9a f0       	brmi	.+38     	; 0x962 <__stack+0x63>
     93c:	f1 f0       	breq	.+60     	; 0x97a <__stack+0x7b>
     93e:	88 23       	and	r24, r24
     940:	4a f0       	brmi	.+18     	; 0x954 <__stack+0x55>
     942:	ee 0f       	add	r30, r30
     944:	ff 1f       	adc	r31, r31
     946:	bb 1f       	adc	r27, r27
     948:	66 1f       	adc	r22, r22
     94a:	77 1f       	adc	r23, r23
     94c:	88 1f       	adc	r24, r24
     94e:	91 50       	subi	r25, 0x01	; 1
     950:	50 40       	sbci	r21, 0x00	; 0
     952:	a9 f7       	brne	.-22     	; 0x93e <__stack+0x3f>
     954:	9e 3f       	cpi	r25, 0xFE	; 254
     956:	51 05       	cpc	r21, r1
     958:	80 f0       	brcs	.+32     	; 0x97a <__stack+0x7b>
     95a:	0c 94 75 03 	jmp	0x6ea	; 0x6ea <__fp_inf>
     95e:	0c 94 01 04 	jmp	0x802	; 0x802 <__fp_szero>
     962:	5f 3f       	cpi	r21, 0xFF	; 255
     964:	e4 f3       	brlt	.-8      	; 0x95e <__stack+0x5f>
     966:	98 3e       	cpi	r25, 0xE8	; 232
     968:	d4 f3       	brlt	.-12     	; 0x95e <__stack+0x5f>
     96a:	86 95       	lsr	r24
     96c:	77 95       	ror	r23
     96e:	67 95       	ror	r22
     970:	b7 95       	ror	r27
     972:	f7 95       	ror	r31
     974:	e7 95       	ror	r30
     976:	9f 5f       	subi	r25, 0xFF	; 255
     978:	c1 f7       	brne	.-16     	; 0x96a <__stack+0x6b>
     97a:	fe 2b       	or	r31, r30
     97c:	88 0f       	add	r24, r24
     97e:	91 1d       	adc	r25, r1
     980:	96 95       	lsr	r25
     982:	87 95       	ror	r24
     984:	97 f9       	bld	r25, 7
     986:	08 95       	ret

00000988 <round>:
     988:	0e 94 ce 03 	call	0x79c	; 0x79c <__fp_splitA>
     98c:	e8 f0       	brcs	.+58     	; 0x9c8 <round+0x40>
     98e:	9e 37       	cpi	r25, 0x7E	; 126
     990:	e8 f0       	brcs	.+58     	; 0x9cc <round+0x44>
     992:	96 39       	cpi	r25, 0x96	; 150
     994:	b8 f4       	brcc	.+46     	; 0x9c4 <round+0x3c>
     996:	9e 38       	cpi	r25, 0x8E	; 142
     998:	48 f4       	brcc	.+18     	; 0x9ac <round+0x24>
     99a:	67 2f       	mov	r22, r23
     99c:	78 2f       	mov	r23, r24
     99e:	88 27       	eor	r24, r24
     9a0:	98 5f       	subi	r25, 0xF8	; 248
     9a2:	f9 cf       	rjmp	.-14     	; 0x996 <round+0xe>
     9a4:	86 95       	lsr	r24
     9a6:	77 95       	ror	r23
     9a8:	67 95       	ror	r22
     9aa:	93 95       	inc	r25
     9ac:	95 39       	cpi	r25, 0x95	; 149
     9ae:	d0 f3       	brcs	.-12     	; 0x9a4 <round+0x1c>
     9b0:	b6 2f       	mov	r27, r22
     9b2:	b1 70       	andi	r27, 0x01	; 1
     9b4:	6b 0f       	add	r22, r27
     9b6:	71 1d       	adc	r23, r1
     9b8:	81 1d       	adc	r24, r1
     9ba:	20 f4       	brcc	.+8      	; 0x9c4 <round+0x3c>
     9bc:	87 95       	ror	r24
     9be:	77 95       	ror	r23
     9c0:	67 95       	ror	r22
     9c2:	93 95       	inc	r25
     9c4:	0c 94 7b 03 	jmp	0x6f6	; 0x6f6 <__fp_mintl>
     9c8:	0c 94 96 03 	jmp	0x72c	; 0x72c <__fp_mpack>
     9cc:	0c 94 01 04 	jmp	0x802	; 0x802 <__fp_szero>

000009d0 <__fp_powser>:
     9d0:	df 93       	push	r29
     9d2:	cf 93       	push	r28
     9d4:	1f 93       	push	r17
     9d6:	0f 93       	push	r16
     9d8:	ff 92       	push	r15
     9da:	ef 92       	push	r14
     9dc:	df 92       	push	r13
     9de:	7b 01       	movw	r14, r22
     9e0:	8c 01       	movw	r16, r24
     9e2:	68 94       	set
     9e4:	06 c0       	rjmp	.+12     	; 0x9f2 <__fp_powser+0x22>
     9e6:	da 2e       	mov	r13, r26
     9e8:	ef 01       	movw	r28, r30
     9ea:	0e 94 6a 04 	call	0x8d4	; 0x8d4 <__mulsf3x>
     9ee:	fe 01       	movw	r30, r28
     9f0:	e8 94       	clt
     9f2:	a5 91       	lpm	r26, Z+
     9f4:	25 91       	lpm	r18, Z+
     9f6:	35 91       	lpm	r19, Z+
     9f8:	45 91       	lpm	r20, Z+
     9fa:	55 91       	lpm	r21, Z+
     9fc:	a6 f3       	brts	.-24     	; 0x9e6 <__fp_powser+0x16>
     9fe:	ef 01       	movw	r28, r30
     a00:	0e 94 24 02 	call	0x448	; 0x448 <__addsf3x>
     a04:	fe 01       	movw	r30, r28
     a06:	97 01       	movw	r18, r14
     a08:	a8 01       	movw	r20, r16
     a0a:	da 94       	dec	r13
     a0c:	69 f7       	brne	.-38     	; 0x9e8 <__fp_powser+0x18>
     a0e:	df 90       	pop	r13
     a10:	ef 90       	pop	r14
     a12:	ff 90       	pop	r15
     a14:	0f 91       	pop	r16
     a16:	1f 91       	pop	r17
     a18:	cf 91       	pop	r28
     a1a:	df 91       	pop	r29
     a1c:	08 95       	ret

00000a1e <printf>:
     a1e:	a0 e0       	ldi	r26, 0x00	; 0
     a20:	b0 e0       	ldi	r27, 0x00	; 0
     a22:	e5 e1       	ldi	r30, 0x15	; 21
     a24:	f5 e0       	ldi	r31, 0x05	; 5
     a26:	0c 94 f6 07 	jmp	0xfec	; 0xfec <__prologue_saves__+0x20>
     a2a:	ae 01       	movw	r20, r28
     a2c:	4b 5f       	subi	r20, 0xFB	; 251
     a2e:	5f 4f       	sbci	r21, 0xFF	; 255
     a30:	fa 01       	movw	r30, r20
     a32:	61 91       	ld	r22, Z+
     a34:	71 91       	ld	r23, Z+
     a36:	af 01       	movw	r20, r30
     a38:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <__iob+0x2>
     a3c:	90 91 21 01 	lds	r25, 0x0121	; 0x800121 <__iob+0x3>
     a40:	0e 94 55 05 	call	0xaaa	; 0xaaa <vfprintf>
     a44:	e2 e0       	ldi	r30, 0x02	; 2
     a46:	0c 94 12 08 	jmp	0x1024	; 0x1024 <__epilogue_restores__+0x20>

00000a4a <puts>:
     a4a:	0f 93       	push	r16
     a4c:	1f 93       	push	r17
     a4e:	cf 93       	push	r28
     a50:	df 93       	push	r29
     a52:	e0 91 20 01 	lds	r30, 0x0120	; 0x800120 <__iob+0x2>
     a56:	f0 91 21 01 	lds	r31, 0x0121	; 0x800121 <__iob+0x3>
     a5a:	23 81       	ldd	r18, Z+3	; 0x03
     a5c:	21 ff       	sbrs	r18, 1
     a5e:	1b c0       	rjmp	.+54     	; 0xa96 <puts+0x4c>
     a60:	8c 01       	movw	r16, r24
     a62:	d0 e0       	ldi	r29, 0x00	; 0
     a64:	c0 e0       	ldi	r28, 0x00	; 0
     a66:	f8 01       	movw	r30, r16
     a68:	81 91       	ld	r24, Z+
     a6a:	8f 01       	movw	r16, r30
     a6c:	60 91 20 01 	lds	r22, 0x0120	; 0x800120 <__iob+0x2>
     a70:	70 91 21 01 	lds	r23, 0x0121	; 0x800121 <__iob+0x3>
     a74:	db 01       	movw	r26, r22
     a76:	18 96       	adiw	r26, 0x08	; 8
     a78:	ed 91       	ld	r30, X+
     a7a:	fc 91       	ld	r31, X
     a7c:	19 97       	sbiw	r26, 0x09	; 9
     a7e:	88 23       	and	r24, r24
     a80:	31 f0       	breq	.+12     	; 0xa8e <puts+0x44>
     a82:	09 95       	icall
     a84:	89 2b       	or	r24, r25
     a86:	79 f3       	breq	.-34     	; 0xa66 <puts+0x1c>
     a88:	df ef       	ldi	r29, 0xFF	; 255
     a8a:	cf ef       	ldi	r28, 0xFF	; 255
     a8c:	ec cf       	rjmp	.-40     	; 0xa66 <puts+0x1c>
     a8e:	8a e0       	ldi	r24, 0x0A	; 10
     a90:	09 95       	icall
     a92:	89 2b       	or	r24, r25
     a94:	19 f0       	breq	.+6      	; 0xa9c <puts+0x52>
     a96:	8f ef       	ldi	r24, 0xFF	; 255
     a98:	9f ef       	ldi	r25, 0xFF	; 255
     a9a:	02 c0       	rjmp	.+4      	; 0xaa0 <puts+0x56>
     a9c:	8d 2f       	mov	r24, r29
     a9e:	9c 2f       	mov	r25, r28
     aa0:	df 91       	pop	r29
     aa2:	cf 91       	pop	r28
     aa4:	1f 91       	pop	r17
     aa6:	0f 91       	pop	r16
     aa8:	08 95       	ret

00000aaa <vfprintf>:
     aaa:	ab e0       	ldi	r26, 0x0B	; 11
     aac:	b0 e0       	ldi	r27, 0x00	; 0
     aae:	eb e5       	ldi	r30, 0x5B	; 91
     ab0:	f5 e0       	ldi	r31, 0x05	; 5
     ab2:	0c 94 e6 07 	jmp	0xfcc	; 0xfcc <__prologue_saves__>
     ab6:	6c 01       	movw	r12, r24
     ab8:	7b 01       	movw	r14, r22
     aba:	8a 01       	movw	r16, r20
     abc:	fc 01       	movw	r30, r24
     abe:	17 82       	std	Z+7, r1	; 0x07
     ac0:	16 82       	std	Z+6, r1	; 0x06
     ac2:	83 81       	ldd	r24, Z+3	; 0x03
     ac4:	81 ff       	sbrs	r24, 1
     ac6:	cc c1       	rjmp	.+920    	; 0xe60 <vfprintf+0x3b6>
     ac8:	ce 01       	movw	r24, r28
     aca:	01 96       	adiw	r24, 0x01	; 1
     acc:	3c 01       	movw	r6, r24
     ace:	f6 01       	movw	r30, r12
     ad0:	93 81       	ldd	r25, Z+3	; 0x03
     ad2:	f7 01       	movw	r30, r14
     ad4:	93 fd       	sbrc	r25, 3
     ad6:	85 91       	lpm	r24, Z+
     ad8:	93 ff       	sbrs	r25, 3
     ada:	81 91       	ld	r24, Z+
     adc:	7f 01       	movw	r14, r30
     ade:	88 23       	and	r24, r24
     ae0:	09 f4       	brne	.+2      	; 0xae4 <vfprintf+0x3a>
     ae2:	ba c1       	rjmp	.+884    	; 0xe58 <vfprintf+0x3ae>
     ae4:	85 32       	cpi	r24, 0x25	; 37
     ae6:	39 f4       	brne	.+14     	; 0xaf6 <vfprintf+0x4c>
     ae8:	93 fd       	sbrc	r25, 3
     aea:	85 91       	lpm	r24, Z+
     aec:	93 ff       	sbrs	r25, 3
     aee:	81 91       	ld	r24, Z+
     af0:	7f 01       	movw	r14, r30
     af2:	85 32       	cpi	r24, 0x25	; 37
     af4:	29 f4       	brne	.+10     	; 0xb00 <vfprintf+0x56>
     af6:	b6 01       	movw	r22, r12
     af8:	90 e0       	ldi	r25, 0x00	; 0
     afa:	0e 94 4c 07 	call	0xe98	; 0xe98 <fputc>
     afe:	e7 cf       	rjmp	.-50     	; 0xace <vfprintf+0x24>
     b00:	91 2c       	mov	r9, r1
     b02:	21 2c       	mov	r2, r1
     b04:	31 2c       	mov	r3, r1
     b06:	ff e1       	ldi	r31, 0x1F	; 31
     b08:	f3 15       	cp	r31, r3
     b0a:	d8 f0       	brcs	.+54     	; 0xb42 <vfprintf+0x98>
     b0c:	8b 32       	cpi	r24, 0x2B	; 43
     b0e:	79 f0       	breq	.+30     	; 0xb2e <vfprintf+0x84>
     b10:	38 f4       	brcc	.+14     	; 0xb20 <vfprintf+0x76>
     b12:	80 32       	cpi	r24, 0x20	; 32
     b14:	79 f0       	breq	.+30     	; 0xb34 <vfprintf+0x8a>
     b16:	83 32       	cpi	r24, 0x23	; 35
     b18:	a1 f4       	brne	.+40     	; 0xb42 <vfprintf+0x98>
     b1a:	23 2d       	mov	r18, r3
     b1c:	20 61       	ori	r18, 0x10	; 16
     b1e:	1d c0       	rjmp	.+58     	; 0xb5a <vfprintf+0xb0>
     b20:	8d 32       	cpi	r24, 0x2D	; 45
     b22:	61 f0       	breq	.+24     	; 0xb3c <vfprintf+0x92>
     b24:	80 33       	cpi	r24, 0x30	; 48
     b26:	69 f4       	brne	.+26     	; 0xb42 <vfprintf+0x98>
     b28:	23 2d       	mov	r18, r3
     b2a:	21 60       	ori	r18, 0x01	; 1
     b2c:	16 c0       	rjmp	.+44     	; 0xb5a <vfprintf+0xb0>
     b2e:	83 2d       	mov	r24, r3
     b30:	82 60       	ori	r24, 0x02	; 2
     b32:	38 2e       	mov	r3, r24
     b34:	e3 2d       	mov	r30, r3
     b36:	e4 60       	ori	r30, 0x04	; 4
     b38:	3e 2e       	mov	r3, r30
     b3a:	2a c0       	rjmp	.+84     	; 0xb90 <vfprintf+0xe6>
     b3c:	f3 2d       	mov	r31, r3
     b3e:	f8 60       	ori	r31, 0x08	; 8
     b40:	1d c0       	rjmp	.+58     	; 0xb7c <vfprintf+0xd2>
     b42:	37 fc       	sbrc	r3, 7
     b44:	2d c0       	rjmp	.+90     	; 0xba0 <vfprintf+0xf6>
     b46:	20 ed       	ldi	r18, 0xD0	; 208
     b48:	28 0f       	add	r18, r24
     b4a:	2a 30       	cpi	r18, 0x0A	; 10
     b4c:	40 f0       	brcs	.+16     	; 0xb5e <vfprintf+0xb4>
     b4e:	8e 32       	cpi	r24, 0x2E	; 46
     b50:	b9 f4       	brne	.+46     	; 0xb80 <vfprintf+0xd6>
     b52:	36 fc       	sbrc	r3, 6
     b54:	81 c1       	rjmp	.+770    	; 0xe58 <vfprintf+0x3ae>
     b56:	23 2d       	mov	r18, r3
     b58:	20 64       	ori	r18, 0x40	; 64
     b5a:	32 2e       	mov	r3, r18
     b5c:	19 c0       	rjmp	.+50     	; 0xb90 <vfprintf+0xe6>
     b5e:	36 fe       	sbrs	r3, 6
     b60:	06 c0       	rjmp	.+12     	; 0xb6e <vfprintf+0xc4>
     b62:	8a e0       	ldi	r24, 0x0A	; 10
     b64:	98 9e       	mul	r9, r24
     b66:	20 0d       	add	r18, r0
     b68:	11 24       	eor	r1, r1
     b6a:	92 2e       	mov	r9, r18
     b6c:	11 c0       	rjmp	.+34     	; 0xb90 <vfprintf+0xe6>
     b6e:	ea e0       	ldi	r30, 0x0A	; 10
     b70:	2e 9e       	mul	r2, r30
     b72:	20 0d       	add	r18, r0
     b74:	11 24       	eor	r1, r1
     b76:	22 2e       	mov	r2, r18
     b78:	f3 2d       	mov	r31, r3
     b7a:	f0 62       	ori	r31, 0x20	; 32
     b7c:	3f 2e       	mov	r3, r31
     b7e:	08 c0       	rjmp	.+16     	; 0xb90 <vfprintf+0xe6>
     b80:	8c 36       	cpi	r24, 0x6C	; 108
     b82:	21 f4       	brne	.+8      	; 0xb8c <vfprintf+0xe2>
     b84:	83 2d       	mov	r24, r3
     b86:	80 68       	ori	r24, 0x80	; 128
     b88:	38 2e       	mov	r3, r24
     b8a:	02 c0       	rjmp	.+4      	; 0xb90 <vfprintf+0xe6>
     b8c:	88 36       	cpi	r24, 0x68	; 104
     b8e:	41 f4       	brne	.+16     	; 0xba0 <vfprintf+0xf6>
     b90:	f7 01       	movw	r30, r14
     b92:	93 fd       	sbrc	r25, 3
     b94:	85 91       	lpm	r24, Z+
     b96:	93 ff       	sbrs	r25, 3
     b98:	81 91       	ld	r24, Z+
     b9a:	7f 01       	movw	r14, r30
     b9c:	81 11       	cpse	r24, r1
     b9e:	b3 cf       	rjmp	.-154    	; 0xb06 <vfprintf+0x5c>
     ba0:	98 2f       	mov	r25, r24
     ba2:	9f 7d       	andi	r25, 0xDF	; 223
     ba4:	95 54       	subi	r25, 0x45	; 69
     ba6:	93 30       	cpi	r25, 0x03	; 3
     ba8:	28 f4       	brcc	.+10     	; 0xbb4 <vfprintf+0x10a>
     baa:	0c 5f       	subi	r16, 0xFC	; 252
     bac:	1f 4f       	sbci	r17, 0xFF	; 255
     bae:	9f e3       	ldi	r25, 0x3F	; 63
     bb0:	99 83       	std	Y+1, r25	; 0x01
     bb2:	0d c0       	rjmp	.+26     	; 0xbce <vfprintf+0x124>
     bb4:	83 36       	cpi	r24, 0x63	; 99
     bb6:	31 f0       	breq	.+12     	; 0xbc4 <vfprintf+0x11a>
     bb8:	83 37       	cpi	r24, 0x73	; 115
     bba:	71 f0       	breq	.+28     	; 0xbd8 <vfprintf+0x12e>
     bbc:	83 35       	cpi	r24, 0x53	; 83
     bbe:	09 f0       	breq	.+2      	; 0xbc2 <vfprintf+0x118>
     bc0:	59 c0       	rjmp	.+178    	; 0xc74 <vfprintf+0x1ca>
     bc2:	21 c0       	rjmp	.+66     	; 0xc06 <vfprintf+0x15c>
     bc4:	f8 01       	movw	r30, r16
     bc6:	80 81       	ld	r24, Z
     bc8:	89 83       	std	Y+1, r24	; 0x01
     bca:	0e 5f       	subi	r16, 0xFE	; 254
     bcc:	1f 4f       	sbci	r17, 0xFF	; 255
     bce:	88 24       	eor	r8, r8
     bd0:	83 94       	inc	r8
     bd2:	91 2c       	mov	r9, r1
     bd4:	53 01       	movw	r10, r6
     bd6:	13 c0       	rjmp	.+38     	; 0xbfe <vfprintf+0x154>
     bd8:	28 01       	movw	r4, r16
     bda:	f2 e0       	ldi	r31, 0x02	; 2
     bdc:	4f 0e       	add	r4, r31
     bde:	51 1c       	adc	r5, r1
     be0:	f8 01       	movw	r30, r16
     be2:	a0 80       	ld	r10, Z
     be4:	b1 80       	ldd	r11, Z+1	; 0x01
     be6:	36 fe       	sbrs	r3, 6
     be8:	03 c0       	rjmp	.+6      	; 0xbf0 <vfprintf+0x146>
     bea:	69 2d       	mov	r22, r9
     bec:	70 e0       	ldi	r23, 0x00	; 0
     bee:	02 c0       	rjmp	.+4      	; 0xbf4 <vfprintf+0x14a>
     bf0:	6f ef       	ldi	r22, 0xFF	; 255
     bf2:	7f ef       	ldi	r23, 0xFF	; 255
     bf4:	c5 01       	movw	r24, r10
     bf6:	0e 94 41 07 	call	0xe82	; 0xe82 <strnlen>
     bfa:	4c 01       	movw	r8, r24
     bfc:	82 01       	movw	r16, r4
     bfe:	f3 2d       	mov	r31, r3
     c00:	ff 77       	andi	r31, 0x7F	; 127
     c02:	3f 2e       	mov	r3, r31
     c04:	16 c0       	rjmp	.+44     	; 0xc32 <vfprintf+0x188>
     c06:	28 01       	movw	r4, r16
     c08:	22 e0       	ldi	r18, 0x02	; 2
     c0a:	42 0e       	add	r4, r18
     c0c:	51 1c       	adc	r5, r1
     c0e:	f8 01       	movw	r30, r16
     c10:	a0 80       	ld	r10, Z
     c12:	b1 80       	ldd	r11, Z+1	; 0x01
     c14:	36 fe       	sbrs	r3, 6
     c16:	03 c0       	rjmp	.+6      	; 0xc1e <vfprintf+0x174>
     c18:	69 2d       	mov	r22, r9
     c1a:	70 e0       	ldi	r23, 0x00	; 0
     c1c:	02 c0       	rjmp	.+4      	; 0xc22 <vfprintf+0x178>
     c1e:	6f ef       	ldi	r22, 0xFF	; 255
     c20:	7f ef       	ldi	r23, 0xFF	; 255
     c22:	c5 01       	movw	r24, r10
     c24:	0e 94 36 07 	call	0xe6c	; 0xe6c <strnlen_P>
     c28:	4c 01       	movw	r8, r24
     c2a:	f3 2d       	mov	r31, r3
     c2c:	f0 68       	ori	r31, 0x80	; 128
     c2e:	3f 2e       	mov	r3, r31
     c30:	82 01       	movw	r16, r4
     c32:	33 fc       	sbrc	r3, 3
     c34:	1b c0       	rjmp	.+54     	; 0xc6c <vfprintf+0x1c2>
     c36:	82 2d       	mov	r24, r2
     c38:	90 e0       	ldi	r25, 0x00	; 0
     c3a:	88 16       	cp	r8, r24
     c3c:	99 06       	cpc	r9, r25
     c3e:	b0 f4       	brcc	.+44     	; 0xc6c <vfprintf+0x1c2>
     c40:	b6 01       	movw	r22, r12
     c42:	80 e2       	ldi	r24, 0x20	; 32
     c44:	90 e0       	ldi	r25, 0x00	; 0
     c46:	0e 94 4c 07 	call	0xe98	; 0xe98 <fputc>
     c4a:	2a 94       	dec	r2
     c4c:	f4 cf       	rjmp	.-24     	; 0xc36 <vfprintf+0x18c>
     c4e:	f5 01       	movw	r30, r10
     c50:	37 fc       	sbrc	r3, 7
     c52:	85 91       	lpm	r24, Z+
     c54:	37 fe       	sbrs	r3, 7
     c56:	81 91       	ld	r24, Z+
     c58:	5f 01       	movw	r10, r30
     c5a:	b6 01       	movw	r22, r12
     c5c:	90 e0       	ldi	r25, 0x00	; 0
     c5e:	0e 94 4c 07 	call	0xe98	; 0xe98 <fputc>
     c62:	21 10       	cpse	r2, r1
     c64:	2a 94       	dec	r2
     c66:	21 e0       	ldi	r18, 0x01	; 1
     c68:	82 1a       	sub	r8, r18
     c6a:	91 08       	sbc	r9, r1
     c6c:	81 14       	cp	r8, r1
     c6e:	91 04       	cpc	r9, r1
     c70:	71 f7       	brne	.-36     	; 0xc4e <vfprintf+0x1a4>
     c72:	e8 c0       	rjmp	.+464    	; 0xe44 <vfprintf+0x39a>
     c74:	84 36       	cpi	r24, 0x64	; 100
     c76:	11 f0       	breq	.+4      	; 0xc7c <vfprintf+0x1d2>
     c78:	89 36       	cpi	r24, 0x69	; 105
     c7a:	41 f5       	brne	.+80     	; 0xccc <vfprintf+0x222>
     c7c:	f8 01       	movw	r30, r16
     c7e:	37 fe       	sbrs	r3, 7
     c80:	07 c0       	rjmp	.+14     	; 0xc90 <vfprintf+0x1e6>
     c82:	60 81       	ld	r22, Z
     c84:	71 81       	ldd	r23, Z+1	; 0x01
     c86:	82 81       	ldd	r24, Z+2	; 0x02
     c88:	93 81       	ldd	r25, Z+3	; 0x03
     c8a:	0c 5f       	subi	r16, 0xFC	; 252
     c8c:	1f 4f       	sbci	r17, 0xFF	; 255
     c8e:	08 c0       	rjmp	.+16     	; 0xca0 <vfprintf+0x1f6>
     c90:	60 81       	ld	r22, Z
     c92:	71 81       	ldd	r23, Z+1	; 0x01
     c94:	07 2e       	mov	r0, r23
     c96:	00 0c       	add	r0, r0
     c98:	88 0b       	sbc	r24, r24
     c9a:	99 0b       	sbc	r25, r25
     c9c:	0e 5f       	subi	r16, 0xFE	; 254
     c9e:	1f 4f       	sbci	r17, 0xFF	; 255
     ca0:	f3 2d       	mov	r31, r3
     ca2:	ff 76       	andi	r31, 0x6F	; 111
     ca4:	3f 2e       	mov	r3, r31
     ca6:	97 ff       	sbrs	r25, 7
     ca8:	09 c0       	rjmp	.+18     	; 0xcbc <vfprintf+0x212>
     caa:	90 95       	com	r25
     cac:	80 95       	com	r24
     cae:	70 95       	com	r23
     cb0:	61 95       	neg	r22
     cb2:	7f 4f       	sbci	r23, 0xFF	; 255
     cb4:	8f 4f       	sbci	r24, 0xFF	; 255
     cb6:	9f 4f       	sbci	r25, 0xFF	; 255
     cb8:	f0 68       	ori	r31, 0x80	; 128
     cba:	3f 2e       	mov	r3, r31
     cbc:	2a e0       	ldi	r18, 0x0A	; 10
     cbe:	30 e0       	ldi	r19, 0x00	; 0
     cc0:	a3 01       	movw	r20, r6
     cc2:	0e 94 88 07 	call	0xf10	; 0xf10 <__ultoa_invert>
     cc6:	88 2e       	mov	r8, r24
     cc8:	86 18       	sub	r8, r6
     cca:	45 c0       	rjmp	.+138    	; 0xd56 <vfprintf+0x2ac>
     ccc:	85 37       	cpi	r24, 0x75	; 117
     cce:	31 f4       	brne	.+12     	; 0xcdc <vfprintf+0x232>
     cd0:	23 2d       	mov	r18, r3
     cd2:	2f 7e       	andi	r18, 0xEF	; 239
     cd4:	b2 2e       	mov	r11, r18
     cd6:	2a e0       	ldi	r18, 0x0A	; 10
     cd8:	30 e0       	ldi	r19, 0x00	; 0
     cda:	25 c0       	rjmp	.+74     	; 0xd26 <vfprintf+0x27c>
     cdc:	93 2d       	mov	r25, r3
     cde:	99 7f       	andi	r25, 0xF9	; 249
     ce0:	b9 2e       	mov	r11, r25
     ce2:	8f 36       	cpi	r24, 0x6F	; 111
     ce4:	c1 f0       	breq	.+48     	; 0xd16 <vfprintf+0x26c>
     ce6:	18 f4       	brcc	.+6      	; 0xcee <vfprintf+0x244>
     ce8:	88 35       	cpi	r24, 0x58	; 88
     cea:	79 f0       	breq	.+30     	; 0xd0a <vfprintf+0x260>
     cec:	b5 c0       	rjmp	.+362    	; 0xe58 <vfprintf+0x3ae>
     cee:	80 37       	cpi	r24, 0x70	; 112
     cf0:	19 f0       	breq	.+6      	; 0xcf8 <vfprintf+0x24e>
     cf2:	88 37       	cpi	r24, 0x78	; 120
     cf4:	21 f0       	breq	.+8      	; 0xcfe <vfprintf+0x254>
     cf6:	b0 c0       	rjmp	.+352    	; 0xe58 <vfprintf+0x3ae>
     cf8:	e9 2f       	mov	r30, r25
     cfa:	e0 61       	ori	r30, 0x10	; 16
     cfc:	be 2e       	mov	r11, r30
     cfe:	b4 fe       	sbrs	r11, 4
     d00:	0d c0       	rjmp	.+26     	; 0xd1c <vfprintf+0x272>
     d02:	fb 2d       	mov	r31, r11
     d04:	f4 60       	ori	r31, 0x04	; 4
     d06:	bf 2e       	mov	r11, r31
     d08:	09 c0       	rjmp	.+18     	; 0xd1c <vfprintf+0x272>
     d0a:	34 fe       	sbrs	r3, 4
     d0c:	0a c0       	rjmp	.+20     	; 0xd22 <vfprintf+0x278>
     d0e:	29 2f       	mov	r18, r25
     d10:	26 60       	ori	r18, 0x06	; 6
     d12:	b2 2e       	mov	r11, r18
     d14:	06 c0       	rjmp	.+12     	; 0xd22 <vfprintf+0x278>
     d16:	28 e0       	ldi	r18, 0x08	; 8
     d18:	30 e0       	ldi	r19, 0x00	; 0
     d1a:	05 c0       	rjmp	.+10     	; 0xd26 <vfprintf+0x27c>
     d1c:	20 e1       	ldi	r18, 0x10	; 16
     d1e:	30 e0       	ldi	r19, 0x00	; 0
     d20:	02 c0       	rjmp	.+4      	; 0xd26 <vfprintf+0x27c>
     d22:	20 e1       	ldi	r18, 0x10	; 16
     d24:	32 e0       	ldi	r19, 0x02	; 2
     d26:	f8 01       	movw	r30, r16
     d28:	b7 fe       	sbrs	r11, 7
     d2a:	07 c0       	rjmp	.+14     	; 0xd3a <vfprintf+0x290>
     d2c:	60 81       	ld	r22, Z
     d2e:	71 81       	ldd	r23, Z+1	; 0x01
     d30:	82 81       	ldd	r24, Z+2	; 0x02
     d32:	93 81       	ldd	r25, Z+3	; 0x03
     d34:	0c 5f       	subi	r16, 0xFC	; 252
     d36:	1f 4f       	sbci	r17, 0xFF	; 255
     d38:	06 c0       	rjmp	.+12     	; 0xd46 <vfprintf+0x29c>
     d3a:	60 81       	ld	r22, Z
     d3c:	71 81       	ldd	r23, Z+1	; 0x01
     d3e:	80 e0       	ldi	r24, 0x00	; 0
     d40:	90 e0       	ldi	r25, 0x00	; 0
     d42:	0e 5f       	subi	r16, 0xFE	; 254
     d44:	1f 4f       	sbci	r17, 0xFF	; 255
     d46:	a3 01       	movw	r20, r6
     d48:	0e 94 88 07 	call	0xf10	; 0xf10 <__ultoa_invert>
     d4c:	88 2e       	mov	r8, r24
     d4e:	86 18       	sub	r8, r6
     d50:	fb 2d       	mov	r31, r11
     d52:	ff 77       	andi	r31, 0x7F	; 127
     d54:	3f 2e       	mov	r3, r31
     d56:	36 fe       	sbrs	r3, 6
     d58:	0d c0       	rjmp	.+26     	; 0xd74 <vfprintf+0x2ca>
     d5a:	23 2d       	mov	r18, r3
     d5c:	2e 7f       	andi	r18, 0xFE	; 254
     d5e:	a2 2e       	mov	r10, r18
     d60:	89 14       	cp	r8, r9
     d62:	58 f4       	brcc	.+22     	; 0xd7a <vfprintf+0x2d0>
     d64:	34 fe       	sbrs	r3, 4
     d66:	0b c0       	rjmp	.+22     	; 0xd7e <vfprintf+0x2d4>
     d68:	32 fc       	sbrc	r3, 2
     d6a:	09 c0       	rjmp	.+18     	; 0xd7e <vfprintf+0x2d4>
     d6c:	83 2d       	mov	r24, r3
     d6e:	8e 7e       	andi	r24, 0xEE	; 238
     d70:	a8 2e       	mov	r10, r24
     d72:	05 c0       	rjmp	.+10     	; 0xd7e <vfprintf+0x2d4>
     d74:	b8 2c       	mov	r11, r8
     d76:	a3 2c       	mov	r10, r3
     d78:	03 c0       	rjmp	.+6      	; 0xd80 <vfprintf+0x2d6>
     d7a:	b8 2c       	mov	r11, r8
     d7c:	01 c0       	rjmp	.+2      	; 0xd80 <vfprintf+0x2d6>
     d7e:	b9 2c       	mov	r11, r9
     d80:	a4 fe       	sbrs	r10, 4
     d82:	0f c0       	rjmp	.+30     	; 0xda2 <vfprintf+0x2f8>
     d84:	fe 01       	movw	r30, r28
     d86:	e8 0d       	add	r30, r8
     d88:	f1 1d       	adc	r31, r1
     d8a:	80 81       	ld	r24, Z
     d8c:	80 33       	cpi	r24, 0x30	; 48
     d8e:	21 f4       	brne	.+8      	; 0xd98 <vfprintf+0x2ee>
     d90:	9a 2d       	mov	r25, r10
     d92:	99 7e       	andi	r25, 0xE9	; 233
     d94:	a9 2e       	mov	r10, r25
     d96:	09 c0       	rjmp	.+18     	; 0xdaa <vfprintf+0x300>
     d98:	a2 fe       	sbrs	r10, 2
     d9a:	06 c0       	rjmp	.+12     	; 0xda8 <vfprintf+0x2fe>
     d9c:	b3 94       	inc	r11
     d9e:	b3 94       	inc	r11
     da0:	04 c0       	rjmp	.+8      	; 0xdaa <vfprintf+0x300>
     da2:	8a 2d       	mov	r24, r10
     da4:	86 78       	andi	r24, 0x86	; 134
     da6:	09 f0       	breq	.+2      	; 0xdaa <vfprintf+0x300>
     da8:	b3 94       	inc	r11
     daa:	a3 fc       	sbrc	r10, 3
     dac:	11 c0       	rjmp	.+34     	; 0xdd0 <vfprintf+0x326>
     dae:	a0 fe       	sbrs	r10, 0
     db0:	06 c0       	rjmp	.+12     	; 0xdbe <vfprintf+0x314>
     db2:	b2 14       	cp	r11, r2
     db4:	88 f4       	brcc	.+34     	; 0xdd8 <vfprintf+0x32e>
     db6:	28 0c       	add	r2, r8
     db8:	92 2c       	mov	r9, r2
     dba:	9b 18       	sub	r9, r11
     dbc:	0e c0       	rjmp	.+28     	; 0xdda <vfprintf+0x330>
     dbe:	b2 14       	cp	r11, r2
     dc0:	60 f4       	brcc	.+24     	; 0xdda <vfprintf+0x330>
     dc2:	b6 01       	movw	r22, r12
     dc4:	80 e2       	ldi	r24, 0x20	; 32
     dc6:	90 e0       	ldi	r25, 0x00	; 0
     dc8:	0e 94 4c 07 	call	0xe98	; 0xe98 <fputc>
     dcc:	b3 94       	inc	r11
     dce:	f7 cf       	rjmp	.-18     	; 0xdbe <vfprintf+0x314>
     dd0:	b2 14       	cp	r11, r2
     dd2:	18 f4       	brcc	.+6      	; 0xdda <vfprintf+0x330>
     dd4:	2b 18       	sub	r2, r11
     dd6:	02 c0       	rjmp	.+4      	; 0xddc <vfprintf+0x332>
     dd8:	98 2c       	mov	r9, r8
     dda:	21 2c       	mov	r2, r1
     ddc:	a4 fe       	sbrs	r10, 4
     dde:	10 c0       	rjmp	.+32     	; 0xe00 <vfprintf+0x356>
     de0:	b6 01       	movw	r22, r12
     de2:	80 e3       	ldi	r24, 0x30	; 48
     de4:	90 e0       	ldi	r25, 0x00	; 0
     de6:	0e 94 4c 07 	call	0xe98	; 0xe98 <fputc>
     dea:	a2 fe       	sbrs	r10, 2
     dec:	17 c0       	rjmp	.+46     	; 0xe1c <vfprintf+0x372>
     dee:	a1 fc       	sbrc	r10, 1
     df0:	03 c0       	rjmp	.+6      	; 0xdf8 <vfprintf+0x34e>
     df2:	88 e7       	ldi	r24, 0x78	; 120
     df4:	90 e0       	ldi	r25, 0x00	; 0
     df6:	02 c0       	rjmp	.+4      	; 0xdfc <vfprintf+0x352>
     df8:	88 e5       	ldi	r24, 0x58	; 88
     dfa:	90 e0       	ldi	r25, 0x00	; 0
     dfc:	b6 01       	movw	r22, r12
     dfe:	0c c0       	rjmp	.+24     	; 0xe18 <vfprintf+0x36e>
     e00:	8a 2d       	mov	r24, r10
     e02:	86 78       	andi	r24, 0x86	; 134
     e04:	59 f0       	breq	.+22     	; 0xe1c <vfprintf+0x372>
     e06:	a1 fe       	sbrs	r10, 1
     e08:	02 c0       	rjmp	.+4      	; 0xe0e <vfprintf+0x364>
     e0a:	8b e2       	ldi	r24, 0x2B	; 43
     e0c:	01 c0       	rjmp	.+2      	; 0xe10 <vfprintf+0x366>
     e0e:	80 e2       	ldi	r24, 0x20	; 32
     e10:	a7 fc       	sbrc	r10, 7
     e12:	8d e2       	ldi	r24, 0x2D	; 45
     e14:	b6 01       	movw	r22, r12
     e16:	90 e0       	ldi	r25, 0x00	; 0
     e18:	0e 94 4c 07 	call	0xe98	; 0xe98 <fputc>
     e1c:	89 14       	cp	r8, r9
     e1e:	38 f4       	brcc	.+14     	; 0xe2e <vfprintf+0x384>
     e20:	b6 01       	movw	r22, r12
     e22:	80 e3       	ldi	r24, 0x30	; 48
     e24:	90 e0       	ldi	r25, 0x00	; 0
     e26:	0e 94 4c 07 	call	0xe98	; 0xe98 <fputc>
     e2a:	9a 94       	dec	r9
     e2c:	f7 cf       	rjmp	.-18     	; 0xe1c <vfprintf+0x372>
     e2e:	8a 94       	dec	r8
     e30:	f3 01       	movw	r30, r6
     e32:	e8 0d       	add	r30, r8
     e34:	f1 1d       	adc	r31, r1
     e36:	80 81       	ld	r24, Z
     e38:	b6 01       	movw	r22, r12
     e3a:	90 e0       	ldi	r25, 0x00	; 0
     e3c:	0e 94 4c 07 	call	0xe98	; 0xe98 <fputc>
     e40:	81 10       	cpse	r8, r1
     e42:	f5 cf       	rjmp	.-22     	; 0xe2e <vfprintf+0x384>
     e44:	22 20       	and	r2, r2
     e46:	09 f4       	brne	.+2      	; 0xe4a <vfprintf+0x3a0>
     e48:	42 ce       	rjmp	.-892    	; 0xace <vfprintf+0x24>
     e4a:	b6 01       	movw	r22, r12
     e4c:	80 e2       	ldi	r24, 0x20	; 32
     e4e:	90 e0       	ldi	r25, 0x00	; 0
     e50:	0e 94 4c 07 	call	0xe98	; 0xe98 <fputc>
     e54:	2a 94       	dec	r2
     e56:	f6 cf       	rjmp	.-20     	; 0xe44 <vfprintf+0x39a>
     e58:	f6 01       	movw	r30, r12
     e5a:	86 81       	ldd	r24, Z+6	; 0x06
     e5c:	97 81       	ldd	r25, Z+7	; 0x07
     e5e:	02 c0       	rjmp	.+4      	; 0xe64 <vfprintf+0x3ba>
     e60:	8f ef       	ldi	r24, 0xFF	; 255
     e62:	9f ef       	ldi	r25, 0xFF	; 255
     e64:	2b 96       	adiw	r28, 0x0b	; 11
     e66:	e2 e1       	ldi	r30, 0x12	; 18
     e68:	0c 94 02 08 	jmp	0x1004	; 0x1004 <__epilogue_restores__>

00000e6c <strnlen_P>:
     e6c:	fc 01       	movw	r30, r24
     e6e:	05 90       	lpm	r0, Z+
     e70:	61 50       	subi	r22, 0x01	; 1
     e72:	70 40       	sbci	r23, 0x00	; 0
     e74:	01 10       	cpse	r0, r1
     e76:	d8 f7       	brcc	.-10     	; 0xe6e <strnlen_P+0x2>
     e78:	80 95       	com	r24
     e7a:	90 95       	com	r25
     e7c:	8e 0f       	add	r24, r30
     e7e:	9f 1f       	adc	r25, r31
     e80:	08 95       	ret

00000e82 <strnlen>:
     e82:	fc 01       	movw	r30, r24
     e84:	61 50       	subi	r22, 0x01	; 1
     e86:	70 40       	sbci	r23, 0x00	; 0
     e88:	01 90       	ld	r0, Z+
     e8a:	01 10       	cpse	r0, r1
     e8c:	d8 f7       	brcc	.-10     	; 0xe84 <strnlen+0x2>
     e8e:	80 95       	com	r24
     e90:	90 95       	com	r25
     e92:	8e 0f       	add	r24, r30
     e94:	9f 1f       	adc	r25, r31
     e96:	08 95       	ret

00000e98 <fputc>:
     e98:	0f 93       	push	r16
     e9a:	1f 93       	push	r17
     e9c:	cf 93       	push	r28
     e9e:	df 93       	push	r29
     ea0:	fb 01       	movw	r30, r22
     ea2:	23 81       	ldd	r18, Z+3	; 0x03
     ea4:	21 fd       	sbrc	r18, 1
     ea6:	03 c0       	rjmp	.+6      	; 0xeae <fputc+0x16>
     ea8:	8f ef       	ldi	r24, 0xFF	; 255
     eaa:	9f ef       	ldi	r25, 0xFF	; 255
     eac:	2c c0       	rjmp	.+88     	; 0xf06 <fputc+0x6e>
     eae:	22 ff       	sbrs	r18, 2
     eb0:	16 c0       	rjmp	.+44     	; 0xede <fputc+0x46>
     eb2:	46 81       	ldd	r20, Z+6	; 0x06
     eb4:	57 81       	ldd	r21, Z+7	; 0x07
     eb6:	24 81       	ldd	r18, Z+4	; 0x04
     eb8:	35 81       	ldd	r19, Z+5	; 0x05
     eba:	42 17       	cp	r20, r18
     ebc:	53 07       	cpc	r21, r19
     ebe:	44 f4       	brge	.+16     	; 0xed0 <fputc+0x38>
     ec0:	a0 81       	ld	r26, Z
     ec2:	b1 81       	ldd	r27, Z+1	; 0x01
     ec4:	9d 01       	movw	r18, r26
     ec6:	2f 5f       	subi	r18, 0xFF	; 255
     ec8:	3f 4f       	sbci	r19, 0xFF	; 255
     eca:	31 83       	std	Z+1, r19	; 0x01
     ecc:	20 83       	st	Z, r18
     ece:	8c 93       	st	X, r24
     ed0:	26 81       	ldd	r18, Z+6	; 0x06
     ed2:	37 81       	ldd	r19, Z+7	; 0x07
     ed4:	2f 5f       	subi	r18, 0xFF	; 255
     ed6:	3f 4f       	sbci	r19, 0xFF	; 255
     ed8:	37 83       	std	Z+7, r19	; 0x07
     eda:	26 83       	std	Z+6, r18	; 0x06
     edc:	14 c0       	rjmp	.+40     	; 0xf06 <fputc+0x6e>
     ede:	8b 01       	movw	r16, r22
     ee0:	ec 01       	movw	r28, r24
     ee2:	fb 01       	movw	r30, r22
     ee4:	00 84       	ldd	r0, Z+8	; 0x08
     ee6:	f1 85       	ldd	r31, Z+9	; 0x09
     ee8:	e0 2d       	mov	r30, r0
     eea:	09 95       	icall
     eec:	89 2b       	or	r24, r25
     eee:	e1 f6       	brne	.-72     	; 0xea8 <fputc+0x10>
     ef0:	d8 01       	movw	r26, r16
     ef2:	16 96       	adiw	r26, 0x06	; 6
     ef4:	8d 91       	ld	r24, X+
     ef6:	9c 91       	ld	r25, X
     ef8:	17 97       	sbiw	r26, 0x07	; 7
     efa:	01 96       	adiw	r24, 0x01	; 1
     efc:	17 96       	adiw	r26, 0x07	; 7
     efe:	9c 93       	st	X, r25
     f00:	8e 93       	st	-X, r24
     f02:	16 97       	sbiw	r26, 0x06	; 6
     f04:	ce 01       	movw	r24, r28
     f06:	df 91       	pop	r29
     f08:	cf 91       	pop	r28
     f0a:	1f 91       	pop	r17
     f0c:	0f 91       	pop	r16
     f0e:	08 95       	ret

00000f10 <__ultoa_invert>:
     f10:	fa 01       	movw	r30, r20
     f12:	aa 27       	eor	r26, r26
     f14:	28 30       	cpi	r18, 0x08	; 8
     f16:	51 f1       	breq	.+84     	; 0xf6c <__ultoa_invert+0x5c>
     f18:	20 31       	cpi	r18, 0x10	; 16
     f1a:	81 f1       	breq	.+96     	; 0xf7c <__ultoa_invert+0x6c>
     f1c:	e8 94       	clt
     f1e:	6f 93       	push	r22
     f20:	6e 7f       	andi	r22, 0xFE	; 254
     f22:	6e 5f       	subi	r22, 0xFE	; 254
     f24:	7f 4f       	sbci	r23, 0xFF	; 255
     f26:	8f 4f       	sbci	r24, 0xFF	; 255
     f28:	9f 4f       	sbci	r25, 0xFF	; 255
     f2a:	af 4f       	sbci	r26, 0xFF	; 255
     f2c:	b1 e0       	ldi	r27, 0x01	; 1
     f2e:	3e d0       	rcall	.+124    	; 0xfac <__ultoa_invert+0x9c>
     f30:	b4 e0       	ldi	r27, 0x04	; 4
     f32:	3c d0       	rcall	.+120    	; 0xfac <__ultoa_invert+0x9c>
     f34:	67 0f       	add	r22, r23
     f36:	78 1f       	adc	r23, r24
     f38:	89 1f       	adc	r24, r25
     f3a:	9a 1f       	adc	r25, r26
     f3c:	a1 1d       	adc	r26, r1
     f3e:	68 0f       	add	r22, r24
     f40:	79 1f       	adc	r23, r25
     f42:	8a 1f       	adc	r24, r26
     f44:	91 1d       	adc	r25, r1
     f46:	a1 1d       	adc	r26, r1
     f48:	6a 0f       	add	r22, r26
     f4a:	71 1d       	adc	r23, r1
     f4c:	81 1d       	adc	r24, r1
     f4e:	91 1d       	adc	r25, r1
     f50:	a1 1d       	adc	r26, r1
     f52:	20 d0       	rcall	.+64     	; 0xf94 <__ultoa_invert+0x84>
     f54:	09 f4       	brne	.+2      	; 0xf58 <__ultoa_invert+0x48>
     f56:	68 94       	set
     f58:	3f 91       	pop	r19
     f5a:	2a e0       	ldi	r18, 0x0A	; 10
     f5c:	26 9f       	mul	r18, r22
     f5e:	11 24       	eor	r1, r1
     f60:	30 19       	sub	r19, r0
     f62:	30 5d       	subi	r19, 0xD0	; 208
     f64:	31 93       	st	Z+, r19
     f66:	de f6       	brtc	.-74     	; 0xf1e <__ultoa_invert+0xe>
     f68:	cf 01       	movw	r24, r30
     f6a:	08 95       	ret
     f6c:	46 2f       	mov	r20, r22
     f6e:	47 70       	andi	r20, 0x07	; 7
     f70:	40 5d       	subi	r20, 0xD0	; 208
     f72:	41 93       	st	Z+, r20
     f74:	b3 e0       	ldi	r27, 0x03	; 3
     f76:	0f d0       	rcall	.+30     	; 0xf96 <__ultoa_invert+0x86>
     f78:	c9 f7       	brne	.-14     	; 0xf6c <__ultoa_invert+0x5c>
     f7a:	f6 cf       	rjmp	.-20     	; 0xf68 <__ultoa_invert+0x58>
     f7c:	46 2f       	mov	r20, r22
     f7e:	4f 70       	andi	r20, 0x0F	; 15
     f80:	40 5d       	subi	r20, 0xD0	; 208
     f82:	4a 33       	cpi	r20, 0x3A	; 58
     f84:	18 f0       	brcs	.+6      	; 0xf8c <__ultoa_invert+0x7c>
     f86:	49 5d       	subi	r20, 0xD9	; 217
     f88:	31 fd       	sbrc	r19, 1
     f8a:	40 52       	subi	r20, 0x20	; 32
     f8c:	41 93       	st	Z+, r20
     f8e:	02 d0       	rcall	.+4      	; 0xf94 <__ultoa_invert+0x84>
     f90:	a9 f7       	brne	.-22     	; 0xf7c <__ultoa_invert+0x6c>
     f92:	ea cf       	rjmp	.-44     	; 0xf68 <__ultoa_invert+0x58>
     f94:	b4 e0       	ldi	r27, 0x04	; 4
     f96:	a6 95       	lsr	r26
     f98:	97 95       	ror	r25
     f9a:	87 95       	ror	r24
     f9c:	77 95       	ror	r23
     f9e:	67 95       	ror	r22
     fa0:	ba 95       	dec	r27
     fa2:	c9 f7       	brne	.-14     	; 0xf96 <__ultoa_invert+0x86>
     fa4:	00 97       	sbiw	r24, 0x00	; 0
     fa6:	61 05       	cpc	r22, r1
     fa8:	71 05       	cpc	r23, r1
     faa:	08 95       	ret
     fac:	9b 01       	movw	r18, r22
     fae:	ac 01       	movw	r20, r24
     fb0:	0a 2e       	mov	r0, r26
     fb2:	06 94       	lsr	r0
     fb4:	57 95       	ror	r21
     fb6:	47 95       	ror	r20
     fb8:	37 95       	ror	r19
     fba:	27 95       	ror	r18
     fbc:	ba 95       	dec	r27
     fbe:	c9 f7       	brne	.-14     	; 0xfb2 <__ultoa_invert+0xa2>
     fc0:	62 0f       	add	r22, r18
     fc2:	73 1f       	adc	r23, r19
     fc4:	84 1f       	adc	r24, r20
     fc6:	95 1f       	adc	r25, r21
     fc8:	a0 1d       	adc	r26, r0
     fca:	08 95       	ret

00000fcc <__prologue_saves__>:
     fcc:	2f 92       	push	r2
     fce:	3f 92       	push	r3
     fd0:	4f 92       	push	r4
     fd2:	5f 92       	push	r5
     fd4:	6f 92       	push	r6
     fd6:	7f 92       	push	r7
     fd8:	8f 92       	push	r8
     fda:	9f 92       	push	r9
     fdc:	af 92       	push	r10
     fde:	bf 92       	push	r11
     fe0:	cf 92       	push	r12
     fe2:	df 92       	push	r13
     fe4:	ef 92       	push	r14
     fe6:	ff 92       	push	r15
     fe8:	0f 93       	push	r16
     fea:	1f 93       	push	r17
     fec:	cf 93       	push	r28
     fee:	df 93       	push	r29
     ff0:	cd b7       	in	r28, 0x3d	; 61
     ff2:	de b7       	in	r29, 0x3e	; 62
     ff4:	ca 1b       	sub	r28, r26
     ff6:	db 0b       	sbc	r29, r27
     ff8:	0f b6       	in	r0, 0x3f	; 63
     ffa:	f8 94       	cli
     ffc:	de bf       	out	0x3e, r29	; 62
     ffe:	0f be       	out	0x3f, r0	; 63
    1000:	cd bf       	out	0x3d, r28	; 61
    1002:	09 94       	ijmp

00001004 <__epilogue_restores__>:
    1004:	2a 88       	ldd	r2, Y+18	; 0x12
    1006:	39 88       	ldd	r3, Y+17	; 0x11
    1008:	48 88       	ldd	r4, Y+16	; 0x10
    100a:	5f 84       	ldd	r5, Y+15	; 0x0f
    100c:	6e 84       	ldd	r6, Y+14	; 0x0e
    100e:	7d 84       	ldd	r7, Y+13	; 0x0d
    1010:	8c 84       	ldd	r8, Y+12	; 0x0c
    1012:	9b 84       	ldd	r9, Y+11	; 0x0b
    1014:	aa 84       	ldd	r10, Y+10	; 0x0a
    1016:	b9 84       	ldd	r11, Y+9	; 0x09
    1018:	c8 84       	ldd	r12, Y+8	; 0x08
    101a:	df 80       	ldd	r13, Y+7	; 0x07
    101c:	ee 80       	ldd	r14, Y+6	; 0x06
    101e:	fd 80       	ldd	r15, Y+5	; 0x05
    1020:	0c 81       	ldd	r16, Y+4	; 0x04
    1022:	1b 81       	ldd	r17, Y+3	; 0x03
    1024:	aa 81       	ldd	r26, Y+2	; 0x02
    1026:	b9 81       	ldd	r27, Y+1	; 0x01
    1028:	ce 0f       	add	r28, r30
    102a:	d1 1d       	adc	r29, r1
    102c:	0f b6       	in	r0, 0x3f	; 63
    102e:	f8 94       	cli
    1030:	de bf       	out	0x3e, r29	; 62
    1032:	0f be       	out	0x3f, r0	; 63
    1034:	cd bf       	out	0x3d, r28	; 61
    1036:	ed 01       	movw	r28, r26
    1038:	08 95       	ret

0000103a <_exit>:
    103a:	f8 94       	cli

0000103c <__stop_program>:
    103c:	ff cf       	rjmp	.-2      	; 0x103c <__stop_program>
